
Debug/snake:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 * STARTUP
 */
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 fc7c 	bl	20000900 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <ascii_ctrl_bit_set>:
#define B_RW     2
#define B_RS     1

//ASCII------------------------------
void ascii_ctrl_bit_set ( char x )
{
20000010:	b580      	push	{r7, lr}
20000012:	b084      	sub	sp, #16
20000014:	af00      	add	r7, sp, #0
20000016:	0002      	movs	r2, r0
20000018:	1dfb      	adds	r3, r7, #7
2000001a:	701a      	strb	r2, [r3, #0]
	char c;
	c = GPIO_E.odrLow;
2000001c:	4a09      	ldr	r2, [pc, #36]	; (20000044 <ascii_ctrl_bit_set+0x34>)
2000001e:	210f      	movs	r1, #15
20000020:	187b      	adds	r3, r7, r1
20000022:	7d12      	ldrb	r2, [r2, #20]
20000024:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrLow = B_SELECT | x | c;
20000026:	1dfa      	adds	r2, r7, #7
20000028:	187b      	adds	r3, r7, r1
2000002a:	7812      	ldrb	r2, [r2, #0]
2000002c:	781b      	ldrb	r3, [r3, #0]
2000002e:	4313      	orrs	r3, r2
20000030:	b2db      	uxtb	r3, r3
20000032:	4a04      	ldr	r2, [pc, #16]	; (20000044 <ascii_ctrl_bit_set+0x34>)
20000034:	2104      	movs	r1, #4
20000036:	430b      	orrs	r3, r1
20000038:	b2db      	uxtb	r3, r3
2000003a:	7513      	strb	r3, [r2, #20]
}
2000003c:	46c0      	nop			; (mov r8, r8)
2000003e:	46bd      	mov	sp, r7
20000040:	b004      	add	sp, #16
20000042:	bd80      	pop	{r7, pc}
20000044:	40021000 	andmi	r1, r2, r0

20000048 <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear ( char x )
{
20000048:	b580      	push	{r7, lr}
2000004a:	b084      	sub	sp, #16
2000004c:	af00      	add	r7, sp, #0
2000004e:	0002      	movs	r2, r0
20000050:	1dfb      	adds	r3, r7, #7
20000052:	701a      	strb	r2, [r3, #0]
	char c;
	c = GPIO_E.odrLow;
20000054:	4a0d      	ldr	r2, [pc, #52]	; (2000008c <ascii_ctrl_bit_clear+0x44>)
20000056:	210f      	movs	r1, #15
20000058:	187b      	adds	r3, r7, r1
2000005a:	7d12      	ldrb	r2, [r2, #20]
2000005c:	701a      	strb	r2, [r3, #0]
	c = c & ~x;
2000005e:	1dfb      	adds	r3, r7, #7
20000060:	781b      	ldrb	r3, [r3, #0]
20000062:	b25b      	sxtb	r3, r3
20000064:	43db      	mvns	r3, r3
20000066:	b25b      	sxtb	r3, r3
20000068:	187a      	adds	r2, r7, r1
2000006a:	7812      	ldrb	r2, [r2, #0]
2000006c:	b252      	sxtb	r2, r2
2000006e:	4013      	ands	r3, r2
20000070:	b25a      	sxtb	r2, r3
20000072:	187b      	adds	r3, r7, r1
20000074:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrLow = B_SELECT | c;
20000076:	4a05      	ldr	r2, [pc, #20]	; (2000008c <ascii_ctrl_bit_clear+0x44>)
20000078:	187b      	adds	r3, r7, r1
2000007a:	781b      	ldrb	r3, [r3, #0]
2000007c:	2104      	movs	r1, #4
2000007e:	430b      	orrs	r3, r1
20000080:	b2db      	uxtb	r3, r3
20000082:	7513      	strb	r3, [r2, #20]
}
20000084:	46c0      	nop			; (mov r8, r8)
20000086:	46bd      	mov	sp, r7
20000088:	b004      	add	sp, #16
2000008a:	bd80      	pop	{r7, pc}
2000008c:	40021000 	andmi	r1, r2, r0

20000090 <ascii_write_controller>:
//time sensitive functions
void ascii_write_controller ( unsigned char c )
{
20000090:	b580      	push	{r7, lr}
20000092:	b082      	sub	sp, #8
20000094:	af00      	add	r7, sp, #0
20000096:	0002      	movs	r2, r0
20000098:	1dfb      	adds	r3, r7, #7
2000009a:	701a      	strb	r2, [r3, #0]
	//delay 40ns (small delay, no need)
	ascii_ctrl_bit_set(B_E);
2000009c:	2040      	movs	r0, #64	; 0x40
2000009e:	f7ff ffb7 	bl	20000010 <ascii_ctrl_bit_set>
	GPIO_E.odrHigh = c;
200000a2:	4a06      	ldr	r2, [pc, #24]	; (200000bc <ascii_write_controller+0x2c>)
200000a4:	1dfb      	adds	r3, r7, #7
200000a6:	781b      	ldrb	r3, [r3, #0]
200000a8:	7553      	strb	r3, [r2, #21]
	delay_250ns();
200000aa:	f000 f939 	bl	20000320 <delay_250ns>
	ascii_ctrl_bit_clear(B_E);
200000ae:	2040      	movs	r0, #64	; 0x40
200000b0:	f7ff ffca 	bl	20000048 <ascii_ctrl_bit_clear>
	//delay 10ns
}
200000b4:	46c0      	nop			; (mov r8, r8)
200000b6:	46bd      	mov	sp, r7
200000b8:	b002      	add	sp, #8
200000ba:	bd80      	pop	{r7, pc}
200000bc:	40021000 	andmi	r1, r2, r0

200000c0 <ascii_read_controller>:

char ascii_read_controller ( void )
{
200000c0:	b580      	push	{r7, lr}
200000c2:	b082      	sub	sp, #8
200000c4:	af00      	add	r7, sp, #0
	char c;
	ascii_ctrl_bit_set(B_E);
200000c6:	2040      	movs	r0, #64	; 0x40
200000c8:	f7ff ffa2 	bl	20000010 <ascii_ctrl_bit_set>
	delay_250ns;
	delay_250ns;
	c=GPIO_E.idrHigh;
200000cc:	4a06      	ldr	r2, [pc, #24]	; (200000e8 <ascii_read_controller+0x28>)
200000ce:	1dfb      	adds	r3, r7, #7
200000d0:	7c52      	ldrb	r2, [r2, #17]
200000d2:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_E);
200000d4:	2040      	movs	r0, #64	; 0x40
200000d6:	f7ff ffb7 	bl	20000048 <ascii_ctrl_bit_clear>
	return c;
200000da:	1dfb      	adds	r3, r7, #7
200000dc:	781b      	ldrb	r3, [r3, #0]
}
200000de:	0018      	movs	r0, r3
200000e0:	46bd      	mov	sp, r7
200000e2:	b002      	add	sp, #8
200000e4:	bd80      	pop	{r7, pc}
200000e6:	46c0      	nop			; (mov r8, r8)
200000e8:	40021000 	andmi	r1, r2, r0

200000ec <ascii_write_cmd>:
//other
void ascii_write_cmd( unsigned char c ) 
{
200000ec:	b580      	push	{r7, lr}
200000ee:	b082      	sub	sp, #8
200000f0:	af00      	add	r7, sp, #0
200000f2:	0002      	movs	r2, r0
200000f4:	1dfb      	adds	r3, r7, #7
200000f6:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
200000f8:	2001      	movs	r0, #1
200000fa:	f7ff ffa5 	bl	20000048 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
200000fe:	2002      	movs	r0, #2
20000100:	f7ff ffa2 	bl	20000048 <ascii_ctrl_bit_clear>
	ascii_write_controller(c);
20000104:	1dfb      	adds	r3, r7, #7
20000106:	781b      	ldrb	r3, [r3, #0]
20000108:	0018      	movs	r0, r3
2000010a:	f7ff ffc1 	bl	20000090 <ascii_write_controller>
}
2000010e:	46c0      	nop			; (mov r8, r8)
20000110:	46bd      	mov	sp, r7
20000112:	b002      	add	sp, #8
20000114:	bd80      	pop	{r7, pc}

20000116 <ascii_write_data>:

void ascii_write_data( unsigned char c ) 
{
20000116:	b580      	push	{r7, lr}
20000118:	b082      	sub	sp, #8
2000011a:	af00      	add	r7, sp, #0
2000011c:	0002      	movs	r2, r0
2000011e:	1dfb      	adds	r3, r7, #7
20000120:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
20000122:	2001      	movs	r0, #1
20000124:	f7ff ff74 	bl	20000010 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RW);
20000128:	2002      	movs	r0, #2
2000012a:	f7ff ff8d 	bl	20000048 <ascii_ctrl_bit_clear>
	ascii_write_controller(c);
2000012e:	1dfb      	adds	r3, r7, #7
20000130:	781b      	ldrb	r3, [r3, #0]
20000132:	0018      	movs	r0, r3
20000134:	f7ff ffac 	bl	20000090 <ascii_write_controller>
}
20000138:	46c0      	nop			; (mov r8, r8)
2000013a:	46bd      	mov	sp, r7
2000013c:	b002      	add	sp, #8
2000013e:	bd80      	pop	{r7, pc}

20000140 <ascii_read_status>:

unsigned char ascii_read_status ( void )
{
20000140:	b590      	push	{r4, r7, lr}
20000142:	b083      	sub	sp, #12
20000144:	af00      	add	r7, sp, #0
	char c;
	GPIO_E.moder = 0x00005555;
20000146:	4b0b      	ldr	r3, [pc, #44]	; (20000174 <ascii_read_status+0x34>)
20000148:	4a0b      	ldr	r2, [pc, #44]	; (20000178 <ascii_read_status+0x38>)
2000014a:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RW);
2000014c:	2002      	movs	r0, #2
2000014e:	f7ff ff5f 	bl	20000010 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RS);
20000152:	2001      	movs	r0, #1
20000154:	f7ff ff78 	bl	20000048 <ascii_ctrl_bit_clear>
	c = ascii_read_controller();
20000158:	1dfc      	adds	r4, r7, #7
2000015a:	f7ff ffb1 	bl	200000c0 <ascii_read_controller>
2000015e:	0003      	movs	r3, r0
20000160:	7023      	strb	r3, [r4, #0]
	
	GPIO_E.moder = 0x55555555;
20000162:	4b04      	ldr	r3, [pc, #16]	; (20000174 <ascii_read_status+0x34>)
20000164:	4a05      	ldr	r2, [pc, #20]	; (2000017c <ascii_read_status+0x3c>)
20000166:	601a      	str	r2, [r3, #0]
	return c;
20000168:	1dfb      	adds	r3, r7, #7
2000016a:	781b      	ldrb	r3, [r3, #0]
}
2000016c:	0018      	movs	r0, r3
2000016e:	46bd      	mov	sp, r7
20000170:	b003      	add	sp, #12
20000172:	bd90      	pop	{r4, r7, pc}
20000174:	40021000 	andmi	r1, r2, r0
20000178:	00005555 	andeq	r5, r0, r5, asr r5
2000017c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000180 <ascii_read_data>:

unsigned char ascii_read_data ( void )
{
20000180:	b590      	push	{r4, r7, lr}
20000182:	b083      	sub	sp, #12
20000184:	af00      	add	r7, sp, #0
	GPIO_E.moder &= 0x0000FFFF;
20000186:	4b0e      	ldr	r3, [pc, #56]	; (200001c0 <ascii_read_data+0x40>)
20000188:	681a      	ldr	r2, [r3, #0]
2000018a:	4b0d      	ldr	r3, [pc, #52]	; (200001c0 <ascii_read_data+0x40>)
2000018c:	0412      	lsls	r2, r2, #16
2000018e:	0c12      	lsrs	r2, r2, #16
20000190:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
20000192:	2001      	movs	r0, #1
20000194:	f7ff ff3c 	bl	20000010 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_set(B_RW);
20000198:	2002      	movs	r0, #2
2000019a:	f7ff ff39 	bl	20000010 <ascii_ctrl_bit_set>
	char c = ascii_read_controller();
2000019e:	1dfc      	adds	r4, r7, #7
200001a0:	f7ff ff8e 	bl	200000c0 <ascii_read_controller>
200001a4:	0003      	movs	r3, r0
200001a6:	7023      	strb	r3, [r4, #0]
	GPIO_E.moder |= 0x55550000;
200001a8:	4b05      	ldr	r3, [pc, #20]	; (200001c0 <ascii_read_data+0x40>)
200001aa:	681a      	ldr	r2, [r3, #0]
200001ac:	4b04      	ldr	r3, [pc, #16]	; (200001c0 <ascii_read_data+0x40>)
200001ae:	4905      	ldr	r1, [pc, #20]	; (200001c4 <ascii_read_data+0x44>)
200001b0:	430a      	orrs	r2, r1
200001b2:	601a      	str	r2, [r3, #0]
	return c;
200001b4:	1dfb      	adds	r3, r7, #7
200001b6:	781b      	ldrb	r3, [r3, #0]
}
200001b8:	0018      	movs	r0, r3
200001ba:	46bd      	mov	sp, r7
200001bc:	b003      	add	sp, #12
200001be:	bd90      	pop	{r4, r7, pc}
200001c0:	40021000 	andmi	r1, r2, r0
200001c4:	55550000 	ldrbpl	r0, [r5, #-0]

200001c8 <ascii_command>:

void ascii_command( unsigned char command )
{
200001c8:	b580      	push	{r7, lr}
200001ca:	b082      	sub	sp, #8
200001cc:	af00      	add	r7, sp, #0
200001ce:	0002      	movs	r2, r0
200001d0:	1dfb      	adds	r3, r7, #7
200001d2:	701a      	strb	r2, [r3, #0]
	while( (ascii_read_status() & 0x80) == 0x80 ){}
200001d4:	46c0      	nop			; (mov r8, r8)
200001d6:	f7ff ffb3 	bl	20000140 <ascii_read_status>
200001da:	0003      	movs	r3, r0
200001dc:	001a      	movs	r2, r3
200001de:	2380      	movs	r3, #128	; 0x80
200001e0:	4013      	ands	r3, r2
200001e2:	2b80      	cmp	r3, #128	; 0x80
200001e4:	d0f7      	beq.n	200001d6 <ascii_command+0xe>
	delay_micro(8);
200001e6:	2008      	movs	r0, #8
200001e8:	f000 f8bc 	bl	20000364 <delay_micro>
	ascii_write_cmd(command);
200001ec:	1dfb      	adds	r3, r7, #7
200001ee:	781b      	ldrb	r3, [r3, #0]
200001f0:	0018      	movs	r0, r3
200001f2:	f7ff ff7b 	bl	200000ec <ascii_write_cmd>
}
200001f6:	46c0      	nop			; (mov r8, r8)
200001f8:	46bd      	mov	sp, r7
200001fa:	b002      	add	sp, #8
200001fc:	bd80      	pop	{r7, pc}

200001fe <ascii_init>:

void ascii_init (void) {
200001fe:	b580      	push	{r7, lr}
20000200:	af00      	add	r7, sp, #0
	// function set (2 rows and font size)
	ascii_command(0x38);
20000202:	2038      	movs	r0, #56	; 0x38
20000204:	f7ff ffe0 	bl	200001c8 <ascii_command>
	delay_micro(39);
20000208:	2027      	movs	r0, #39	; 0x27
2000020a:	f000 f8ab 	bl	20000364 <delay_micro>
	// turn on display & cursor constant
	ascii_command(0xE);
2000020e:	200e      	movs	r0, #14
20000210:	f7ff ffda 	bl	200001c8 <ascii_command>
	delay_micro(39);
20000214:	2027      	movs	r0, #39	; 0x27
20000216:	f000 f8a5 	bl	20000364 <delay_micro>
	// clear screen
	ascii_command(1);
2000021a:	2001      	movs	r0, #1
2000021c:	f7ff ffd4 	bl	200001c8 <ascii_command>
	delay_milli(2);
20000220:	2002      	movs	r0, #2
20000222:	f000 f8c5 	bl	200003b0 <delay_milli>
	//adressing with inc.
	ascii_command(6);
20000226:	2006      	movs	r0, #6
20000228:	f7ff ffce 	bl	200001c8 <ascii_command>
	delay_micro(39);
2000022c:	2027      	movs	r0, #39	; 0x27
2000022e:	f000 f899 	bl	20000364 <delay_micro>
}
20000232:	46c0      	nop			; (mov r8, r8)
20000234:	46bd      	mov	sp, r7
20000236:	bd80      	pop	{r7, pc}

20000238 <ascii_write_char>:

void ascii_write_char(char c)
{
20000238:	b580      	push	{r7, lr}
2000023a:	b082      	sub	sp, #8
2000023c:	af00      	add	r7, sp, #0
2000023e:	0002      	movs	r2, r0
20000240:	1dfb      	adds	r3, r7, #7
20000242:	701a      	strb	r2, [r3, #0]
	while( (ascii_read_status() & 0x80) == 0x80 ){}
20000244:	46c0      	nop			; (mov r8, r8)
20000246:	f7ff ff7b 	bl	20000140 <ascii_read_status>
2000024a:	0003      	movs	r3, r0
2000024c:	001a      	movs	r2, r3
2000024e:	2380      	movs	r3, #128	; 0x80
20000250:	4013      	ands	r3, r2
20000252:	2b80      	cmp	r3, #128	; 0x80
20000254:	d0f7      	beq.n	20000246 <ascii_write_char+0xe>
	delay_micro(8);
20000256:	2008      	movs	r0, #8
20000258:	f000 f884 	bl	20000364 <delay_micro>
	ascii_write_data(c);
2000025c:	1dfb      	adds	r3, r7, #7
2000025e:	781b      	ldrb	r3, [r3, #0]
20000260:	0018      	movs	r0, r3
20000262:	f7ff ff58 	bl	20000116 <ascii_write_data>
	delay_micro(43);
20000266:	202b      	movs	r0, #43	; 0x2b
20000268:	f000 f87c 	bl	20000364 <delay_micro>
}
2000026c:	46c0      	nop			; (mov r8, r8)
2000026e:	46bd      	mov	sp, r7
20000270:	b002      	add	sp, #8
20000272:	bd80      	pop	{r7, pc}

20000274 <ascii_gotxy>:

void ascii_gotxy(unsigned char row, unsigned char column)
{
20000274:	b580      	push	{r7, lr}
20000276:	b084      	sub	sp, #16
20000278:	af00      	add	r7, sp, #0
2000027a:	0002      	movs	r2, r0
2000027c:	1dfb      	adds	r3, r7, #7
2000027e:	701a      	strb	r2, [r3, #0]
20000280:	1dbb      	adds	r3, r7, #6
20000282:	1c0a      	adds	r2, r1, #0
20000284:	701a      	strb	r2, [r3, #0]
	char adr = row-1;
20000286:	210f      	movs	r1, #15
20000288:	187b      	adds	r3, r7, r1
2000028a:	1dfa      	adds	r2, r7, #7
2000028c:	7812      	ldrb	r2, [r2, #0]
2000028e:	3a01      	subs	r2, #1
20000290:	701a      	strb	r2, [r3, #0]
	if(column == 2) adr = adr + 0x40;
20000292:	1dbb      	adds	r3, r7, #6
20000294:	781b      	ldrb	r3, [r3, #0]
20000296:	2b02      	cmp	r3, #2
20000298:	d104      	bne.n	200002a4 <ascii_gotxy+0x30>
2000029a:	187b      	adds	r3, r7, r1
2000029c:	187a      	adds	r2, r7, r1
2000029e:	7812      	ldrb	r2, [r2, #0]
200002a0:	3240      	adds	r2, #64	; 0x40
200002a2:	701a      	strb	r2, [r3, #0]
	ascii_write_cmd ( 0x80 | adr );
200002a4:	230f      	movs	r3, #15
200002a6:	18fb      	adds	r3, r7, r3
200002a8:	781b      	ldrb	r3, [r3, #0]
200002aa:	2280      	movs	r2, #128	; 0x80
200002ac:	4252      	negs	r2, r2
200002ae:	4313      	orrs	r3, r2
200002b0:	b2db      	uxtb	r3, r3
200002b2:	0018      	movs	r0, r3
200002b4:	f7ff ff1a 	bl	200000ec <ascii_write_cmd>
}
200002b8:	46c0      	nop			; (mov r8, r8)
200002ba:	46bd      	mov	sp, r7
200002bc:	b004      	add	sp, #16
200002be:	bd80      	pop	{r7, pc}

200002c0 <write_ascii>:
/*
 * main function
 */
int write_ascii(char line1[], char line2[])
{
200002c0:	b580      	push	{r7, lr}
200002c2:	b084      	sub	sp, #16
200002c4:	af00      	add	r7, sp, #0
200002c6:	6078      	str	r0, [r7, #4]
200002c8:	6039      	str	r1, [r7, #0]
	char *s;
	ascii_init();
200002ca:	f7ff ff98 	bl	200001fe <ascii_init>
	ascii_gotxy(1,1);
200002ce:	2101      	movs	r1, #1
200002d0:	2001      	movs	r0, #1
200002d2:	f7ff ffcf 	bl	20000274 <ascii_gotxy>
	s = line1;
200002d6:	687b      	ldr	r3, [r7, #4]
200002d8:	60fb      	str	r3, [r7, #12]
	while( *s ) {
200002da:	e006      	b.n	200002ea <write_ascii+0x2a>
		ascii_write_char(*s++);
200002dc:	68fb      	ldr	r3, [r7, #12]
200002de:	1c5a      	adds	r2, r3, #1
200002e0:	60fa      	str	r2, [r7, #12]
200002e2:	781b      	ldrb	r3, [r3, #0]
200002e4:	0018      	movs	r0, r3
200002e6:	f7ff ffa7 	bl	20000238 <ascii_write_char>
	while( *s ) {
200002ea:	68fb      	ldr	r3, [r7, #12]
200002ec:	781b      	ldrb	r3, [r3, #0]
200002ee:	2b00      	cmp	r3, #0
200002f0:	d1f4      	bne.n	200002dc <write_ascii+0x1c>
	}
	ascii_gotxy(1,2);
200002f2:	2102      	movs	r1, #2
200002f4:	2001      	movs	r0, #1
200002f6:	f7ff ffbd 	bl	20000274 <ascii_gotxy>
	s = line2;
200002fa:	683b      	ldr	r3, [r7, #0]
200002fc:	60fb      	str	r3, [r7, #12]
	while( *s ) {
200002fe:	e006      	b.n	2000030e <write_ascii+0x4e>
		ascii_write_char(*s++);
20000300:	68fb      	ldr	r3, [r7, #12]
20000302:	1c5a      	adds	r2, r3, #1
20000304:	60fa      	str	r2, [r7, #12]
20000306:	781b      	ldrb	r3, [r3, #0]
20000308:	0018      	movs	r0, r3
2000030a:	f7ff ff95 	bl	20000238 <ascii_write_char>
	while( *s ) {
2000030e:	68fb      	ldr	r3, [r7, #12]
20000310:	781b      	ldrb	r3, [r3, #0]
20000312:	2b00      	cmp	r3, #0
20000314:	d1f4      	bne.n	20000300 <write_ascii+0x40>
	}
	return 0;
20000316:	2300      	movs	r3, #0
}
20000318:	0018      	movs	r0, r3
2000031a:	46bd      	mov	sp, r7
2000031c:	b004      	add	sp, #16
2000031e:	bd80      	pop	{r7, pc}

20000320 <delay_250ns>:
#include "declarations.h"
/*
 * SYS_TICK
 */
void delay_250ns( void )
{
20000320:	b580      	push	{r7, lr}
20000322:	af00      	add	r7, sp, #0
/* SystemCoreClock = 168000000 */
	*STK_CTRL = 0;
20000324:	4b0c      	ldr	r3, [pc, #48]	; (20000358 <delay_250ns+0x38>)
20000326:	2200      	movs	r2, #0
20000328:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/4) -1 );
2000032a:	4b0c      	ldr	r3, [pc, #48]	; (2000035c <delay_250ns+0x3c>)
2000032c:	2229      	movs	r2, #41	; 0x29
2000032e:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
20000330:	4b0b      	ldr	r3, [pc, #44]	; (20000360 <delay_250ns+0x40>)
20000332:	2200      	movs	r2, #0
20000334:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
20000336:	4b08      	ldr	r3, [pc, #32]	; (20000358 <delay_250ns+0x38>)
20000338:	2205      	movs	r2, #5
2000033a:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000 )== 0 );
2000033c:	46c0      	nop			; (mov r8, r8)
2000033e:	4b06      	ldr	r3, [pc, #24]	; (20000358 <delay_250ns+0x38>)
20000340:	681a      	ldr	r2, [r3, #0]
20000342:	2380      	movs	r3, #128	; 0x80
20000344:	025b      	lsls	r3, r3, #9
20000346:	4013      	ands	r3, r2
20000348:	d0f9      	beq.n	2000033e <delay_250ns+0x1e>
	*STK_CTRL = 0;
2000034a:	4b03      	ldr	r3, [pc, #12]	; (20000358 <delay_250ns+0x38>)
2000034c:	2200      	movs	r2, #0
2000034e:	601a      	str	r2, [r3, #0]
}
20000350:	46c0      	nop			; (mov r8, r8)
20000352:	46bd      	mov	sp, r7
20000354:	bd80      	pop	{r7, pc}
20000356:	46c0      	nop			; (mov r8, r8)
20000358:	e000e010 	and	lr, r0, r0, lsl r0
2000035c:	e000e014 	and	lr, r0, r4, lsl r0
20000360:	e000e018 	and	lr, r0, r8, lsl r0

20000364 <delay_micro>:

void delay_micro(unsigned int us)
{
20000364:	b580      	push	{r7, lr}
20000366:	b084      	sub	sp, #16
20000368:	af00      	add	r7, sp, #0
2000036a:	6078      	str	r0, [r7, #4]
#ifdef SIMULATOR
	us = us/1000;
2000036c:	687b      	ldr	r3, [r7, #4]
2000036e:	22fa      	movs	r2, #250	; 0xfa
20000370:	0091      	lsls	r1, r2, #2
20000372:	0018      	movs	r0, r3
20000374:	f000 fb42 	bl	200009fc <__udivsi3>
20000378:	0003      	movs	r3, r0
2000037a:	607b      	str	r3, [r7, #4]
	us++;
2000037c:	687b      	ldr	r3, [r7, #4]
2000037e:	3301      	adds	r3, #1
20000380:	607b      	str	r3, [r7, #4]
#endif
	while( us > 0 )
20000382:	e00d      	b.n	200003a0 <delay_micro+0x3c>
	{
		for(int i = 0; i<4; i++) delay_250ns();
20000384:	2300      	movs	r3, #0
20000386:	60fb      	str	r3, [r7, #12]
20000388:	e004      	b.n	20000394 <delay_micro+0x30>
2000038a:	f7ff ffc9 	bl	20000320 <delay_250ns>
2000038e:	68fb      	ldr	r3, [r7, #12]
20000390:	3301      	adds	r3, #1
20000392:	60fb      	str	r3, [r7, #12]
20000394:	68fb      	ldr	r3, [r7, #12]
20000396:	2b03      	cmp	r3, #3
20000398:	ddf7      	ble.n	2000038a <delay_micro+0x26>
		us--;
2000039a:	687b      	ldr	r3, [r7, #4]
2000039c:	3b01      	subs	r3, #1
2000039e:	607b      	str	r3, [r7, #4]
	while( us > 0 )
200003a0:	687b      	ldr	r3, [r7, #4]
200003a2:	2b00      	cmp	r3, #0
200003a4:	d1ee      	bne.n	20000384 <delay_micro+0x20>
	}
}
200003a6:	46c0      	nop			; (mov r8, r8)
200003a8:	46c0      	nop			; (mov r8, r8)
200003aa:	46bd      	mov	sp, r7
200003ac:	b004      	add	sp, #16
200003ae:	bd80      	pop	{r7, pc}

200003b0 <delay_milli>:

void delay_milli(unsigned int ms) {
200003b0:	b580      	push	{r7, lr}
200003b2:	b082      	sub	sp, #8
200003b4:	af00      	add	r7, sp, #0
200003b6:	6078      	str	r0, [r7, #4]
	while( ms > 0 )
200003b8:	e005      	b.n	200003c6 <delay_milli+0x16>
	{
		delay_micro(100);
200003ba:	2064      	movs	r0, #100	; 0x64
200003bc:	f7ff ffd2 	bl	20000364 <delay_micro>
		ms--;
200003c0:	687b      	ldr	r3, [r7, #4]
200003c2:	3b01      	subs	r3, #1
200003c4:	607b      	str	r3, [r7, #4]
	while( ms > 0 )
200003c6:	687b      	ldr	r3, [r7, #4]
200003c8:	2b00      	cmp	r3, #0
200003ca:	d1f6      	bne.n	200003ba <delay_milli+0xa>
	}
}
200003cc:	46c0      	nop			; (mov r8, r8)
200003ce:	46c0      	nop			; (mov r8, r8)
200003d0:	46bd      	mov	sp, r7
200003d2:	b002      	add	sp, #8
200003d4:	bd80      	pop	{r7, pc}

200003d6 <random_number>:

/*
 * TIM6 for randomizing number
 */
 int random_number(int min, int max)
 {
200003d6:	b580      	push	{r7, lr}
200003d8:	b084      	sub	sp, #16
200003da:	af00      	add	r7, sp, #0
200003dc:	6078      	str	r0, [r7, #4]
200003de:	6039      	str	r1, [r7, #0]
	short random = (char) *TIM6_CNT;
200003e0:	4b0f      	ldr	r3, [pc, #60]	; (20000420 <random_number+0x4a>)
200003e2:	881b      	ldrh	r3, [r3, #0]
200003e4:	b29b      	uxth	r3, r3
200003e6:	b2da      	uxtb	r2, r3
200003e8:	210e      	movs	r1, #14
200003ea:	187b      	adds	r3, r7, r1
200003ec:	801a      	strh	r2, [r3, #0]
	unsigned char c = random % (max-min+1) + min; 
200003ee:	187b      	adds	r3, r7, r1
200003f0:	2000      	movs	r0, #0
200003f2:	5e18      	ldrsh	r0, [r3, r0]
200003f4:	683a      	ldr	r2, [r7, #0]
200003f6:	687b      	ldr	r3, [r7, #4]
200003f8:	1ad3      	subs	r3, r2, r3
200003fa:	3301      	adds	r3, #1
200003fc:	0019      	movs	r1, r3
200003fe:	f000 fc6d 	bl	20000cdc <__aeabi_idivmod>
20000402:	000b      	movs	r3, r1
20000404:	b2d9      	uxtb	r1, r3
20000406:	687b      	ldr	r3, [r7, #4]
20000408:	b2da      	uxtb	r2, r3
2000040a:	200d      	movs	r0, #13
2000040c:	183b      	adds	r3, r7, r0
2000040e:	188a      	adds	r2, r1, r2
20000410:	701a      	strb	r2, [r3, #0]
	return c;
20000412:	183b      	adds	r3, r7, r0
20000414:	781b      	ldrb	r3, [r3, #0]
 }
20000416:	0018      	movs	r0, r3
20000418:	46bd      	mov	sp, r7
2000041a:	b004      	add	sp, #16
2000041c:	bd80      	pop	{r7, pc}
2000041e:	46c0      	nop			; (mov r8, r8)
20000420:	40001024 	andmi	r1, r0, r4, lsr #32

20000424 <activateRow>:

/*
 * Helper Functions
 */
void activateRow(unsigned int row)
{
20000424:	b580      	push	{r7, lr}
20000426:	b082      	sub	sp, #8
20000428:	af00      	add	r7, sp, #0
2000042a:	6078      	str	r0, [r7, #4]
	switch(row){
2000042c:	687b      	ldr	r3, [r7, #4]
2000042e:	2b04      	cmp	r3, #4
20000430:	d01b      	beq.n	2000046a <activateRow+0x46>
20000432:	687b      	ldr	r3, [r7, #4]
20000434:	2b04      	cmp	r3, #4
20000436:	d81c      	bhi.n	20000472 <activateRow+0x4e>
20000438:	687b      	ldr	r3, [r7, #4]
2000043a:	2b03      	cmp	r3, #3
2000043c:	d011      	beq.n	20000462 <activateRow+0x3e>
2000043e:	687b      	ldr	r3, [r7, #4]
20000440:	2b03      	cmp	r3, #3
20000442:	d816      	bhi.n	20000472 <activateRow+0x4e>
20000444:	687b      	ldr	r3, [r7, #4]
20000446:	2b01      	cmp	r3, #1
20000448:	d003      	beq.n	20000452 <activateRow+0x2e>
2000044a:	687b      	ldr	r3, [r7, #4]
2000044c:	2b02      	cmp	r3, #2
2000044e:	d004      	beq.n	2000045a <activateRow+0x36>
20000450:	e00f      	b.n	20000472 <activateRow+0x4e>
		case 1: GPIO_D.odrHigh=0x10; break;
20000452:	4b0c      	ldr	r3, [pc, #48]	; (20000484 <activateRow+0x60>)
20000454:	2210      	movs	r2, #16
20000456:	755a      	strb	r2, [r3, #21]
20000458:	e00f      	b.n	2000047a <activateRow+0x56>
		case 2: GPIO_D.odrHigh=0x20; break;
2000045a:	4b0a      	ldr	r3, [pc, #40]	; (20000484 <activateRow+0x60>)
2000045c:	2220      	movs	r2, #32
2000045e:	755a      	strb	r2, [r3, #21]
20000460:	e00b      	b.n	2000047a <activateRow+0x56>
		case 3: GPIO_D.odrHigh=0x40; break;
20000462:	4b08      	ldr	r3, [pc, #32]	; (20000484 <activateRow+0x60>)
20000464:	2240      	movs	r2, #64	; 0x40
20000466:	755a      	strb	r2, [r3, #21]
20000468:	e007      	b.n	2000047a <activateRow+0x56>
		case 4: GPIO_D.odrHigh=0x80; break;
2000046a:	4b06      	ldr	r3, [pc, #24]	; (20000484 <activateRow+0x60>)
2000046c:	2280      	movs	r2, #128	; 0x80
2000046e:	755a      	strb	r2, [r3, #21]
20000470:	e003      	b.n	2000047a <activateRow+0x56>
		
		default: GPIO_D.odrHigh=0;
20000472:	4b04      	ldr	r3, [pc, #16]	; (20000484 <activateRow+0x60>)
20000474:	2200      	movs	r2, #0
20000476:	755a      	strb	r2, [r3, #21]
	}
}
20000478:	46c0      	nop			; (mov r8, r8)
2000047a:	46c0      	nop			; (mov r8, r8)
2000047c:	46bd      	mov	sp, r7
2000047e:	b002      	add	sp, #8
20000480:	bd80      	pop	{r7, pc}
20000482:	46c0      	nop			; (mov r8, r8)
20000484:	40020c00 	andmi	r0, r2, r0, lsl #24

20000488 <readCol>:

int readCol(void)
{
20000488:	b580      	push	{r7, lr}
2000048a:	b082      	sub	sp, #8
2000048c:	af00      	add	r7, sp, #0
	unsigned char c;
	c = GPIO_D.idrHigh;
2000048e:	4a12      	ldr	r2, [pc, #72]	; (200004d8 <readCol+0x50>)
20000490:	1dfb      	adds	r3, r7, #7
20000492:	7c52      	ldrb	r2, [r2, #17]
20000494:	701a      	strb	r2, [r3, #0]
	if(c & 8) return 4;
20000496:	1dfb      	adds	r3, r7, #7
20000498:	781b      	ldrb	r3, [r3, #0]
2000049a:	2208      	movs	r2, #8
2000049c:	4013      	ands	r3, r2
2000049e:	d001      	beq.n	200004a4 <readCol+0x1c>
200004a0:	2304      	movs	r3, #4
200004a2:	e015      	b.n	200004d0 <readCol+0x48>
	if(c & 4) return 3;
200004a4:	1dfb      	adds	r3, r7, #7
200004a6:	781b      	ldrb	r3, [r3, #0]
200004a8:	2204      	movs	r2, #4
200004aa:	4013      	ands	r3, r2
200004ac:	d001      	beq.n	200004b2 <readCol+0x2a>
200004ae:	2303      	movs	r3, #3
200004b0:	e00e      	b.n	200004d0 <readCol+0x48>
	if(c & 2) return 2;
200004b2:	1dfb      	adds	r3, r7, #7
200004b4:	781b      	ldrb	r3, [r3, #0]
200004b6:	2202      	movs	r2, #2
200004b8:	4013      	ands	r3, r2
200004ba:	d001      	beq.n	200004c0 <readCol+0x38>
200004bc:	2302      	movs	r3, #2
200004be:	e007      	b.n	200004d0 <readCol+0x48>
	if(c & 1) return 1;
200004c0:	1dfb      	adds	r3, r7, #7
200004c2:	781b      	ldrb	r3, [r3, #0]
200004c4:	2201      	movs	r2, #1
200004c6:	4013      	ands	r3, r2
200004c8:	d001      	beq.n	200004ce <readCol+0x46>
200004ca:	2301      	movs	r3, #1
200004cc:	e000      	b.n	200004d0 <readCol+0x48>
	return 0;
200004ce:	2300      	movs	r3, #0
}
200004d0:	0018      	movs	r0, r3
200004d2:	46bd      	mov	sp, r7
200004d4:	b002      	add	sp, #8
200004d6:	bd80      	pop	{r7, pc}
200004d8:	40020c00 	andmi	r0, r2, r0, lsl #24

200004dc <keyb>:

/*
 * Main Function
 */
unsigned char keyb(void)
{
200004dc:	b590      	push	{r4, r7, lr}
200004de:	b087      	sub	sp, #28
200004e0:	af00      	add	r7, sp, #0
	unsigned char key[]=
200004e2:	003b      	movs	r3, r7
200004e4:	4a16      	ldr	r2, [pc, #88]	; (20000540 <keyb+0x64>)
200004e6:	ca13      	ldmia	r2!, {r0, r1, r4}
200004e8:	c313      	stmia	r3!, {r0, r1, r4}
200004ea:	6812      	ldr	r2, [r2, #0]
200004ec:	601a      	str	r2, [r3, #0]
	{1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE,0,0xF,0xD};
	int row, col;
	for(row = 1; row <= 4; row++){
200004ee:	2301      	movs	r3, #1
200004f0:	617b      	str	r3, [r7, #20]
200004f2:	e019      	b.n	20000528 <keyb+0x4c>
		activateRow(row);
200004f4:	697b      	ldr	r3, [r7, #20]
200004f6:	0018      	movs	r0, r3
200004f8:	f7ff ff94 	bl	20000424 <activateRow>
		if(col=readCol()){
200004fc:	f7ff ffc4 	bl	20000488 <readCol>
20000500:	0003      	movs	r3, r0
20000502:	613b      	str	r3, [r7, #16]
20000504:	693b      	ldr	r3, [r7, #16]
20000506:	2b00      	cmp	r3, #0
20000508:	d00b      	beq.n	20000522 <keyb+0x46>
			activateRow(0);
2000050a:	2000      	movs	r0, #0
2000050c:	f7ff ff8a 	bl	20000424 <activateRow>
			return key[4*(row-1)+(col-1)];
20000510:	697b      	ldr	r3, [r7, #20]
20000512:	3b01      	subs	r3, #1
20000514:	009a      	lsls	r2, r3, #2
20000516:	693b      	ldr	r3, [r7, #16]
20000518:	3b01      	subs	r3, #1
2000051a:	18d3      	adds	r3, r2, r3
2000051c:	003a      	movs	r2, r7
2000051e:	5cd3      	ldrb	r3, [r2, r3]
20000520:	e009      	b.n	20000536 <keyb+0x5a>
	for(row = 1; row <= 4; row++){
20000522:	697b      	ldr	r3, [r7, #20]
20000524:	3301      	adds	r3, #1
20000526:	617b      	str	r3, [r7, #20]
20000528:	697b      	ldr	r3, [r7, #20]
2000052a:	2b04      	cmp	r3, #4
2000052c:	dde2      	ble.n	200004f4 <keyb+0x18>
		}
	}
	activateRow(0);
2000052e:	2000      	movs	r0, #0
20000530:	f7ff ff78 	bl	20000424 <activateRow>
	return(0xFF);
20000534:	23ff      	movs	r3, #255	; 0xff
20000536:	0018      	movs	r0, r3
20000538:	46bd      	mov	sp, r7
2000053a:	b007      	add	sp, #28
2000053c:	bd90      	pop	{r4, r7, pc}
2000053e:	46c0      	nop			; (mov r8, r8)
20000540:	20006d48 	andcs	r6, r0, r8, asr #26

20000544 <init_keypad>:
#include "declarations.h"

// starta klockorna
//	*((unsigned long *) 0x40023830) = 0x18;
 void init_keypad() 
 {
20000544:	b580      	push	{r7, lr}
20000546:	af00      	add	r7, sp, #0
	GPIO_D.moder = 0x55000000;
20000548:	4b08      	ldr	r3, [pc, #32]	; (2000056c <init_keypad+0x28>)
2000054a:	22aa      	movs	r2, #170	; 0xaa
2000054c:	05d2      	lsls	r2, r2, #23
2000054e:	601a      	str	r2, [r3, #0]
	GPIO_D.otyper = 0;
20000550:	4b06      	ldr	r3, [pc, #24]	; (2000056c <init_keypad+0x28>)
20000552:	2200      	movs	r2, #0
20000554:	809a      	strh	r2, [r3, #4]
	GPIO_D.pupdr = 0xAA0000;
20000556:	4b05      	ldr	r3, [pc, #20]	; (2000056c <init_keypad+0x28>)
20000558:	22aa      	movs	r2, #170	; 0xaa
2000055a:	0412      	lsls	r2, r2, #16
2000055c:	60da      	str	r2, [r3, #12]
	GPIO_D.ospeedr = 0xFF000000;
2000055e:	4b03      	ldr	r3, [pc, #12]	; (2000056c <init_keypad+0x28>)
20000560:	22ff      	movs	r2, #255	; 0xff
20000562:	0612      	lsls	r2, r2, #24
20000564:	609a      	str	r2, [r3, #8]
}
20000566:	46c0      	nop			; (mov r8, r8)
20000568:	46bd      	mov	sp, r7
2000056a:	bd80      	pop	{r7, pc}
2000056c:	40020c00 	andmi	r0, r2, r0, lsl #24

20000570 <init_ascii>:

void init_ascii()
{
20000570:	b580      	push	{r7, lr}
20000572:	af00      	add	r7, sp, #0
	GPIO_E.moder = 0x55555555;
20000574:	4b05      	ldr	r3, [pc, #20]	; (2000058c <init_ascii+0x1c>)
20000576:	4a06      	ldr	r2, [pc, #24]	; (20000590 <init_ascii+0x20>)
20000578:	601a      	str	r2, [r3, #0]
	GPIO_E.pupdr = 0x55550000;
2000057a:	4b04      	ldr	r3, [pc, #16]	; (2000058c <init_ascii+0x1c>)
2000057c:	4a05      	ldr	r2, [pc, #20]	; (20000594 <init_ascii+0x24>)
2000057e:	60da      	str	r2, [r3, #12]
	GPIO_E.otyper = 0;
20000580:	4b02      	ldr	r3, [pc, #8]	; (2000058c <init_ascii+0x1c>)
20000582:	2200      	movs	r2, #0
20000584:	809a      	strh	r2, [r3, #4]
}
20000586:	46c0      	nop			; (mov r8, r8)
20000588:	46bd      	mov	sp, r7
2000058a:	bd80      	pop	{r7, pc}
2000058c:	40021000 	andmi	r1, r2, r0
20000590:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
20000594:	55550000 	ldrbpl	r0, [r5, #-0]

20000598 <init_timer6>:

void init_timer6()
{
20000598:	b580      	push	{r7, lr}
2000059a:	af00      	add	r7, sp, #0
	*TIM6_CR1 &= ~CEN; //stoppa räknarmodul
2000059c:	4b0b      	ldr	r3, [pc, #44]	; (200005cc <init_timer6+0x34>)
2000059e:	881b      	ldrh	r3, [r3, #0]
200005a0:	b29b      	uxth	r3, r3
200005a2:	4a0a      	ldr	r2, [pc, #40]	; (200005cc <init_timer6+0x34>)
200005a4:	2101      	movs	r1, #1
200005a6:	438b      	bics	r3, r1
200005a8:	b29b      	uxth	r3, r3
200005aa:	8013      	strh	r3, [r2, #0]
	*TIM6_ARR = 0xFFFF; //sätt räknarreg. till maxvärde
200005ac:	4b08      	ldr	r3, [pc, #32]	; (200005d0 <init_timer6+0x38>)
200005ae:	2201      	movs	r2, #1
200005b0:	4252      	negs	r2, r2
200005b2:	801a      	strh	r2, [r3, #0]
	*TIM6_CR1 |= (CEN|UDIS); //inget update-event
200005b4:	4b05      	ldr	r3, [pc, #20]	; (200005cc <init_timer6+0x34>)
200005b6:	881b      	ldrh	r3, [r3, #0]
200005b8:	b29b      	uxth	r3, r3
200005ba:	4a04      	ldr	r2, [pc, #16]	; (200005cc <init_timer6+0x34>)
200005bc:	2103      	movs	r1, #3
200005be:	430b      	orrs	r3, r1
200005c0:	b29b      	uxth	r3, r3
200005c2:	8013      	strh	r3, [r2, #0]
	//starta räknarmodul
}
200005c4:	46c0      	nop			; (mov r8, r8)
200005c6:	46bd      	mov	sp, r7
200005c8:	bd80      	pop	{r7, pc}
200005ca:	46c0      	nop			; (mov r8, r8)
200005cc:	40001000 	andmi	r1, r0, r0
200005d0:	4000102c 	andmi	r1, r0, ip, lsr #32

200005d4 <init_app>:

void init_app()
{
200005d4:	b580      	push	{r7, lr}
200005d6:	af00      	add	r7, sp, #0
	init_keypad();
200005d8:	f7ff ffb4 	bl	20000544 <init_keypad>
	init_ascii();
200005dc:	f7ff ffc8 	bl	20000570 <init_ascii>
	init_timer6();
200005e0:	f7ff ffda 	bl	20000598 <init_timer6>
200005e4:	46c0      	nop			; (mov r8, r8)
200005e6:	46bd      	mov	sp, r7
200005e8:	bd80      	pop	{r7, pc}
200005ea:	46c0      	nop			; (mov r8, r8)

200005ec <graphic_initalize>:

//GRPAPHICS DRIVERS----------------------------
//OBS! graphic_init. sets up port E for usage
__attribute__((naked))
void graphic_initalize(void)
{
200005ec:	4770dff0 			; <UNDEFINED> instruction: 0x4770dff0
	__asm volatile(" .HWORD 0xDFF0\n");
	__asm volatile(" BX LR\n");
}
200005f0:	46c0      	nop			; (mov r8, r8)

200005f2 <graphic_pixel_set>:

__attribute__((naked))
void graphic_pixel_set(int x, int y)
{
200005f2:	4770dff2 			; <UNDEFINED> instruction: 0x4770dff2
	__asm volatile(" .HWORD 0xDFF2\n");
	__asm volatile(" BX LR\n");
}
200005f6:	46c0      	nop			; (mov r8, r8)

200005f8 <graphic_clear_screen>:

__attribute__((naked))
void graphic_clear_screen(void)
{
200005f8:	4770dff1 			; <UNDEFINED> instruction: 0x4770dff1
	__asm volatile(" .HWORD 0xDFF1\n");
	__asm volatile(" BX LR\n");
}
200005fc:	46c0      	nop			; (mov r8, r8)

200005fe <graphic_pixel_clear>:

__attribute__((naked))
void graphic_pixel_clear(int x, int y)
{
200005fe:	4770dff3 			; <UNDEFINED> instruction: 0x4770dff3
	__asm volatile(" .HWORD 0xDFF3\n");
	__asm volatile(" BX LR\n");
}
20000602:	46c0      	nop			; (mov r8, r8)

20000604 <draw_object>:
//GRAPHICS DRIVERS----------------------------
//OBJECT-----------------------------
//general methods
void draw_object(POBJECT obj)
{
20000604:	b590      	push	{r4, r7, lr}
20000606:	b087      	sub	sp, #28
20000608:	af00      	add	r7, sp, #0
2000060a:	6078      	str	r0, [r7, #4]
	int numpixels = obj -> geo -> numpoints;
2000060c:	687b      	ldr	r3, [r7, #4]
2000060e:	681b      	ldr	r3, [r3, #0]
20000610:	681b      	ldr	r3, [r3, #0]
20000612:	613b      	str	r3, [r7, #16]
	for(int i = 0; i < numpixels; i++)
20000614:	2300      	movs	r3, #0
20000616:	617b      	str	r3, [r7, #20]
20000618:	e02c      	b.n	20000674 <draw_object+0x70>
	{
		unsigned char x = obj -> geo -> px[i].x + (obj -> posx) * SQUARE_WIDTH;
2000061a:	687b      	ldr	r3, [r7, #4]
2000061c:	681a      	ldr	r2, [r3, #0]
2000061e:	697b      	ldr	r3, [r7, #20]
20000620:	3304      	adds	r3, #4
20000622:	005b      	lsls	r3, r3, #1
20000624:	18d3      	adds	r3, r2, r3
20000626:	3304      	adds	r3, #4
20000628:	7819      	ldrb	r1, [r3, #0]
2000062a:	687b      	ldr	r3, [r7, #4]
2000062c:	68db      	ldr	r3, [r3, #12]
2000062e:	b2db      	uxtb	r3, r3
20000630:	009b      	lsls	r3, r3, #2
20000632:	b2da      	uxtb	r2, r3
20000634:	200f      	movs	r0, #15
20000636:	183b      	adds	r3, r7, r0
20000638:	188a      	adds	r2, r1, r2
2000063a:	701a      	strb	r2, [r3, #0]
		unsigned char y = obj -> geo -> px[i].y + (obj -> posy) * SQUARE_WIDTH;
2000063c:	687b      	ldr	r3, [r7, #4]
2000063e:	681a      	ldr	r2, [r3, #0]
20000640:	697b      	ldr	r3, [r7, #20]
20000642:	3304      	adds	r3, #4
20000644:	005b      	lsls	r3, r3, #1
20000646:	18d3      	adds	r3, r2, r3
20000648:	3305      	adds	r3, #5
2000064a:	7819      	ldrb	r1, [r3, #0]
2000064c:	687b      	ldr	r3, [r7, #4]
2000064e:	691b      	ldr	r3, [r3, #16]
20000650:	b2db      	uxtb	r3, r3
20000652:	009b      	lsls	r3, r3, #2
20000654:	b2da      	uxtb	r2, r3
20000656:	240e      	movs	r4, #14
20000658:	193b      	adds	r3, r7, r4
2000065a:	188a      	adds	r2, r1, r2
2000065c:	701a      	strb	r2, [r3, #0]
		graphic_pixel_set(x, y);
2000065e:	183b      	adds	r3, r7, r0
20000660:	781a      	ldrb	r2, [r3, #0]
20000662:	193b      	adds	r3, r7, r4
20000664:	781b      	ldrb	r3, [r3, #0]
20000666:	0019      	movs	r1, r3
20000668:	0010      	movs	r0, r2
2000066a:	f7ff ffc2 	bl	200005f2 <graphic_pixel_set>
	for(int i = 0; i < numpixels; i++)
2000066e:	697b      	ldr	r3, [r7, #20]
20000670:	3301      	adds	r3, #1
20000672:	617b      	str	r3, [r7, #20]
20000674:	697a      	ldr	r2, [r7, #20]
20000676:	693b      	ldr	r3, [r7, #16]
20000678:	429a      	cmp	r2, r3
2000067a:	dbce      	blt.n	2000061a <draw_object+0x16>
	}
}
2000067c:	46c0      	nop			; (mov r8, r8)
2000067e:	46c0      	nop			; (mov r8, r8)
20000680:	46bd      	mov	sp, r7
20000682:	b007      	add	sp, #28
20000684:	bd90      	pop	{r4, r7, pc}

20000686 <clear_object>:

void clear_object(POBJECT obj)
{
20000686:	b590      	push	{r4, r7, lr}
20000688:	b087      	sub	sp, #28
2000068a:	af00      	add	r7, sp, #0
2000068c:	6078      	str	r0, [r7, #4]
	int numpixels = obj -> geo -> numpoints;
2000068e:	687b      	ldr	r3, [r7, #4]
20000690:	681b      	ldr	r3, [r3, #0]
20000692:	681b      	ldr	r3, [r3, #0]
20000694:	613b      	str	r3, [r7, #16]
	for(int i = 0; i < numpixels; i++)
20000696:	2300      	movs	r3, #0
20000698:	617b      	str	r3, [r7, #20]
2000069a:	e02c      	b.n	200006f6 <clear_object+0x70>
	{ 
		unsigned char x = obj -> geo -> px[i].x + (obj -> posx) * SQUARE_WIDTH;
2000069c:	687b      	ldr	r3, [r7, #4]
2000069e:	681a      	ldr	r2, [r3, #0]
200006a0:	697b      	ldr	r3, [r7, #20]
200006a2:	3304      	adds	r3, #4
200006a4:	005b      	lsls	r3, r3, #1
200006a6:	18d3      	adds	r3, r2, r3
200006a8:	3304      	adds	r3, #4
200006aa:	7819      	ldrb	r1, [r3, #0]
200006ac:	687b      	ldr	r3, [r7, #4]
200006ae:	68db      	ldr	r3, [r3, #12]
200006b0:	b2db      	uxtb	r3, r3
200006b2:	009b      	lsls	r3, r3, #2
200006b4:	b2da      	uxtb	r2, r3
200006b6:	200f      	movs	r0, #15
200006b8:	183b      	adds	r3, r7, r0
200006ba:	188a      	adds	r2, r1, r2
200006bc:	701a      	strb	r2, [r3, #0]
		unsigned char y = obj -> geo -> px[i].y + (obj -> posy) * SQUARE_WIDTH;
200006be:	687b      	ldr	r3, [r7, #4]
200006c0:	681a      	ldr	r2, [r3, #0]
200006c2:	697b      	ldr	r3, [r7, #20]
200006c4:	3304      	adds	r3, #4
200006c6:	005b      	lsls	r3, r3, #1
200006c8:	18d3      	adds	r3, r2, r3
200006ca:	3305      	adds	r3, #5
200006cc:	7819      	ldrb	r1, [r3, #0]
200006ce:	687b      	ldr	r3, [r7, #4]
200006d0:	691b      	ldr	r3, [r3, #16]
200006d2:	b2db      	uxtb	r3, r3
200006d4:	009b      	lsls	r3, r3, #2
200006d6:	b2da      	uxtb	r2, r3
200006d8:	240e      	movs	r4, #14
200006da:	193b      	adds	r3, r7, r4
200006dc:	188a      	adds	r2, r1, r2
200006de:	701a      	strb	r2, [r3, #0]
		graphic_pixel_clear(x, y);
200006e0:	183b      	adds	r3, r7, r0
200006e2:	781a      	ldrb	r2, [r3, #0]
200006e4:	193b      	adds	r3, r7, r4
200006e6:	781b      	ldrb	r3, [r3, #0]
200006e8:	0019      	movs	r1, r3
200006ea:	0010      	movs	r0, r2
200006ec:	f7ff ff87 	bl	200005fe <graphic_pixel_clear>
	for(int i = 0; i < numpixels; i++)
200006f0:	697b      	ldr	r3, [r7, #20]
200006f2:	3301      	adds	r3, #1
200006f4:	617b      	str	r3, [r7, #20]
200006f6:	697a      	ldr	r2, [r7, #20]
200006f8:	693b      	ldr	r3, [r7, #16]
200006fa:	429a      	cmp	r2, r3
200006fc:	dbce      	blt.n	2000069c <clear_object+0x16>
	}
}
200006fe:	46c0      	nop			; (mov r8, r8)
20000700:	46c0      	nop			; (mov r8, r8)
20000702:	46bd      	mov	sp, r7
20000704:	b007      	add	sp, #28
20000706:	bd90      	pop	{r4, r7, pc}

20000708 <set_object_speed>:

void set_object_speed(POBJECT obj, int x, int y)
{
20000708:	b580      	push	{r7, lr}
2000070a:	b084      	sub	sp, #16
2000070c:	af00      	add	r7, sp, #0
2000070e:	60f8      	str	r0, [r7, #12]
20000710:	60b9      	str	r1, [r7, #8]
20000712:	607a      	str	r2, [r7, #4]
	obj -> dirx = x;
20000714:	68fb      	ldr	r3, [r7, #12]
20000716:	68ba      	ldr	r2, [r7, #8]
20000718:	605a      	str	r2, [r3, #4]
	obj -> diry = y;
2000071a:	68fb      	ldr	r3, [r7, #12]
2000071c:	687a      	ldr	r2, [r7, #4]
2000071e:	609a      	str	r2, [r3, #8]
}
20000720:	46c0      	nop			; (mov r8, r8)
20000722:	46bd      	mov	sp, r7
20000724:	b004      	add	sp, #16
20000726:	bd80      	pop	{r7, pc}

20000728 <move_snake>:

//snake methods
void move_snake(POBJECT snakeO)
{
20000728:	b580      	push	{r7, lr}
2000072a:	b082      	sub	sp, #8
2000072c:	af00      	add	r7, sp, #0
2000072e:	6078      	str	r0, [r7, #4]
	//deside new pos. by adding dir coordinates to list of points
	clear_object(snakeO);
20000730:	687b      	ldr	r3, [r7, #4]
20000732:	0018      	movs	r0, r3
20000734:	f7ff ffa7 	bl	20000686 <clear_object>
	snakeO-> posx += snakeO-> dirx;
20000738:	687b      	ldr	r3, [r7, #4]
2000073a:	68da      	ldr	r2, [r3, #12]
2000073c:	687b      	ldr	r3, [r7, #4]
2000073e:	685b      	ldr	r3, [r3, #4]
20000740:	18d2      	adds	r2, r2, r3
20000742:	687b      	ldr	r3, [r7, #4]
20000744:	60da      	str	r2, [r3, #12]
	snakeO-> posy += snakeO-> diry;
20000746:	687b      	ldr	r3, [r7, #4]
20000748:	691a      	ldr	r2, [r3, #16]
2000074a:	687b      	ldr	r3, [r7, #4]
2000074c:	689b      	ldr	r3, [r3, #8]
2000074e:	18d2      	adds	r2, r2, r3
20000750:	687b      	ldr	r3, [r7, #4]
20000752:	611a      	str	r2, [r3, #16]
	draw_object(snakeO);
20000754:	687b      	ldr	r3, [r7, #4]
20000756:	0018      	movs	r0, r3
20000758:	f7ff ff54 	bl	20000604 <draw_object>
	delay_milli(100);
2000075c:	2064      	movs	r0, #100	; 0x64
2000075e:	f7ff fe27 	bl	200003b0 <delay_milli>
}
20000762:	46c0      	nop			; (mov r8, r8)
20000764:	46bd      	mov	sp, r7
20000766:	b002      	add	sp, #8
20000768:	bd80      	pop	{r7, pc}

2000076a <move_apple>:

//apple methods
void move_apple(POBJECT appleO)
{
2000076a:	b580      	push	{r7, lr}
2000076c:	b082      	sub	sp, #8
2000076e:	af00      	add	r7, sp, #0
20000770:	6078      	str	r0, [r7, #4]
	clear_object(appleO);
20000772:	687b      	ldr	r3, [r7, #4]
20000774:	0018      	movs	r0, r3
20000776:	f7ff ff86 	bl	20000686 <clear_object>
	appleO -> posx = random_number(1, SCREEN_WIDTH);
2000077a:	2120      	movs	r1, #32
2000077c:	2001      	movs	r0, #1
2000077e:	f7ff fe2a 	bl	200003d6 <random_number>
20000782:	0002      	movs	r2, r0
20000784:	687b      	ldr	r3, [r7, #4]
20000786:	60da      	str	r2, [r3, #12]
	appleO -> posy = random_number(1, SCREEN_HEIGHT);
20000788:	2110      	movs	r1, #16
2000078a:	2001      	movs	r0, #1
2000078c:	f7ff fe23 	bl	200003d6 <random_number>
20000790:	0002      	movs	r2, r0
20000792:	687b      	ldr	r3, [r7, #4]
20000794:	611a      	str	r2, [r3, #16]
	draw_object(appleO);
20000796:	687b      	ldr	r3, [r7, #4]
20000798:	0018      	movs	r0, r3
2000079a:	f7ff ff33 	bl	20000604 <draw_object>
}
2000079e:	46c0      	nop			; (mov r8, r8)
200007a0:	46bd      	mov	sp, r7
200007a2:	b002      	add	sp, #8
200007a4:	bd80      	pop	{r7, pc}

200007a6 <pixel_overlap>:
	set_object_speed
};
//DEFINED OBJ.------------------------

//collision detection-------------------------------
int pixel_overlap(POBJECT o1, POBJECT o2) {
200007a6:	b580      	push	{r7, lr}
200007a8:	b088      	sub	sp, #32
200007aa:	af00      	add	r7, sp, #0
200007ac:	6078      	str	r0, [r7, #4]
200007ae:	6039      	str	r1, [r7, #0]
  int offset1x = o1->posx;
200007b0:	687b      	ldr	r3, [r7, #4]
200007b2:	68db      	ldr	r3, [r3, #12]
200007b4:	617b      	str	r3, [r7, #20]
  int offset1y = o1->posy;
200007b6:	687b      	ldr	r3, [r7, #4]
200007b8:	691b      	ldr	r3, [r3, #16]
200007ba:	613b      	str	r3, [r7, #16]
  int offset2x = o2->posx;
200007bc:	683b      	ldr	r3, [r7, #0]
200007be:	68db      	ldr	r3, [r3, #12]
200007c0:	60fb      	str	r3, [r7, #12]
  int offset2y = o2->posy;
200007c2:	683b      	ldr	r3, [r7, #0]
200007c4:	691b      	ldr	r3, [r3, #16]
200007c6:	60bb      	str	r3, [r7, #8]
  for (int i = 0; i < o1->geo->numpoints; i++) {
200007c8:	2300      	movs	r3, #0
200007ca:	61fb      	str	r3, [r7, #28]
200007cc:	e040      	b.n	20000850 <pixel_overlap+0xaa>
    for (int j = 0; j < o2-> geo->numpoints; j++)
200007ce:	2300      	movs	r3, #0
200007d0:	61bb      	str	r3, [r7, #24]
200007d2:	e034      	b.n	2000083e <pixel_overlap+0x98>
      if ((offset1x + o1->geo->px[i].x == offset2x + o2->geo->px[j].x) &&
200007d4:	687b      	ldr	r3, [r7, #4]
200007d6:	681a      	ldr	r2, [r3, #0]
200007d8:	69fb      	ldr	r3, [r7, #28]
200007da:	3304      	adds	r3, #4
200007dc:	005b      	lsls	r3, r3, #1
200007de:	18d3      	adds	r3, r2, r3
200007e0:	3304      	adds	r3, #4
200007e2:	781b      	ldrb	r3, [r3, #0]
200007e4:	001a      	movs	r2, r3
200007e6:	697b      	ldr	r3, [r7, #20]
200007e8:	18d2      	adds	r2, r2, r3
200007ea:	683b      	ldr	r3, [r7, #0]
200007ec:	6819      	ldr	r1, [r3, #0]
200007ee:	69bb      	ldr	r3, [r7, #24]
200007f0:	3304      	adds	r3, #4
200007f2:	005b      	lsls	r3, r3, #1
200007f4:	18cb      	adds	r3, r1, r3
200007f6:	3304      	adds	r3, #4
200007f8:	781b      	ldrb	r3, [r3, #0]
200007fa:	0019      	movs	r1, r3
200007fc:	68fb      	ldr	r3, [r7, #12]
200007fe:	18cb      	adds	r3, r1, r3
20000800:	429a      	cmp	r2, r3
20000802:	d119      	bne.n	20000838 <pixel_overlap+0x92>
        (offset1y + o1->geo->px[i].y == offset2y + o2->geo->px[j].y)) return 1;
20000804:	687b      	ldr	r3, [r7, #4]
20000806:	681a      	ldr	r2, [r3, #0]
20000808:	69fb      	ldr	r3, [r7, #28]
2000080a:	3304      	adds	r3, #4
2000080c:	005b      	lsls	r3, r3, #1
2000080e:	18d3      	adds	r3, r2, r3
20000810:	3305      	adds	r3, #5
20000812:	781b      	ldrb	r3, [r3, #0]
20000814:	001a      	movs	r2, r3
20000816:	693b      	ldr	r3, [r7, #16]
20000818:	18d2      	adds	r2, r2, r3
2000081a:	683b      	ldr	r3, [r7, #0]
2000081c:	6819      	ldr	r1, [r3, #0]
2000081e:	69bb      	ldr	r3, [r7, #24]
20000820:	3304      	adds	r3, #4
20000822:	005b      	lsls	r3, r3, #1
20000824:	18cb      	adds	r3, r1, r3
20000826:	3305      	adds	r3, #5
20000828:	781b      	ldrb	r3, [r3, #0]
2000082a:	0019      	movs	r1, r3
2000082c:	68bb      	ldr	r3, [r7, #8]
2000082e:	18cb      	adds	r3, r1, r3
      if ((offset1x + o1->geo->px[i].x == offset2x + o2->geo->px[j].x) &&
20000830:	429a      	cmp	r2, r3
20000832:	d101      	bne.n	20000838 <pixel_overlap+0x92>
        (offset1y + o1->geo->px[i].y == offset2y + o2->geo->px[j].y)) return 1;
20000834:	2301      	movs	r3, #1
20000836:	e012      	b.n	2000085e <pixel_overlap+0xb8>
    for (int j = 0; j < o2-> geo->numpoints; j++)
20000838:	69bb      	ldr	r3, [r7, #24]
2000083a:	3301      	adds	r3, #1
2000083c:	61bb      	str	r3, [r7, #24]
2000083e:	683b      	ldr	r3, [r7, #0]
20000840:	681b      	ldr	r3, [r3, #0]
20000842:	681b      	ldr	r3, [r3, #0]
20000844:	69ba      	ldr	r2, [r7, #24]
20000846:	429a      	cmp	r2, r3
20000848:	dbc4      	blt.n	200007d4 <pixel_overlap+0x2e>
  for (int i = 0; i < o1->geo->numpoints; i++) {
2000084a:	69fb      	ldr	r3, [r7, #28]
2000084c:	3301      	adds	r3, #1
2000084e:	61fb      	str	r3, [r7, #28]
20000850:	687b      	ldr	r3, [r7, #4]
20000852:	681b      	ldr	r3, [r3, #0]
20000854:	681b      	ldr	r3, [r3, #0]
20000856:	69fa      	ldr	r2, [r7, #28]
20000858:	429a      	cmp	r2, r3
2000085a:	dbb8      	blt.n	200007ce <pixel_overlap+0x28>
  }
  return 0;
2000085c:	2300      	movs	r3, #0
}
2000085e:	0018      	movs	r0, r3
20000860:	46bd      	mov	sp, r7
20000862:	b008      	add	sp, #32
20000864:	bd80      	pop	{r7, pc}

20000866 <object_collides>:

char object_collides(POBJECT o1, POBJECT o2)
{	
20000866:	b580      	push	{r7, lr}
20000868:	b082      	sub	sp, #8
2000086a:	af00      	add	r7, sp, #0
2000086c:	6078      	str	r0, [r7, #4]
2000086e:	6039      	str	r1, [r7, #0]
	// objects collides
	if (o1 -> posx == o2 -> posx && o1->posy == o2->posy) {
20000870:	687b      	ldr	r3, [r7, #4]
20000872:	68da      	ldr	r2, [r3, #12]
20000874:	683b      	ldr	r3, [r7, #0]
20000876:	68db      	ldr	r3, [r3, #12]
20000878:	429a      	cmp	r2, r3
2000087a:	d107      	bne.n	2000088c <object_collides+0x26>
2000087c:	687b      	ldr	r3, [r7, #4]
2000087e:	691a      	ldr	r2, [r3, #16]
20000880:	683b      	ldr	r3, [r7, #0]
20000882:	691b      	ldr	r3, [r3, #16]
20000884:	429a      	cmp	r2, r3
20000886:	d101      	bne.n	2000088c <object_collides+0x26>
		return 1;
20000888:	2301      	movs	r3, #1
2000088a:	e01a      	b.n	200008c2 <object_collides+0x5c>
	}
	
	// creature outside bounds (very specific)
	if  (o2 -> posx < 1 ||    
2000088c:	683b      	ldr	r3, [r7, #0]
2000088e:	68db      	ldr	r3, [r3, #12]
20000890:	2b00      	cmp	r3, #0
20000892:	dd13      	ble.n	200008bc <object_collides+0x56>
		128 < o2 -> posx + o2 -> geo -> sizex ||
20000894:	683b      	ldr	r3, [r7, #0]
20000896:	68da      	ldr	r2, [r3, #12]
20000898:	683b      	ldr	r3, [r7, #0]
2000089a:	681b      	ldr	r3, [r3, #0]
2000089c:	685b      	ldr	r3, [r3, #4]
2000089e:	18d3      	adds	r3, r2, r3
	if  (o2 -> posx < 1 ||    
200008a0:	2b80      	cmp	r3, #128	; 0x80
200008a2:	dc0b      	bgt.n	200008bc <object_collides+0x56>
		o2 -> posy < 1 ||    
200008a4:	683b      	ldr	r3, [r7, #0]
200008a6:	691b      	ldr	r3, [r3, #16]
		128 < o2 -> posx + o2 -> geo -> sizex ||
200008a8:	2b00      	cmp	r3, #0
200008aa:	dd07      	ble.n	200008bc <object_collides+0x56>
		64 < o2 -> posy + o2 -> geo -> sizey)
200008ac:	683b      	ldr	r3, [r7, #0]
200008ae:	691a      	ldr	r2, [r3, #16]
200008b0:	683b      	ldr	r3, [r7, #0]
200008b2:	681b      	ldr	r3, [r3, #0]
200008b4:	689b      	ldr	r3, [r3, #8]
200008b6:	18d3      	adds	r3, r2, r3
		o2 -> posy < 1 ||    
200008b8:	2b40      	cmp	r3, #64	; 0x40
200008ba:	dd01      	ble.n	200008c0 <object_collides+0x5a>
			return 1;
200008bc:	2301      	movs	r3, #1
200008be:	e000      	b.n	200008c2 <object_collides+0x5c>
	return 0;
200008c0:	2300      	movs	r3, #0
}
200008c2:	0018      	movs	r0, r3
200008c4:	46bd      	mov	sp, r7
200008c6:	b002      	add	sp, #8
200008c8:	bd80      	pop	{r7, pc}

200008ca <game_over>:
//FUNC.-------------------------------
char game_over(POBJECT snake)
{
200008ca:	b580      	push	{r7, lr}
200008cc:	b082      	sub	sp, #8
200008ce:	af00      	add	r7, sp, #0
200008d0:	6078      	str	r0, [r7, #4]
	if
	(snake->posx < 1 ||
200008d2:	687b      	ldr	r3, [r7, #4]
200008d4:	68db      	ldr	r3, [r3, #12]
200008d6:	2b00      	cmp	r3, #0
200008d8:	dd0b      	ble.n	200008f2 <game_over+0x28>
	 snake->posx > SCREEN_WIDTH ||
200008da:	687b      	ldr	r3, [r7, #4]
200008dc:	68db      	ldr	r3, [r3, #12]
	(snake->posx < 1 ||
200008de:	2b20      	cmp	r3, #32
200008e0:	dc07      	bgt.n	200008f2 <game_over+0x28>
	 snake->posy < 1 ||
200008e2:	687b      	ldr	r3, [r7, #4]
200008e4:	691b      	ldr	r3, [r3, #16]
	 snake->posx > SCREEN_WIDTH ||
200008e6:	2b00      	cmp	r3, #0
200008e8:	dd03      	ble.n	200008f2 <game_over+0x28>
	 snake->posy > SCREEN_HEIGHT)
200008ea:	687b      	ldr	r3, [r7, #4]
200008ec:	691b      	ldr	r3, [r3, #16]
	 snake->posy < 1 ||
200008ee:	2b10      	cmp	r3, #16
200008f0:	dd01      	ble.n	200008f6 <game_over+0x2c>
	{
		 return 1;
200008f2:	2301      	movs	r3, #1
200008f4:	e000      	b.n	200008f8 <game_over+0x2e>
	}else return 0;
200008f6:	2300      	movs	r3, #0
}
200008f8:	0018      	movs	r0, r3
200008fa:	46bd      	mov	sp, r7
200008fc:	b002      	add	sp, #8
200008fe:	bd80      	pop	{r7, pc}

20000900 <main>:

//MAIN------------------------------
void main(void)
{
20000900:	b590      	push	{r4, r7, lr}
20000902:	b087      	sub	sp, #28
20000904:	af00      	add	r7, sp, #0
	int snake_size = 1;
20000906:	2301      	movs	r3, #1
20000908:	613b      	str	r3, [r7, #16]
	int score = 0;
2000090a:	2300      	movs	r3, #0
2000090c:	617b      	str	r3, [r7, #20]
	char c;
	POBJECT appleO = &apple;
2000090e:	4b37      	ldr	r3, [pc, #220]	; (200009ec <main+0xec>)
20000910:	60fb      	str	r3, [r7, #12]
	POBJECT snake_body = &snake;
20000912:	4b37      	ldr	r3, [pc, #220]	; (200009f0 <main+0xf0>)
20000914:	60bb      	str	r3, [r7, #8]
	POBJECT snake_tail = snake_body;
20000916:	68bb      	ldr	r3, [r7, #8]
20000918:	607b      	str	r3, [r7, #4]
	
	init_app();
2000091a:	f7ff fe5b 	bl	200005d4 <init_app>
	graphic_initalize();
2000091e:	f7ff fe65 	bl	200005ec <graphic_initalize>
	graphic_clear_screen();
20000922:	f7ff fe69 	bl	200005f8 <graphic_clear_screen>
	
	appleO -> draw(appleO);
20000926:	68fb      	ldr	r3, [r7, #12]
20000928:	695b      	ldr	r3, [r3, #20]
2000092a:	68fa      	ldr	r2, [r7, #12]
2000092c:	0010      	movs	r0, r2
2000092e:	4798      	blx	r3
	while (!game_over(snake_body)) 
20000930:	e044      	b.n	200009bc <main+0xbc>
	{
		snake_body -> move(snake_body);
20000932:	68bb      	ldr	r3, [r7, #8]
20000934:	69db      	ldr	r3, [r3, #28]
20000936:	68ba      	ldr	r2, [r7, #8]
20000938:	0010      	movs	r0, r2
2000093a:	4798      	blx	r3
		c = keyb();
2000093c:	1cfc      	adds	r4, r7, #3
2000093e:	f7ff fdcd 	bl	200004dc <keyb>
20000942:	0003      	movs	r3, r0
20000944:	7023      	strb	r3, [r4, #0]
		switch (c) { // movement
20000946:	1cfb      	adds	r3, r7, #3
20000948:	781b      	ldrb	r3, [r3, #0]
2000094a:	2b08      	cmp	r3, #8
2000094c:	d01f      	beq.n	2000098e <main+0x8e>
2000094e:	dc25      	bgt.n	2000099c <main+0x9c>
20000950:	2b06      	cmp	r3, #6
20000952:	d005      	beq.n	20000960 <main+0x60>
20000954:	dc22      	bgt.n	2000099c <main+0x9c>
20000956:	2b02      	cmp	r3, #2
20000958:	d011      	beq.n	2000097e <main+0x7e>
2000095a:	2b04      	cmp	r3, #4
2000095c:	d007      	beq.n	2000096e <main+0x6e>
2000095e:	e01d      	b.n	2000099c <main+0x9c>
			// right
			case 6: snake_body -> set_speed(snake_body, MOVE_SPEED, 0); break;
20000960:	68bb      	ldr	r3, [r7, #8]
20000962:	6a1b      	ldr	r3, [r3, #32]
20000964:	68b8      	ldr	r0, [r7, #8]
20000966:	2200      	movs	r2, #0
20000968:	2101      	movs	r1, #1
2000096a:	4798      	blx	r3
2000096c:	e016      	b.n	2000099c <main+0x9c>
			// left
			case 4: snake_body -> set_speed(snake_body, -MOVE_SPEED, 0); break;
2000096e:	68bb      	ldr	r3, [r7, #8]
20000970:	6a1b      	ldr	r3, [r3, #32]
20000972:	2201      	movs	r2, #1
20000974:	4251      	negs	r1, r2
20000976:	68b8      	ldr	r0, [r7, #8]
20000978:	2200      	movs	r2, #0
2000097a:	4798      	blx	r3
2000097c:	e00e      	b.n	2000099c <main+0x9c>
			// up
			case 2: snake_body -> set_speed(snake_body, 0, -MOVE_SPEED); break;
2000097e:	68bb      	ldr	r3, [r7, #8]
20000980:	6a1b      	ldr	r3, [r3, #32]
20000982:	2201      	movs	r2, #1
20000984:	4252      	negs	r2, r2
20000986:	68b8      	ldr	r0, [r7, #8]
20000988:	2100      	movs	r1, #0
2000098a:	4798      	blx	r3
2000098c:	e006      	b.n	2000099c <main+0x9c>
			// down
			case 8: snake_body -> set_speed(snake_body, 0, MOVE_SPEED); break;
2000098e:	68bb      	ldr	r3, [r7, #8]
20000990:	6a1b      	ldr	r3, [r3, #32]
20000992:	68b8      	ldr	r0, [r7, #8]
20000994:	2201      	movs	r2, #1
20000996:	2100      	movs	r1, #0
20000998:	4798      	blx	r3
2000099a:	46c0      	nop			; (mov r8, r8)
		}
		
		if(object_collides(snake_body, appleO))
2000099c:	68fa      	ldr	r2, [r7, #12]
2000099e:	68bb      	ldr	r3, [r7, #8]
200009a0:	0011      	movs	r1, r2
200009a2:	0018      	movs	r0, r3
200009a4:	f7ff ff5f 	bl	20000866 <object_collides>
200009a8:	1e03      	subs	r3, r0, #0
200009aa:	d007      	beq.n	200009bc <main+0xbc>
		{
			appleO -> move(appleO);
200009ac:	68fb      	ldr	r3, [r7, #12]
200009ae:	69db      	ldr	r3, [r3, #28]
200009b0:	68fa      	ldr	r2, [r7, #12]
200009b2:	0010      	movs	r0, r2
200009b4:	4798      	blx	r3
			score++;
200009b6:	697b      	ldr	r3, [r7, #20]
200009b8:	3301      	adds	r3, #1
200009ba:	617b      	str	r3, [r7, #20]
	while (!game_over(snake_body)) 
200009bc:	68bb      	ldr	r3, [r7, #8]
200009be:	0018      	movs	r0, r3
200009c0:	f7ff ff83 	bl	200008ca <game_over>
200009c4:	1e03      	subs	r3, r0, #0
200009c6:	d0b4      	beq.n	20000932 <main+0x32>
		}
	}
	delay_milli(1000);
200009c8:	23fa      	movs	r3, #250	; 0xfa
200009ca:	009b      	lsls	r3, r3, #2
200009cc:	0018      	movs	r0, r3
200009ce:	f7ff fcef 	bl	200003b0 <delay_milli>
	graphic_clear_screen();
200009d2:	f7ff fe11 	bl	200005f8 <graphic_clear_screen>
	write_ascii("Game over", "");
200009d6:	4a07      	ldr	r2, [pc, #28]	; (200009f4 <main+0xf4>)
200009d8:	4b07      	ldr	r3, [pc, #28]	; (200009f8 <main+0xf8>)
200009da:	0011      	movs	r1, r2
200009dc:	0018      	movs	r0, r3
200009de:	f7ff fc6f 	bl	200002c0 <write_ascii>
}
200009e2:	46c0      	nop			; (mov r8, r8)
200009e4:	46bd      	mov	sp, r7
200009e6:	b007      	add	sp, #28
200009e8:	bd90      	pop	{r4, r7, pc}
200009ea:	46c0      	nop			; (mov r8, r8)
200009ec:	20006d24 	andcs	r6, r0, r4, lsr #26
200009f0:	20003cf4 	strdcs	r3, [r0], -r4
200009f4:	20006d58 	andcs	r6, r0, r8, asr sp
200009f8:	20006d5c 	andcs	r6, r0, ip, asr sp

200009fc <__udivsi3>:
200009fc:	2200      	movs	r2, #0
200009fe:	0843      	lsrs	r3, r0, #1
20000a00:	428b      	cmp	r3, r1
20000a02:	d374      	bcc.n	20000aee <__udivsi3+0xf2>
20000a04:	0903      	lsrs	r3, r0, #4
20000a06:	428b      	cmp	r3, r1
20000a08:	d35f      	bcc.n	20000aca <__udivsi3+0xce>
20000a0a:	0a03      	lsrs	r3, r0, #8
20000a0c:	428b      	cmp	r3, r1
20000a0e:	d344      	bcc.n	20000a9a <__udivsi3+0x9e>
20000a10:	0b03      	lsrs	r3, r0, #12
20000a12:	428b      	cmp	r3, r1
20000a14:	d328      	bcc.n	20000a68 <__udivsi3+0x6c>
20000a16:	0c03      	lsrs	r3, r0, #16
20000a18:	428b      	cmp	r3, r1
20000a1a:	d30d      	bcc.n	20000a38 <__udivsi3+0x3c>
20000a1c:	22ff      	movs	r2, #255	; 0xff
20000a1e:	0209      	lsls	r1, r1, #8
20000a20:	ba12      	rev	r2, r2
20000a22:	0c03      	lsrs	r3, r0, #16
20000a24:	428b      	cmp	r3, r1
20000a26:	d302      	bcc.n	20000a2e <__udivsi3+0x32>
20000a28:	1212      	asrs	r2, r2, #8
20000a2a:	0209      	lsls	r1, r1, #8
20000a2c:	d065      	beq.n	20000afa <__udivsi3+0xfe>
20000a2e:	0b03      	lsrs	r3, r0, #12
20000a30:	428b      	cmp	r3, r1
20000a32:	d319      	bcc.n	20000a68 <__udivsi3+0x6c>
20000a34:	e000      	b.n	20000a38 <__udivsi3+0x3c>
20000a36:	0a09      	lsrs	r1, r1, #8
20000a38:	0bc3      	lsrs	r3, r0, #15
20000a3a:	428b      	cmp	r3, r1
20000a3c:	d301      	bcc.n	20000a42 <__udivsi3+0x46>
20000a3e:	03cb      	lsls	r3, r1, #15
20000a40:	1ac0      	subs	r0, r0, r3
20000a42:	4152      	adcs	r2, r2
20000a44:	0b83      	lsrs	r3, r0, #14
20000a46:	428b      	cmp	r3, r1
20000a48:	d301      	bcc.n	20000a4e <__udivsi3+0x52>
20000a4a:	038b      	lsls	r3, r1, #14
20000a4c:	1ac0      	subs	r0, r0, r3
20000a4e:	4152      	adcs	r2, r2
20000a50:	0b43      	lsrs	r3, r0, #13
20000a52:	428b      	cmp	r3, r1
20000a54:	d301      	bcc.n	20000a5a <__udivsi3+0x5e>
20000a56:	034b      	lsls	r3, r1, #13
20000a58:	1ac0      	subs	r0, r0, r3
20000a5a:	4152      	adcs	r2, r2
20000a5c:	0b03      	lsrs	r3, r0, #12
20000a5e:	428b      	cmp	r3, r1
20000a60:	d301      	bcc.n	20000a66 <__udivsi3+0x6a>
20000a62:	030b      	lsls	r3, r1, #12
20000a64:	1ac0      	subs	r0, r0, r3
20000a66:	4152      	adcs	r2, r2
20000a68:	0ac3      	lsrs	r3, r0, #11
20000a6a:	428b      	cmp	r3, r1
20000a6c:	d301      	bcc.n	20000a72 <__udivsi3+0x76>
20000a6e:	02cb      	lsls	r3, r1, #11
20000a70:	1ac0      	subs	r0, r0, r3
20000a72:	4152      	adcs	r2, r2
20000a74:	0a83      	lsrs	r3, r0, #10
20000a76:	428b      	cmp	r3, r1
20000a78:	d301      	bcc.n	20000a7e <__udivsi3+0x82>
20000a7a:	028b      	lsls	r3, r1, #10
20000a7c:	1ac0      	subs	r0, r0, r3
20000a7e:	4152      	adcs	r2, r2
20000a80:	0a43      	lsrs	r3, r0, #9
20000a82:	428b      	cmp	r3, r1
20000a84:	d301      	bcc.n	20000a8a <__udivsi3+0x8e>
20000a86:	024b      	lsls	r3, r1, #9
20000a88:	1ac0      	subs	r0, r0, r3
20000a8a:	4152      	adcs	r2, r2
20000a8c:	0a03      	lsrs	r3, r0, #8
20000a8e:	428b      	cmp	r3, r1
20000a90:	d301      	bcc.n	20000a96 <__udivsi3+0x9a>
20000a92:	020b      	lsls	r3, r1, #8
20000a94:	1ac0      	subs	r0, r0, r3
20000a96:	4152      	adcs	r2, r2
20000a98:	d2cd      	bcs.n	20000a36 <__udivsi3+0x3a>
20000a9a:	09c3      	lsrs	r3, r0, #7
20000a9c:	428b      	cmp	r3, r1
20000a9e:	d301      	bcc.n	20000aa4 <__udivsi3+0xa8>
20000aa0:	01cb      	lsls	r3, r1, #7
20000aa2:	1ac0      	subs	r0, r0, r3
20000aa4:	4152      	adcs	r2, r2
20000aa6:	0983      	lsrs	r3, r0, #6
20000aa8:	428b      	cmp	r3, r1
20000aaa:	d301      	bcc.n	20000ab0 <__udivsi3+0xb4>
20000aac:	018b      	lsls	r3, r1, #6
20000aae:	1ac0      	subs	r0, r0, r3
20000ab0:	4152      	adcs	r2, r2
20000ab2:	0943      	lsrs	r3, r0, #5
20000ab4:	428b      	cmp	r3, r1
20000ab6:	d301      	bcc.n	20000abc <__udivsi3+0xc0>
20000ab8:	014b      	lsls	r3, r1, #5
20000aba:	1ac0      	subs	r0, r0, r3
20000abc:	4152      	adcs	r2, r2
20000abe:	0903      	lsrs	r3, r0, #4
20000ac0:	428b      	cmp	r3, r1
20000ac2:	d301      	bcc.n	20000ac8 <__udivsi3+0xcc>
20000ac4:	010b      	lsls	r3, r1, #4
20000ac6:	1ac0      	subs	r0, r0, r3
20000ac8:	4152      	adcs	r2, r2
20000aca:	08c3      	lsrs	r3, r0, #3
20000acc:	428b      	cmp	r3, r1
20000ace:	d301      	bcc.n	20000ad4 <__udivsi3+0xd8>
20000ad0:	00cb      	lsls	r3, r1, #3
20000ad2:	1ac0      	subs	r0, r0, r3
20000ad4:	4152      	adcs	r2, r2
20000ad6:	0883      	lsrs	r3, r0, #2
20000ad8:	428b      	cmp	r3, r1
20000ada:	d301      	bcc.n	20000ae0 <__udivsi3+0xe4>
20000adc:	008b      	lsls	r3, r1, #2
20000ade:	1ac0      	subs	r0, r0, r3
20000ae0:	4152      	adcs	r2, r2
20000ae2:	0843      	lsrs	r3, r0, #1
20000ae4:	428b      	cmp	r3, r1
20000ae6:	d301      	bcc.n	20000aec <__udivsi3+0xf0>
20000ae8:	004b      	lsls	r3, r1, #1
20000aea:	1ac0      	subs	r0, r0, r3
20000aec:	4152      	adcs	r2, r2
20000aee:	1a41      	subs	r1, r0, r1
20000af0:	d200      	bcs.n	20000af4 <__udivsi3+0xf8>
20000af2:	4601      	mov	r1, r0
20000af4:	4152      	adcs	r2, r2
20000af6:	4610      	mov	r0, r2
20000af8:	4770      	bx	lr
20000afa:	e7ff      	b.n	20000afc <__udivsi3+0x100>
20000afc:	b501      	push	{r0, lr}
20000afe:	2000      	movs	r0, #0
20000b00:	f000 f8f0 	bl	20000ce4 <__aeabi_idiv0>
20000b04:	bd02      	pop	{r1, pc}
20000b06:	46c0      	nop			; (mov r8, r8)

20000b08 <__aeabi_uidivmod>:
20000b08:	2900      	cmp	r1, #0
20000b0a:	d0f7      	beq.n	20000afc <__udivsi3+0x100>
20000b0c:	e776      	b.n	200009fc <__udivsi3>
20000b0e:	4770      	bx	lr

20000b10 <__divsi3>:
20000b10:	4603      	mov	r3, r0
20000b12:	430b      	orrs	r3, r1
20000b14:	d47f      	bmi.n	20000c16 <__divsi3+0x106>
20000b16:	2200      	movs	r2, #0
20000b18:	0843      	lsrs	r3, r0, #1
20000b1a:	428b      	cmp	r3, r1
20000b1c:	d374      	bcc.n	20000c08 <__divsi3+0xf8>
20000b1e:	0903      	lsrs	r3, r0, #4
20000b20:	428b      	cmp	r3, r1
20000b22:	d35f      	bcc.n	20000be4 <__divsi3+0xd4>
20000b24:	0a03      	lsrs	r3, r0, #8
20000b26:	428b      	cmp	r3, r1
20000b28:	d344      	bcc.n	20000bb4 <__divsi3+0xa4>
20000b2a:	0b03      	lsrs	r3, r0, #12
20000b2c:	428b      	cmp	r3, r1
20000b2e:	d328      	bcc.n	20000b82 <__divsi3+0x72>
20000b30:	0c03      	lsrs	r3, r0, #16
20000b32:	428b      	cmp	r3, r1
20000b34:	d30d      	bcc.n	20000b52 <__divsi3+0x42>
20000b36:	22ff      	movs	r2, #255	; 0xff
20000b38:	0209      	lsls	r1, r1, #8
20000b3a:	ba12      	rev	r2, r2
20000b3c:	0c03      	lsrs	r3, r0, #16
20000b3e:	428b      	cmp	r3, r1
20000b40:	d302      	bcc.n	20000b48 <__divsi3+0x38>
20000b42:	1212      	asrs	r2, r2, #8
20000b44:	0209      	lsls	r1, r1, #8
20000b46:	d065      	beq.n	20000c14 <__divsi3+0x104>
20000b48:	0b03      	lsrs	r3, r0, #12
20000b4a:	428b      	cmp	r3, r1
20000b4c:	d319      	bcc.n	20000b82 <__divsi3+0x72>
20000b4e:	e000      	b.n	20000b52 <__divsi3+0x42>
20000b50:	0a09      	lsrs	r1, r1, #8
20000b52:	0bc3      	lsrs	r3, r0, #15
20000b54:	428b      	cmp	r3, r1
20000b56:	d301      	bcc.n	20000b5c <__divsi3+0x4c>
20000b58:	03cb      	lsls	r3, r1, #15
20000b5a:	1ac0      	subs	r0, r0, r3
20000b5c:	4152      	adcs	r2, r2
20000b5e:	0b83      	lsrs	r3, r0, #14
20000b60:	428b      	cmp	r3, r1
20000b62:	d301      	bcc.n	20000b68 <__divsi3+0x58>
20000b64:	038b      	lsls	r3, r1, #14
20000b66:	1ac0      	subs	r0, r0, r3
20000b68:	4152      	adcs	r2, r2
20000b6a:	0b43      	lsrs	r3, r0, #13
20000b6c:	428b      	cmp	r3, r1
20000b6e:	d301      	bcc.n	20000b74 <__divsi3+0x64>
20000b70:	034b      	lsls	r3, r1, #13
20000b72:	1ac0      	subs	r0, r0, r3
20000b74:	4152      	adcs	r2, r2
20000b76:	0b03      	lsrs	r3, r0, #12
20000b78:	428b      	cmp	r3, r1
20000b7a:	d301      	bcc.n	20000b80 <__divsi3+0x70>
20000b7c:	030b      	lsls	r3, r1, #12
20000b7e:	1ac0      	subs	r0, r0, r3
20000b80:	4152      	adcs	r2, r2
20000b82:	0ac3      	lsrs	r3, r0, #11
20000b84:	428b      	cmp	r3, r1
20000b86:	d301      	bcc.n	20000b8c <__divsi3+0x7c>
20000b88:	02cb      	lsls	r3, r1, #11
20000b8a:	1ac0      	subs	r0, r0, r3
20000b8c:	4152      	adcs	r2, r2
20000b8e:	0a83      	lsrs	r3, r0, #10
20000b90:	428b      	cmp	r3, r1
20000b92:	d301      	bcc.n	20000b98 <__divsi3+0x88>
20000b94:	028b      	lsls	r3, r1, #10
20000b96:	1ac0      	subs	r0, r0, r3
20000b98:	4152      	adcs	r2, r2
20000b9a:	0a43      	lsrs	r3, r0, #9
20000b9c:	428b      	cmp	r3, r1
20000b9e:	d301      	bcc.n	20000ba4 <__divsi3+0x94>
20000ba0:	024b      	lsls	r3, r1, #9
20000ba2:	1ac0      	subs	r0, r0, r3
20000ba4:	4152      	adcs	r2, r2
20000ba6:	0a03      	lsrs	r3, r0, #8
20000ba8:	428b      	cmp	r3, r1
20000baa:	d301      	bcc.n	20000bb0 <__divsi3+0xa0>
20000bac:	020b      	lsls	r3, r1, #8
20000bae:	1ac0      	subs	r0, r0, r3
20000bb0:	4152      	adcs	r2, r2
20000bb2:	d2cd      	bcs.n	20000b50 <__divsi3+0x40>
20000bb4:	09c3      	lsrs	r3, r0, #7
20000bb6:	428b      	cmp	r3, r1
20000bb8:	d301      	bcc.n	20000bbe <__divsi3+0xae>
20000bba:	01cb      	lsls	r3, r1, #7
20000bbc:	1ac0      	subs	r0, r0, r3
20000bbe:	4152      	adcs	r2, r2
20000bc0:	0983      	lsrs	r3, r0, #6
20000bc2:	428b      	cmp	r3, r1
20000bc4:	d301      	bcc.n	20000bca <__divsi3+0xba>
20000bc6:	018b      	lsls	r3, r1, #6
20000bc8:	1ac0      	subs	r0, r0, r3
20000bca:	4152      	adcs	r2, r2
20000bcc:	0943      	lsrs	r3, r0, #5
20000bce:	428b      	cmp	r3, r1
20000bd0:	d301      	bcc.n	20000bd6 <__divsi3+0xc6>
20000bd2:	014b      	lsls	r3, r1, #5
20000bd4:	1ac0      	subs	r0, r0, r3
20000bd6:	4152      	adcs	r2, r2
20000bd8:	0903      	lsrs	r3, r0, #4
20000bda:	428b      	cmp	r3, r1
20000bdc:	d301      	bcc.n	20000be2 <__divsi3+0xd2>
20000bde:	010b      	lsls	r3, r1, #4
20000be0:	1ac0      	subs	r0, r0, r3
20000be2:	4152      	adcs	r2, r2
20000be4:	08c3      	lsrs	r3, r0, #3
20000be6:	428b      	cmp	r3, r1
20000be8:	d301      	bcc.n	20000bee <__divsi3+0xde>
20000bea:	00cb      	lsls	r3, r1, #3
20000bec:	1ac0      	subs	r0, r0, r3
20000bee:	4152      	adcs	r2, r2
20000bf0:	0883      	lsrs	r3, r0, #2
20000bf2:	428b      	cmp	r3, r1
20000bf4:	d301      	bcc.n	20000bfa <__divsi3+0xea>
20000bf6:	008b      	lsls	r3, r1, #2
20000bf8:	1ac0      	subs	r0, r0, r3
20000bfa:	4152      	adcs	r2, r2
20000bfc:	0843      	lsrs	r3, r0, #1
20000bfe:	428b      	cmp	r3, r1
20000c00:	d301      	bcc.n	20000c06 <__divsi3+0xf6>
20000c02:	004b      	lsls	r3, r1, #1
20000c04:	1ac0      	subs	r0, r0, r3
20000c06:	4152      	adcs	r2, r2
20000c08:	1a41      	subs	r1, r0, r1
20000c0a:	d200      	bcs.n	20000c0e <__divsi3+0xfe>
20000c0c:	4601      	mov	r1, r0
20000c0e:	4152      	adcs	r2, r2
20000c10:	4610      	mov	r0, r2
20000c12:	4770      	bx	lr
20000c14:	e05d      	b.n	20000cd2 <__divsi3+0x1c2>
20000c16:	0fca      	lsrs	r2, r1, #31
20000c18:	d000      	beq.n	20000c1c <__divsi3+0x10c>
20000c1a:	4249      	negs	r1, r1
20000c1c:	1003      	asrs	r3, r0, #32
20000c1e:	d300      	bcc.n	20000c22 <__divsi3+0x112>
20000c20:	4240      	negs	r0, r0
20000c22:	4053      	eors	r3, r2
20000c24:	2200      	movs	r2, #0
20000c26:	469c      	mov	ip, r3
20000c28:	0903      	lsrs	r3, r0, #4
20000c2a:	428b      	cmp	r3, r1
20000c2c:	d32d      	bcc.n	20000c8a <__divsi3+0x17a>
20000c2e:	0a03      	lsrs	r3, r0, #8
20000c30:	428b      	cmp	r3, r1
20000c32:	d312      	bcc.n	20000c5a <__divsi3+0x14a>
20000c34:	22fc      	movs	r2, #252	; 0xfc
20000c36:	0189      	lsls	r1, r1, #6
20000c38:	ba12      	rev	r2, r2
20000c3a:	0a03      	lsrs	r3, r0, #8
20000c3c:	428b      	cmp	r3, r1
20000c3e:	d30c      	bcc.n	20000c5a <__divsi3+0x14a>
20000c40:	0189      	lsls	r1, r1, #6
20000c42:	1192      	asrs	r2, r2, #6
20000c44:	428b      	cmp	r3, r1
20000c46:	d308      	bcc.n	20000c5a <__divsi3+0x14a>
20000c48:	0189      	lsls	r1, r1, #6
20000c4a:	1192      	asrs	r2, r2, #6
20000c4c:	428b      	cmp	r3, r1
20000c4e:	d304      	bcc.n	20000c5a <__divsi3+0x14a>
20000c50:	0189      	lsls	r1, r1, #6
20000c52:	d03a      	beq.n	20000cca <__divsi3+0x1ba>
20000c54:	1192      	asrs	r2, r2, #6
20000c56:	e000      	b.n	20000c5a <__divsi3+0x14a>
20000c58:	0989      	lsrs	r1, r1, #6
20000c5a:	09c3      	lsrs	r3, r0, #7
20000c5c:	428b      	cmp	r3, r1
20000c5e:	d301      	bcc.n	20000c64 <__divsi3+0x154>
20000c60:	01cb      	lsls	r3, r1, #7
20000c62:	1ac0      	subs	r0, r0, r3
20000c64:	4152      	adcs	r2, r2
20000c66:	0983      	lsrs	r3, r0, #6
20000c68:	428b      	cmp	r3, r1
20000c6a:	d301      	bcc.n	20000c70 <__divsi3+0x160>
20000c6c:	018b      	lsls	r3, r1, #6
20000c6e:	1ac0      	subs	r0, r0, r3
20000c70:	4152      	adcs	r2, r2
20000c72:	0943      	lsrs	r3, r0, #5
20000c74:	428b      	cmp	r3, r1
20000c76:	d301      	bcc.n	20000c7c <__divsi3+0x16c>
20000c78:	014b      	lsls	r3, r1, #5
20000c7a:	1ac0      	subs	r0, r0, r3
20000c7c:	4152      	adcs	r2, r2
20000c7e:	0903      	lsrs	r3, r0, #4
20000c80:	428b      	cmp	r3, r1
20000c82:	d301      	bcc.n	20000c88 <__divsi3+0x178>
20000c84:	010b      	lsls	r3, r1, #4
20000c86:	1ac0      	subs	r0, r0, r3
20000c88:	4152      	adcs	r2, r2
20000c8a:	08c3      	lsrs	r3, r0, #3
20000c8c:	428b      	cmp	r3, r1
20000c8e:	d301      	bcc.n	20000c94 <__divsi3+0x184>
20000c90:	00cb      	lsls	r3, r1, #3
20000c92:	1ac0      	subs	r0, r0, r3
20000c94:	4152      	adcs	r2, r2
20000c96:	0883      	lsrs	r3, r0, #2
20000c98:	428b      	cmp	r3, r1
20000c9a:	d301      	bcc.n	20000ca0 <__divsi3+0x190>
20000c9c:	008b      	lsls	r3, r1, #2
20000c9e:	1ac0      	subs	r0, r0, r3
20000ca0:	4152      	adcs	r2, r2
20000ca2:	d2d9      	bcs.n	20000c58 <__divsi3+0x148>
20000ca4:	0843      	lsrs	r3, r0, #1
20000ca6:	428b      	cmp	r3, r1
20000ca8:	d301      	bcc.n	20000cae <__divsi3+0x19e>
20000caa:	004b      	lsls	r3, r1, #1
20000cac:	1ac0      	subs	r0, r0, r3
20000cae:	4152      	adcs	r2, r2
20000cb0:	1a41      	subs	r1, r0, r1
20000cb2:	d200      	bcs.n	20000cb6 <__divsi3+0x1a6>
20000cb4:	4601      	mov	r1, r0
20000cb6:	4663      	mov	r3, ip
20000cb8:	4152      	adcs	r2, r2
20000cba:	105b      	asrs	r3, r3, #1
20000cbc:	4610      	mov	r0, r2
20000cbe:	d301      	bcc.n	20000cc4 <__divsi3+0x1b4>
20000cc0:	4240      	negs	r0, r0
20000cc2:	2b00      	cmp	r3, #0
20000cc4:	d500      	bpl.n	20000cc8 <__divsi3+0x1b8>
20000cc6:	4249      	negs	r1, r1
20000cc8:	4770      	bx	lr
20000cca:	4663      	mov	r3, ip
20000ccc:	105b      	asrs	r3, r3, #1
20000cce:	d300      	bcc.n	20000cd2 <__divsi3+0x1c2>
20000cd0:	4240      	negs	r0, r0
20000cd2:	b501      	push	{r0, lr}
20000cd4:	2000      	movs	r0, #0
20000cd6:	f000 f805 	bl	20000ce4 <__aeabi_idiv0>
20000cda:	bd02      	pop	{r1, pc}

20000cdc <__aeabi_idivmod>:
20000cdc:	2900      	cmp	r1, #0
20000cde:	d0f8      	beq.n	20000cd2 <__divsi3+0x1c2>
20000ce0:	e716      	b.n	20000b10 <__divsi3>
20000ce2:	4770      	bx	lr

20000ce4 <__aeabi_idiv0>:
20000ce4:	4770      	bx	lr
20000ce6:	46c0      	nop			; (mov r8, r8)

20000ce8 <snake_geometry>:
20000ce8:	0000000c 	andeq	r0, r0, ip
20000cec:	00000001 	andeq	r0, r0, r1
20000cf0:	00000001 	andeq	r0, r0, r1
20000cf4:	00010000 	andeq	r0, r1, r0
20000cf8:	00030002 	andeq	r0, r3, r2
20000cfc:	01030100 	mrseq	r0, (UNDEF: 19)
20000d00:	02030200 	andeq	r0, r3, #0, 4
20000d04:	03010300 	movweq	r0, #4864	; 0x1300
20000d08:	03030302 	movweq	r0, #13058	; 0x3302
	...

20003cf4 <snake>:
20003cf4:	20000ce8 	andcs	r0, r0, r8, ror #25
20003cf8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20003cfc:	00000000 	andeq	r0, r0, r0
20003d00:	00000018 	andeq	r0, r0, r8, lsl r0
20003d04:	00000008 	andeq	r0, r0, r8
20003d08:	20000605 	andcs	r0, r0, r5, lsl #12
20003d0c:	20000687 	andcs	r0, r0, r7, lsl #13
20003d10:	20000729 	andcs	r0, r0, r9, lsr #14
20003d14:	20000709 	andcs	r0, r0, r9, lsl #14

20003d18 <apple_geometry>:
20003d18:	0000000c 	andeq	r0, r0, ip
20003d1c:	00000001 	andeq	r0, r0, r1
20003d20:	00000001 	andeq	r0, r0, r1
20003d24:	02000100 	andeq	r0, r0, #0, 2
20003d28:	01010001 	tsteq	r1, r1
20003d2c:	03010201 	movweq	r0, #4609	; 0x1201
20003d30:	01020002 	tsteq	r2, r2
20003d34:	03020202 	movweq	r0, #8706	; 0x2202
20003d38:	02030103 	andeq	r0, r3, #-1073741824	; 0xc0000000
	...

20006d24 <apple>:
20006d24:	20003d18 	andcs	r3, r0, r8, lsl sp
	...
20006d30:	00000008 	andeq	r0, r0, r8
20006d34:	00000008 	andeq	r0, r0, r8
20006d38:	20000605 	andcs	r0, r0, r5, lsl #12
20006d3c:	20000687 	andcs	r0, r0, r7, lsl #13
20006d40:	2000076b 	andcs	r0, r0, fp, ror #14
20006d44:	20000709 	andcs	r0, r0, r9, lsl #14
20006d48:	0a030201 	beq	200c7554 <apple+0xc0830>
20006d4c:	0b060504 	bleq	20188164 <apple+0x181440>
20006d50:	0c090807 	stceq	8, cr0, [r9], {7}
20006d54:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20006d24 <apple>
20006d58:	00000000 	andeq	r0, r0, r0
20006d5c:	656d6147 	strbvs	r6, [sp, #-327]!	; 0xfffffeb9
20006d60:	65766f20 	ldrbvs	r6, [r6, #-3872]!	; 0xfffff0e0
20006d64:	00000072 	andeq	r0, r0, r2, ror r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000364 	andeq	r0, r0, r4, ror #6
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	000001f5 	strdeq	r0, [r0], -r5
  10:	0000540c 	andeq	r5, r0, ip, lsl #8
  14:	00016600 	andeq	r6, r1, r0, lsl #12
  18:	00001000 	andeq	r1, r0, r0
  1c:	00031020 	andeq	r1, r3, r0, lsr #32
  20:	00000000 	andeq	r0, r0, r0
  24:	02280200 	eoreq	r0, r8, #0, 4
  28:	00ff1220 	rscseq	r1, pc, r0, lsr #4
  2c:	b9030000 	stmdblt	r3, {}	; <UNPREDICTABLE>
  30:	02000002 	andeq	r0, r0, #2
  34:	01040e21 	tsteq	r4, r1, lsr #28
  38:	03000000 	movweq	r0, #0
  3c:	0000003b 	andeq	r0, r0, fp, lsr r0
  40:	0b142202 	bleq	508850 <startup-0x1faf77b0>
  44:	04000001 	streq	r0, [r0], #-1
  48:	00014803 	andeq	r4, r1, r3, lsl #16
  4c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
  50:	0000010b 	andeq	r0, r0, fp, lsl #2
  54:	02790306 	rsbseq	r0, r9, #402653184	; 0x18000000
  58:	24020000 	strcs	r0, [r2], #-0
  5c:	0001040e 	andeq	r0, r1, lr, lsl #8
  60:	42030800 	andmi	r0, r3, #0, 16
  64:	02000001 	andeq	r0, r0, #1
  68:	01040e25 	tsteq	r4, r5, lsr #28
  6c:	030c0000 	movweq	r0, #49152	; 0xc000
  70:	0000028d 	andeq	r0, r0, sp, lsl #5
  74:	120f2602 	andne	r2, pc, #2097152	; 0x200000
  78:	10000001 	andne	r0, r0, r1
  7c:	00027103 	andeq	r7, r2, r3, lsl #2
  80:	0f270200 	svceq	0x00270200
  84:	00000112 	andeq	r0, r0, r2, lsl r1
  88:	01520311 	cmpeq	r2, r1, lsl r3
  8c:	28020000 	stmdacs	r2, {}	; <UNPREDICTABLE>
  90:	00010b14 	andeq	r0, r1, r4, lsl fp
  94:	cf031200 	svcgt	0x00031200
  98:	02000001 	andeq	r0, r0, #1
  9c:	01120f29 	tsteq	r2, r9, lsr #30
  a0:	03140000 	tsteq	r4, #0
  a4:	0000004c 	andeq	r0, r0, ip, asr #32
  a8:	120f2a02 	andne	r2, pc, #8192	; 0x2000
  ac:	15000001 	strne	r0, [r0, #-1]
  b0:	00015c03 	andeq	r5, r1, r3, lsl #24
  b4:	142b0200 	strtne	r0, [fp], #-512	; 0xfffffe00
  b8:	0000010b 	andeq	r0, r0, fp, lsl #2
  bc:	002b0316 	eoreq	r0, fp, r6, lsl r3
  c0:	2c020000 	stccs	0, cr0, [r2], {-0}
  c4:	0001040e 	andeq	r0, r1, lr, lsl #8
  c8:	00031800 	andeq	r1, r3, r0, lsl #16
  cc:	02000000 	andeq	r0, r0, #0
  d0:	010b142d 	tsteq	fp, sp, lsr #8
  d4:	031c0000 	tsteq	ip, #0
  d8:	00000042 	andeq	r0, r0, r2, asr #32
  dc:	0b142e02 	bleq	50b8ec <startup-0x1faf4714>
  e0:	1e000001 	cdpne	0, 0, cr0, cr0, cr1, {0}
  e4:	0000fe03 	andeq	pc, r0, r3, lsl #28
  e8:	0e2f0200 	cdpeq	2, 2, cr0, cr15, cr0, {0}
  ec:	00000104 	andeq	r0, r0, r4, lsl #2
  f0:	00f90320 	rscseq	r0, r9, r0, lsr #6
  f4:	30020000 	andcc	r0, r2, r0
  f8:	0001040e 	andeq	r0, r1, lr, lsl #8
  fc:	04002400 	streq	r2, [r0], #-1024	; 0xfffffc00
 100:	00000025 	andeq	r0, r0, r5, lsr #32
 104:	1e070405 	cdpne	4, 0, cr0, cr7, cr5, {0}
 108:	05000000 	streq	r0, [r0, #-0]
 10c:	00180702 	andseq	r0, r8, r2, lsl #14
 110:	01050000 	mrseq	r0, (UNDEF: 5)
 114:	0000cd08 	andeq	ip, r0, r8, lsl #26
 118:	00f30600 	rscseq	r0, r3, r0, lsl #12
 11c:	31020000 	mrscc	r0, (UNDEF: 2)
 120:	0001250a 	andeq	r2, r1, sl, lsl #10
 124:	ff040700 			; <UNDEFINED> instruction: 0xff040700
 128:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 12c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
 130:	0c090074 	stceq	0, cr0, [r9], {116}	; 0x74
 134:	01000000 	mrseq	r0, (UNDEF: 0)
 138:	012b0578 			; <UNDEFINED> instruction: 0x012b0578
 13c:	02c00000 	sbceq	r0, r0, #0
 140:	00602000 	rsbeq	r2, r0, r0
 144:	9c010000 	stcls	0, cr0, [r1], {-0}
 148:	00000178 	andeq	r0, r0, r8, ror r1
 14c:	0000ed0a 	andeq	lr, r0, sl, lsl #26
 150:	16780100 	ldrbtne	r0, [r8], -r0, lsl #2
 154:	00000178 	andeq	r0, r0, r8, ror r1
 158:	0a6c9102 	beq	1b24568 <startup-0x1e4dba98>
 15c:	00000103 	andeq	r0, r0, r3, lsl #2
 160:	78247801 	stmdavc	r4!, {r0, fp, ip, sp, lr}
 164:	02000001 	andeq	r0, r0, #1
 168:	730b6891 	movwvc	r6, #47249	; 0xb891
 16c:	087a0100 	ldmdaeq	sl!, {r8}^
 170:	00000178 	andeq	r0, r0, r8, ror r1
 174:	00749102 	rsbseq	r9, r4, r2, lsl #2
 178:	017e0407 	cmneq	lr, r7, lsl #8
 17c:	01050000 	mrseq	r0, (UNDEF: 5)
 180:	0000d608 	andeq	sp, r0, r8, lsl #12
 184:	02810c00 	addeq	r0, r1, #0, 24
 188:	6f010000 	svcvs	0x00010000
 18c:	00027406 	andeq	r7, r2, r6, lsl #8
 190:	00004c20 	andeq	r4, r0, r0, lsr #24
 194:	c99c0100 	ldmibgt	ip, {r8}
 198:	0d000001 	stceq	0, cr0, [r0, #-4]
 19c:	00776f72 	rsbseq	r6, r7, r2, ror pc
 1a0:	12206f01 	eorne	r6, r0, #1, 30
 1a4:	02000001 	andeq	r0, r0, #1
 1a8:	050a6f91 	streq	r6, [sl, #-3985]	; 0xfffff06f
 1ac:	01000000 	mrseq	r0, (UNDEF: 0)
 1b0:	0112336f 	tsteq	r2, pc, ror #6
 1b4:	91020000 	mrsls	r0, (UNDEF: 2)
 1b8:	64610b6e 	strbtvs	r0, [r1], #-2926	; 0xfffff492
 1bc:	71010072 	tstvc	r1, r2, ror r0
 1c0:	00017e07 	andeq	r7, r1, r7, lsl #28
 1c4:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 1c8:	02d60c00 	sbcseq	r0, r6, #0, 24
 1cc:	67010000 	strvs	r0, [r1, -r0]
 1d0:	00023806 	andeq	r3, r2, r6, lsl #16
 1d4:	00003c20 	andeq	r3, r0, r0, lsr #24
 1d8:	ed9c0100 	ldfs	f0, [ip]
 1dc:	0d000001 	stceq	0, cr0, [r0, #-4]
 1e0:	67010063 	strvs	r0, [r1, -r3, rrx]
 1e4:	00017e1c 	andeq	r7, r1, ip, lsl lr
 1e8:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 1ec:	00300e00 	eorseq	r0, r0, r0, lsl #28
 1f0:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
 1f4:	0001fe06 	andeq	pc, r1, r6, lsl #28
 1f8:	00003a20 	andeq	r3, r0, r0, lsr #20
 1fc:	0c9c0100 	ldfeqs	f0, [ip], {0}
 200:	000001e7 	andeq	r0, r0, r7, ror #3
 204:	c8065101 	stmdagt	r6, {r0, r8, ip, lr}
 208:	36200001 	strtcc	r0, [r0], -r1
 20c:	01000000 	mrseq	r0, (UNDEF: 0)
 210:	0002259c 	muleq	r2, ip, r5
 214:	01ed0a00 	mvneq	r0, r0, lsl #20
 218:	51010000 	mrspl	r0, (UNDEF: 1)
 21c:	00011223 	andeq	r1, r1, r3, lsr #4
 220:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 224:	02a90900 	adceq	r0, r9, #0, 18
 228:	47010000 	strmi	r0, [r1, -r0]
 22c:	0001120f 	andeq	r1, r1, pc, lsl #4
 230:	00018000 	andeq	r8, r1, r0
 234:	00004820 	andeq	r4, r0, r0, lsr #16
 238:	4d9c0100 	ldfmis	f0, [ip]
 23c:	0b000002 	bleq	24c <startup-0x1ffffdb4>
 240:	4c010063 	stcmi	0, cr0, [r1], {99}	; 0x63
 244:	00017e07 	andeq	r7, r1, r7, lsl #28
 248:	6f910200 	svcvs	0x00910200
 24c:	00db0900 	sbcseq	r0, fp, r0, lsl #18
 250:	3b010000 	blcc	40258 <startup-0x1ffbfda8>
 254:	0001120f 	andeq	r1, r1, pc, lsl #4
 258:	00014000 	andeq	r4, r1, r0
 25c:	00004020 	andeq	r4, r0, r0, lsr #32
 260:	759c0100 	ldrvc	r0, [ip, #256]	; 0x100
 264:	0b000002 	bleq	274 <startup-0x1ffffd8c>
 268:	3d010063 	stccc	0, cr0, [r1, #-396]	; 0xfffffe74
 26c:	00017e07 	andeq	r7, r1, r7, lsl #28
 270:	6f910200 	svcvs	0x00910200
 274:	01d60c00 	bicseq	r0, r6, r0, lsl #24
 278:	34010000 	strcc	r0, [r1], #-0
 27c:	00011606 	andeq	r1, r1, r6, lsl #12
 280:	00002a20 	andeq	r2, r0, r0, lsr #20
 284:	999c0100 	ldmibls	ip, {r8}
 288:	0d000002 	stceq	0, cr0, [r0, #-8]
 28c:	34010063 	strcc	r0, [r1], #-99	; 0xffffff9d
 290:	00011226 	andeq	r1, r1, r6, lsr #4
 294:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 298:	01320c00 	teqeq	r2, r0, lsl #24
 29c:	2d010000 	stccs	0, cr0, [r1, #-0]
 2a0:	0000ec06 	andeq	lr, r0, r6, lsl #24
 2a4:	00002a20 	andeq	r2, r0, r0, lsr #20
 2a8:	bd9c0100 	ldflts	f0, [ip]
 2ac:	0d000002 	stceq	0, cr0, [r0, #-8]
 2b0:	2d010063 	stccs	0, cr0, [r1, #-396]	; 0xfffffe74
 2b4:	00011225 	andeq	r1, r1, r5, lsr #4
 2b8:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 2bc:	01090900 	tsteq	r9, r0, lsl #18
 2c0:	22010000 	andcs	r0, r1, #0
 2c4:	00017e06 	andeq	r7, r1, r6, lsl #28
 2c8:	0000c000 	andeq	ip, r0, r0
 2cc:	00002c20 	andeq	r2, r0, r0, lsr #24
 2d0:	e59c0100 	ldr	r0, [ip, #256]	; 0x100
 2d4:	0b000002 	bleq	2e4 <startup-0x1ffffd1c>
 2d8:	24010063 	strcs	r0, [r1], #-99	; 0xffffff9d
 2dc:	00017e07 	andeq	r7, r1, r7, lsl #28
 2e0:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 2e4:	02bf0c00 	adcseq	r0, pc, #0, 24
 2e8:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
 2ec:	00009006 	andeq	r9, r0, r6
 2f0:	00003020 	andeq	r3, r0, r0, lsr #32
 2f4:	099c0100 	ldmibeq	ip, {r8}
 2f8:	0d000003 	stceq	0, cr0, [r0, #-12]
 2fc:	18010063 	stmdane	r1, {r0, r1, r5, r6}
 300:	0001122d 	andeq	r1, r1, sp, lsr #4
 304:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 308:	02940f00 	addseq	r0, r4, #0, 30
 30c:	10010000 	andne	r0, r1, r0
 310:	00004806 	andeq	r4, r0, r6, lsl #16
 314:	00004820 	andeq	r4, r0, r0, lsr #16
 318:	3a9c0100 	bcc	fe700720 <apple+0xde6f99fc>
 31c:	0d000003 	stceq	0, cr0, [r0, #-12]
 320:	10010078 	andne	r0, r1, r8, ror r0
 324:	00017e22 	andeq	r7, r1, r2, lsr #28
 328:	6f910200 	svcvs	0x00910200
 32c:	0100630b 	tsteq	r0, fp, lsl #6
 330:	017e0712 	cmneq	lr, r2, lsl r7
 334:	91020000 	mrsls	r0, (UNDEF: 2)
 338:	1f100077 	svcne	0x00100077
 33c:	01000001 	tsteq	r0, r1
 340:	00100609 	andseq	r0, r0, r9, lsl #12
 344:	00382000 	eorseq	r2, r8, r0
 348:	9c010000 	stcls	0, cr0, [r1], {-0}
 34c:	0100780d 	tsteq	r0, sp, lsl #16
 350:	017e2009 	cmneq	lr, r9
 354:	91020000 	mrsls	r0, (UNDEF: 2)
 358:	00630b6f 	rsbeq	r0, r3, pc, ror #22
 35c:	7e070b01 	vmlavc.f64	d0, d7, d1
 360:	02000001 	andeq	r0, r0, #1
 364:	00007791 	muleq	r0, r1, r7
 368:	0000010d 	andeq	r0, r0, sp, lsl #2
 36c:	01260004 			; <UNDEFINED> instruction: 0x01260004
 370:	01040000 	mrseq	r0, (UNDEF: 4)
 374:	000001f5 	strdeq	r0, [r0], -r5
 378:	0002e70c 	andeq	lr, r2, ip, lsl #14
 37c:	00016600 	andeq	r6, r1, r0, lsl #12
 380:	00032000 	andeq	r2, r3, r0
 384:	00010420 	andeq	r0, r1, r0, lsr #8
 388:	0001dd00 	andeq	sp, r1, r0, lsl #26
 38c:	07040200 	streq	r0, [r4, -r0, lsl #4]
 390:	0000001e 	andeq	r0, r0, lr, lsl r0
 394:	18070202 	stmdane	r7, {r1, r9}
 398:	02000000 	andeq	r0, r0, #0
 39c:	00cd0801 	sbceq	r0, sp, r1, lsl #16
 3a0:	04030000 	streq	r0, [r3], #-0
 3a4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
 3a8:	036b0400 	cmneq	fp, #0, 8
 3ac:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
 3b0:	00003a06 	andeq	r3, r0, r6, lsl #20
 3b4:	0003d600 	andeq	sp, r3, r0, lsl #12
 3b8:	00004e20 	andeq	r4, r0, r0, lsr #28
 3bc:	969c0100 	ldrls	r0, [ip], r0, lsl #2
 3c0:	05000000 	streq	r0, [r0, #-0]
 3c4:	006e696d 	rsbeq	r6, lr, sp, ror #18
 3c8:	3a182801 	bcc	60a3d4 <startup-0x1f9f5c2c>
 3cc:	02000000 	andeq	r0, r0, #0
 3d0:	6d056c91 	stcvs	12, cr6, [r5, #-580]	; 0xfffffdbc
 3d4:	01007861 	tsteq	r0, r1, ror #16
 3d8:	003a2128 	eorseq	r2, sl, r8, lsr #2
 3dc:	91020000 	mrsls	r0, (UNDEF: 2)
 3e0:	03640668 	cmneq	r4, #104, 12	; 0x6800000
 3e4:	2a010000 	bcs	403ec <startup-0x1ffbfc14>
 3e8:	00009608 	andeq	r9, r0, r8, lsl #12
 3ec:	76910200 	ldrvc	r0, [r1], r0, lsl #4
 3f0:	01006307 	tsteq	r0, r7, lsl #6
 3f4:	0033102b 	eorseq	r1, r3, fp, lsr #32
 3f8:	91020000 	mrsls	r0, (UNDEF: 2)
 3fc:	02020075 	andeq	r0, r2, #117	; 0x75
 400:	00039105 	andeq	r9, r3, r5, lsl #2
 404:	03850800 	orreq	r0, r5, #0, 16
 408:	1d010000 	stcne	0, cr0, [r1, #-0]
 40c:	0003b006 	andeq	fp, r3, r6
 410:	00002620 	andeq	r2, r0, r0, lsr #12
 414:	c29c0100 	addsgt	r0, ip, #0, 2
 418:	05000000 	streq	r0, [r0, #-0]
 41c:	0100736d 	tsteq	r0, sp, ror #6
 420:	00251f1d 	eoreq	r1, r5, sp, lsl pc
 424:	91020000 	mrsls	r0, (UNDEF: 2)
 428:	9b080074 	blls	200600 <startup-0x1fdffa00>
 42c:	01000003 	tsteq	r0, r3
 430:	03640610 	cmneq	r4, #16, 12	; 0x1000000
 434:	004c2000 	subeq	r2, ip, r0
 438:	9c010000 	stcls	0, cr0, [r1], {-0}
 43c:	000000fe 	strdeq	r0, [r0], -lr
 440:	00737505 	rsbseq	r7, r3, r5, lsl #10
 444:	251f1001 	ldrcs	r1, [pc, #-1]	; 44b <startup-0x1ffffbb5>
 448:	02000000 	andeq	r0, r0, #0
 44c:	84096c91 	strhi	r6, [r9], #-3217	; 0xfffff36f
 450:	16200003 	strtne	r0, [r0], -r3
 454:	07000000 	streq	r0, [r0, -r0]
 458:	18010069 	stmdane	r1, {r0, r3, r5, r6}
 45c:	00003a0b 	andeq	r3, r0, fp, lsl #20
 460:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 464:	790a0000 	stmdbvc	sl, {}	; <UNPREDICTABLE>
 468:	01000003 	tsteq	r0, r3
 46c:	03200605 			; <UNDEFINED> instruction: 0x03200605
 470:	00442000 	subeq	r2, r4, r0
 474:	9c010000 	stcls	0, cr0, [r1], {-0}
 478:	0001d100 	andeq	sp, r1, r0, lsl #2
 47c:	e0000400 	and	r0, r0, r0, lsl #8
 480:	04000001 	streq	r0, [r0], #-1
 484:	0001f501 	andeq	pc, r1, r1, lsl #10
 488:	03c00c00 	biceq	r0, r0, #0, 24
 48c:	01660000 	cmneq	r6, r0
 490:	04240000 	strteq	r0, [r4], #-0
 494:	01202000 			; <UNDEFINED> instruction: 0x01202000
 498:	03260000 			; <UNDEFINED> instruction: 0x03260000
 49c:	28020000 	stmdacs	r2, {}	; <UNPREDICTABLE>
 4a0:	ff122002 			; <UNDEFINED> instruction: 0xff122002
 4a4:	03000000 	movweq	r0, #0
 4a8:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
 4ac:	040e2102 	streq	r2, [lr], #-258	; 0xfffffefe
 4b0:	00000001 	andeq	r0, r0, r1
 4b4:	00003b03 	andeq	r3, r0, r3, lsl #22
 4b8:	14220200 	strtne	r0, [r2], #-512	; 0xfffffe00
 4bc:	0000010b 	andeq	r0, r0, fp, lsl #2
 4c0:	01480304 	cmpeq	r8, r4, lsl #6
 4c4:	23020000 	movwcs	r0, #8192	; 0x2000
 4c8:	00010b14 	andeq	r0, r1, r4, lsl fp
 4cc:	79030600 	stmdbvc	r3, {r9, sl}
 4d0:	02000002 	andeq	r0, r0, #2
 4d4:	01040e24 	tsteq	r4, r4, lsr #28
 4d8:	03080000 	movweq	r0, #32768	; 0x8000
 4dc:	00000142 	andeq	r0, r0, r2, asr #2
 4e0:	040e2502 	streq	r2, [lr], #-1282	; 0xfffffafe
 4e4:	0c000001 	stceq	0, cr0, [r0], {1}
 4e8:	00028d03 	andeq	r8, r2, r3, lsl #26
 4ec:	0f260200 	svceq	0x00260200
 4f0:	00000112 	andeq	r0, r0, r2, lsl r1
 4f4:	02710310 	rsbseq	r0, r1, #16, 6	; 0x40000000
 4f8:	27020000 	strcs	r0, [r2, -r0]
 4fc:	0001120f 	andeq	r1, r1, pc, lsl #4
 500:	52031100 	andpl	r1, r3, #0, 2
 504:	02000001 	andeq	r0, r0, #1
 508:	010b1428 	tsteq	fp, r8, lsr #8
 50c:	03120000 	tsteq	r2, #0
 510:	000001cf 	andeq	r0, r0, pc, asr #3
 514:	120f2902 	andne	r2, pc, #32768	; 0x8000
 518:	14000001 	strne	r0, [r0], #-1
 51c:	00004c03 	andeq	r4, r0, r3, lsl #24
 520:	0f2a0200 	svceq	0x002a0200
 524:	00000112 	andeq	r0, r0, r2, lsl r1
 528:	015c0315 	cmpeq	ip, r5, lsl r3
 52c:	2b020000 	blcs	80534 <startup-0x1ff7facc>
 530:	00010b14 	andeq	r0, r1, r4, lsl fp
 534:	2b031600 	blcs	c5d3c <startup-0x1ff3a2c4>
 538:	02000000 	andeq	r0, r0, #0
 53c:	01040e2c 	tsteq	r4, ip, lsr #28
 540:	03180000 	tsteq	r8, #0
 544:	00000000 	andeq	r0, r0, r0
 548:	0b142d02 	bleq	50b958 <startup-0x1faf46a8>
 54c:	1c000001 	stcne	0, cr0, [r0], {1}
 550:	00004203 	andeq	r4, r0, r3, lsl #4
 554:	142e0200 	strtne	r0, [lr], #-512	; 0xfffffe00
 558:	0000010b 	andeq	r0, r0, fp, lsl #2
 55c:	00fe031e 	rscseq	r0, lr, lr, lsl r3
 560:	2f020000 	svccs	0x00020000
 564:	0001040e 	andeq	r0, r1, lr, lsl #8
 568:	f9032000 			; <UNDEFINED> instruction: 0xf9032000
 56c:	02000000 	andeq	r0, r0, #0
 570:	01040e30 	tsteq	r4, r0, lsr lr
 574:	00240000 	eoreq	r0, r4, r0
 578:	00002504 	andeq	r2, r0, r4, lsl #10
 57c:	07040500 	streq	r0, [r4, -r0, lsl #10]
 580:	0000001e 	andeq	r0, r0, lr, lsl r0
 584:	18070205 	stmdane	r7, {r0, r2, r9}
 588:	05000000 	streq	r0, [r0, #-0]
 58c:	00cd0801 	sbceq	r0, sp, r1, lsl #16
 590:	f3060000 	vhadd.u8	d0, d6, d0
 594:	02000000 	andeq	r0, r0, #0
 598:	01250a31 			; <UNDEFINED> instruction: 0x01250a31
 59c:	04070000 	streq	r0, [r7], #-0
 5a0:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
 5a4:	69050408 	stmdbvs	r5, {r3, sl}
 5a8:	0900746e 	stmdbeq	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
 5ac:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
 5b0:	120f2001 	andne	r2, pc, #1
 5b4:	dc000001 	stcle	0, cr0, [r0], {1}
 5b8:	68200004 	stmdavs	r0!, {r2}
 5bc:	01000000 	mrseq	r0, (UNDEF: 0)
 5c0:	00017a9c 	muleq	r1, ip, sl
 5c4:	656b0a00 	strbvs	r0, [fp, #-2560]!	; 0xfffff600
 5c8:	22010079 	andcs	r0, r1, #121	; 0x79
 5cc:	00017a10 	andeq	r7, r1, r0, lsl sl
 5d0:	58910200 	ldmpl	r1, {r9}
 5d4:	776f720a 	strbvc	r7, [pc, -sl, lsl #4]!
 5d8:	06240100 	strteq	r0, [r4], -r0, lsl #2
 5dc:	0000012b 	andeq	r0, r0, fp, lsr #2
 5e0:	0a6c9102 	beq	1b249f0 <startup-0x1e4db610>
 5e4:	006c6f63 	rsbeq	r6, ip, r3, ror #30
 5e8:	2b0b2401 	blcs	2c95f4 <startup-0x1fd36a0c>
 5ec:	02000001 	andeq	r0, r0, #1
 5f0:	0b006891 	bleq	1a83c <startup-0x1ffe57c4>
 5f4:	00000112 	andeq	r0, r0, r2, lsl r1
 5f8:	0000018a 	andeq	r0, r0, sl, lsl #3
 5fc:	0001040c 	andeq	r0, r1, ip, lsl #8
 600:	0d000f00 	stceq	15, cr0, [r0, #-0]
 604:	000003b8 			; <UNDEFINED> instruction: 0x000003b8
 608:	2b051201 	blcs	144e14 <startup-0x1febb1ec>
 60c:	88000001 	stmdahi	r0, {r0}
 610:	54200004 	strtpl	r0, [r0], #-4
 614:	01000000 	mrseq	r0, (UNDEF: 0)
 618:	0001b29c 	muleq	r1, ip, r2
 61c:	00630a00 	rsbeq	r0, r3, r0, lsl #20
 620:	12101401 	andsne	r1, r0, #16777216	; 0x1000000
 624:	02000001 	andeq	r0, r0, #1
 628:	0e007791 	mcreq	7, 0, r7, cr0, cr1, {4}
 62c:	000003a7 	andeq	r0, r0, r7, lsr #7
 630:	24060601 	strcs	r0, [r6], #-1537	; 0xfffff9ff
 634:	64200004 	strtvs	r0, [r0], #-4
 638:	01000000 	mrseq	r0, (UNDEF: 0)
 63c:	6f720f9c 	svcvs	0x00720f9c
 640:	06010077 			; <UNDEFINED> instruction: 0x06010077
 644:	0001041f 	andeq	r0, r1, pc, lsl r4
 648:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 64c:	01770000 	cmneq	r7, r0
 650:	00040000 	andeq	r0, r4, r0
 654:	000002d3 	ldrdeq	r0, [r0], -r3
 658:	01f50104 	mvnseq	r0, r4, lsl #2
 65c:	520c0000 	andpl	r0, ip, #0
 660:	66000004 	strvs	r0, [r0], -r4
 664:	44000001 	strmi	r0, [r0], #-1
 668:	a6200005 	strtge	r0, [r0], -r5
 66c:	89000000 	stmdbhi	r0, {}	; <UNPREDICTABLE>
 670:	02000004 	andeq	r0, r0, #4
 674:	12200228 	eorne	r0, r0, #40, 4	; 0x80000002
 678:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
 67c:	0002b903 	andeq	fp, r2, r3, lsl #18
 680:	0e210200 	cdpeq	2, 2, cr0, cr1, cr0, {0}
 684:	00000104 	andeq	r0, r0, r4, lsl #2
 688:	003b0300 	eorseq	r0, fp, r0, lsl #6
 68c:	22020000 	andcs	r0, r2, #0
 690:	00010b14 	andeq	r0, r1, r4, lsl fp
 694:	48030400 	stmdami	r3, {sl}
 698:	02000001 	andeq	r0, r0, #1
 69c:	010b1423 	tsteq	fp, r3, lsr #8
 6a0:	03060000 	movweq	r0, #24576	; 0x6000
 6a4:	00000279 	andeq	r0, r0, r9, ror r2
 6a8:	040e2402 	streq	r2, [lr], #-1026	; 0xfffffbfe
 6ac:	08000001 	stmdaeq	r0, {r0}
 6b0:	00014203 	andeq	r4, r1, r3, lsl #4
 6b4:	0e250200 	cdpeq	2, 2, cr0, cr5, cr0, {0}
 6b8:	00000104 	andeq	r0, r0, r4, lsl #2
 6bc:	028d030c 	addeq	r0, sp, #12, 6	; 0x30000000
 6c0:	26020000 	strcs	r0, [r2], -r0
 6c4:	0001120f 	andeq	r1, r1, pc, lsl #4
 6c8:	71031000 	mrsvc	r1, (UNDEF: 3)
 6cc:	02000002 	andeq	r0, r0, #2
 6d0:	01120f27 	tsteq	r2, r7, lsr #30
 6d4:	03110000 	tsteq	r1, #0
 6d8:	00000152 	andeq	r0, r0, r2, asr r1
 6dc:	0b142802 	bleq	50a6ec <startup-0x1faf5914>
 6e0:	12000001 	andne	r0, r0, #1
 6e4:	0001cf03 	andeq	ip, r1, r3, lsl #30
 6e8:	0f290200 	svceq	0x00290200
 6ec:	00000112 	andeq	r0, r0, r2, lsl r1
 6f0:	004c0314 	subeq	r0, ip, r4, lsl r3
 6f4:	2a020000 	bcs	806fc <startup-0x1ff7f904>
 6f8:	0001120f 	andeq	r1, r1, pc, lsl #4
 6fc:	5c031500 	cfstr32pl	mvfx1, [r3], {-0}
 700:	02000001 	andeq	r0, r0, #1
 704:	010b142b 	tsteq	fp, fp, lsr #8
 708:	03160000 	tsteq	r6, #0
 70c:	0000002b 	andeq	r0, r0, fp, lsr #32
 710:	040e2c02 	streq	r2, [lr], #-3074	; 0xfffff3fe
 714:	18000001 	stmdane	r0, {r0}
 718:	00000003 	andeq	r0, r0, r3
 71c:	142d0200 	strtne	r0, [sp], #-512	; 0xfffffe00
 720:	0000010b 	andeq	r0, r0, fp, lsl #2
 724:	0042031c 	subeq	r0, r2, ip, lsl r3
 728:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
 72c:	00010b14 	andeq	r0, r1, r4, lsl fp
 730:	fe031e00 	cdp2	14, 0, cr1, cr3, cr0, {0}
 734:	02000000 	andeq	r0, r0, #0
 738:	01040e2f 	tsteq	r4, pc, lsr #28
 73c:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
 740:	000000f9 	strdeq	r0, [r0], -r9
 744:	040e3002 	streq	r3, [lr], #-2
 748:	24000001 	strcs	r0, [r0], #-1
 74c:	00250400 	eoreq	r0, r5, r0, lsl #8
 750:	04050000 	streq	r0, [r5], #-0
 754:	00001e07 	andeq	r1, r0, r7, lsl #28
 758:	07020500 	streq	r0, [r2, -r0, lsl #10]
 75c:	00000018 	andeq	r0, r0, r8, lsl r0
 760:	cd080105 	stfgts	f0, [r8, #-20]	; 0xffffffec
 764:	06000000 	streq	r0, [r0], -r0
 768:	000000f3 	strdeq	r0, [r0], -r3
 76c:	250a3102 	strcs	r3, [sl, #-258]	; 0xfffffefe
 770:	07000001 	streq	r0, [r0, -r1]
 774:	0000ff04 	andeq	pc, r0, r4, lsl #30
 778:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
 77c:	00746e69 	rsbseq	r6, r4, r9, ror #28
 780:	00044909 	andeq	r4, r4, r9, lsl #18
 784:	061c0100 	ldreq	r0, [ip], -r0, lsl #2
 788:	200005d4 	ldrdcs	r0, [r0], -r4
 78c:	00000016 	andeq	r0, r0, r6, lsl r0
 790:	c20a9c01 	andgt	r9, sl, #256	; 0x100
 794:	01000004 	tsteq	r0, r4
 798:	05980614 	ldreq	r0, [r8, #1556]	; 0x614
 79c:	003c2000 	eorseq	r2, ip, r0
 7a0:	9c010000 	stcls	0, cr0, [r1], {-0}
 7a4:	00043e0a 	andeq	r3, r4, sl, lsl #28
 7a8:	060d0100 	streq	r0, [sp], -r0, lsl #2
 7ac:	20000570 	andcs	r0, r0, r0, ror r5
 7b0:	00000028 	andeq	r0, r0, r8, lsr #32
 7b4:	320a9c01 	andcc	r9, sl, #256	; 0x100
 7b8:	01000004 	tsteq	r0, r4
 7bc:	05440705 	strbeq	r0, [r4, #-1797]	; 0xfffff8fb
 7c0:	002c2000 	eoreq	r2, ip, r0
 7c4:	9c010000 	stcls	0, cr0, [r1], {-0}
 7c8:	00057200 	andeq	r7, r5, r0, lsl #4
 7cc:	6c000400 	cfstrsvs	mvf0, [r0], {-0}
 7d0:	04000003 	streq	r0, [r0], #-3
 7d4:	0001f501 	andeq	pc, r1, r1, lsl #10
 7d8:	05ae0c00 	streq	r0, [lr, #3072]!	; 0xc00
 7dc:	01660000 	cmneq	r6, r0
	...
 7e8:	05800000 	streq	r0, [r0]
 7ec:	04020000 	streq	r0, [r2], #-0
 7f0:	00001e07 	andeq	r1, r0, r7, lsl #28
 7f4:	07020200 	streq	r0, [r2, -r0, lsl #4]
 7f8:	00000018 	andeq	r0, r0, r8, lsl r0
 7fc:	cd080102 	stfgts	f0, [r8, #-8]
 800:	03000000 	movweq	r0, #0
 804:	09340202 	ldmdbeq	r4!, {r1, r9}
 808:	0000005a 	andeq	r0, r0, sl, asr r0
 80c:	02007804 	andeq	r7, r0, #4, 16	; 0x40000
 810:	00331036 	eorseq	r1, r3, r6, lsr r0
 814:	04000000 	streq	r0, [r0], #-0
 818:	36020079 			; <UNDEFINED> instruction: 0x36020079
 81c:	00003313 	andeq	r3, r0, r3, lsl r3
 820:	05000100 	streq	r0, [r0, #-256]	; 0xffffff00
 824:	0000051f 	andeq	r0, r0, pc, lsl r5
 828:	3a033702 	bcc	ce438 <startup-0x1ff31bc8>
 82c:	06000000 	streq	r0, [r0], -r0
 830:	3b02300c 	blcc	8c868 <startup-0x1ff73798>
 834:	0000a409 	andeq	sl, r0, r9, lsl #8
 838:	06900700 	ldreq	r0, [r0], r0, lsl #14
 83c:	3d020000 	stccc	0, cr0, [r2, #-0]
 840:	0000a406 	andeq	sl, r0, r6, lsl #8
 844:	95070000 	strls	r0, [r7, #-0]
 848:	02000005 	andeq	r0, r0, #5
 84c:	00a4063e 	adceq	r0, r4, lr, lsr r6
 850:	07040000 	streq	r0, [r4, -r0]
 854:	0000059b 	muleq	r0, fp, r5
 858:	a4063f02 	strge	r3, [r6], #-3842	; 0xfffff0fe
 85c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 860:	00787004 	rsbseq	r7, r8, r4
 864:	ab084002 	blge	210874 <startup-0x1fdef78c>
 868:	0c000000 	stceq	0, cr0, [r0], {-0}
 86c:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
 870:	00746e69 	rsbseq	r6, r4, r9, ror #28
 874:	00005a09 	andeq	r5, r0, r9, lsl #20
 878:	0000bc00 	andeq	fp, r0, r0, lsl #24
 87c:	00250a00 	eoreq	r0, r5, r0, lsl #20
 880:	17ff0000 	ldrbne	r0, [pc, r0]!
 884:	04cf0500 	strbeq	r0, [pc], #1280	; 88c <startup-0x1ffff774>
 888:	41020000 	mrsmi	r0, (UNDEF: 2)
 88c:	00006603 	andeq	r6, r0, r3, lsl #12
 890:	04ce0500 	strbeq	r0, [lr], #1280	; 0x500
 894:	41020000 	mrsmi	r0, (UNDEF: 2)
 898:	0000d40e 	andeq	sp, r0, lr, lsl #8
 89c:	66040b00 	strvs	r0, [r4], -r0, lsl #22
 8a0:	0c000000 	stceq	0, cr0, [r0], {-0}
 8a4:	00000684 	andeq	r0, r0, r4, lsl #13
 8a8:	10430224 	subne	r0, r3, r4, lsr #4
 8ac:	0000015d 	andeq	r0, r0, sp, asr r1
 8b0:	6f656704 	svcvs	0x00656704
 8b4:	0c450200 	sfmeq	f0, 2, [r5], {-0}
 8b8:	000000c8 	andeq	r0, r0, r8, asr #1
 8bc:	04ff0700 	ldrbteq	r0, [pc], #1792	; 8c4 <startup-0x1ffff73c>
 8c0:	46020000 	strmi	r0, [r2], -r0
 8c4:	0000a406 	andeq	sl, r0, r6, lsl #8
 8c8:	04070400 	streq	r0, [r7], #-1024	; 0xfffffc00
 8cc:	02000005 	andeq	r0, r0, #5
 8d0:	00a40c46 	adceq	r0, r4, r6, asr #24
 8d4:	07080000 	streq	r0, [r8, -r0]
 8d8:	00000536 	andeq	r0, r0, r6, lsr r5
 8dc:	a4064702 	strge	r4, [r6], #-1794	; 0xfffff8fe
 8e0:	0c000000 	stceq	0, cr0, [r0], {-0}
 8e4:	00053b07 	andeq	r3, r5, r7, lsl #22
 8e8:	0c470200 	sfmeq	f0, 2, [r7], {-0}
 8ec:	000000a4 	andeq	r0, r0, r4, lsr #1
 8f0:	05a90710 	streq	r0, [r9, #1808]!	; 0x710
 8f4:	48020000 	stmdami	r2, {}	; <UNPREDICTABLE>
 8f8:	00016e0a 	andeq	r6, r1, sl, lsl #28
 8fc:	a8071400 	stmdage	r7, {sl, ip}
 900:	02000006 	andeq	r0, r0, #6
 904:	016e0a49 	cmneq	lr, r9, asr #20
 908:	07180000 	ldreq	r0, [r8, -r0]
 90c:	000004fa 	strdeq	r0, [r0], -sl
 910:	6e0a4a02 	vmlavs.f32	s8, s20, s4
 914:	1c000001 	stcne	0, cr0, [r0], {1}
 918:	00052c07 	andeq	r2, r5, r7, lsl #24
 91c:	0a4b0200 	beq	12c1124 <startup-0x1ed3eedc>
 920:	00000189 	andeq	r0, r0, r9, lsl #3
 924:	680d0020 	stmdavs	sp, {r5}
 928:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
 92c:	00000168 	andeq	r0, r0, r8, ror #2
 930:	da040b00 	ble	103538 <startup-0x1fefcac8>
 934:	0b000000 	bleq	93c <startup-0x1ffff6c4>
 938:	00015d04 	andeq	r5, r1, r4, lsl #26
 93c:	01890d00 	orreq	r0, r9, r0, lsl #26
 940:	680e0000 	stmdavs	lr, {}	; <UNPREDICTABLE>
 944:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
 948:	000000a4 	andeq	r0, r0, r4, lsr #1
 94c:	0000a40e 	andeq	sl, r0, lr, lsl #8
 950:	040b0000 	streq	r0, [fp], #-0
 954:	00000174 	andeq	r0, r0, r4, ror r1
 958:	0006af05 	andeq	sl, r6, r5, lsl #30
 95c:	034c0200 	movteq	r0, #49664	; 0xc200
 960:	000000da 	ldrdeq	r0, [r0], -sl
 964:	0006ae05 	andeq	sl, r6, r5, lsl #28
 968:	0c4c0200 	sfmeq	f0, 2, [ip], {-0}
 96c:	00000168 	andeq	r0, r0, r8, ror #2
 970:	0006750f 	andeq	r7, r6, pc, lsl #10
 974:	0a610100 	beq	1840d7c <startup-0x1e7bf284>
 978:	000000bc 	strheq	r0, [r0], -ip
 97c:	0ce80305 	stcleq	3, cr0, [r8], #20
 980:	c9102000 	ldmdbgt	r0, {sp}
 984:	01000001 	tsteq	r0, r1
 988:	018f0f6e 	orreq	r0, pc, lr, ror #30
 98c:	03050000 	movweq	r0, #20480	; 0x5000
 990:	20003cf4 	strdcs	r3, [r0], -r4
 994:	0006590f 	andeq	r5, r6, pc, lsl #18
 998:	0a790100 	beq	1e40da0 <startup-0x1e1bf260>
 99c:	000000bc 	strheq	r0, [r0], -ip
 9a0:	3d180305 	ldccc	3, cr0, [r8, #-20]	; 0xffffffec
 9a4:	dd102000 	ldcle	0, cr2, [r0, #-0]
 9a8:	01000004 	tsteq	r0, r4
 9ac:	018f0f83 	orreq	r0, pc, r3, lsl #31
 9b0:	03050000 	movweq	r0, #20480	; 0x5000
 9b4:	20006d24 	andcs	r6, r0, r4, lsr #26
 9b8:	00058511 	andeq	r8, r5, r1, lsl r5
 9bc:	06ba0100 	ldrteq	r0, [sl], r0, lsl #2
 9c0:	20000900 	andcs	r0, r0, r0, lsl #18
 9c4:	000000fc 	strdeq	r0, [r0], -ip
 9c8:	026c9c01 	rsbeq	r9, ip, #256	; 0x100
 9cc:	e3100000 	tst	r0, #0
 9d0:	01000004 	tsteq	r0, r4
 9d4:	00a406bc 	strhteq	r0, [r4], ip
 9d8:	91020000 	mrsls	r0, (UNDEF: 2)
 9dc:	05191068 	ldreq	r1, [r9, #-104]	; 0xffffff98
 9e0:	bd010000 	stclt	0, cr0, [r1, #-0]
 9e4:	0000a406 	andeq	sl, r0, r6, lsl #8
 9e8:	6c910200 	lfmvs	f0, 4, [r1], {0}
 9ec:	01006312 	tsteq	r0, r2, lsl r3
 9f0:	026c07be 	rsbeq	r0, ip, #49807360	; 0x2f80000
 9f4:	91020000 	mrsls	r0, (UNDEF: 2)
 9f8:	0525105b 	streq	r1, [r5, #-91]!	; 0xffffffa5
 9fc:	bf010000 	svclt	0x00010000
 a00:	00019b0a 	andeq	r9, r1, sl, lsl #22
 a04:	64910200 	ldrvs	r0, [r1], #512	; 0x200
 a08:	00063a10 	andeq	r3, r6, r0, lsl sl
 a0c:	0ac00100 	beq	ff000e14 <apple+0xdeffa0f0>
 a10:	0000019b 	muleq	r0, fp, r1
 a14:	10609102 	rsbne	r9, r0, r2, lsl #2
 a18:	00000645 	andeq	r0, r0, r5, asr #12
 a1c:	9b0ac101 	blls	2b0e28 <startup-0x1fd4f1d8>
 a20:	02000001 	andeq	r0, r0, #1
 a24:	49135c91 	ldmdbmi	r3, {r0, r4, r7, sl, fp, ip, lr}
 a28:	01000004 	tsteq	r0, r4
 a2c:	00a402c3 	adceq	r0, r4, r3, asr #5
 a30:	00140000 	andseq	r0, r4, r0
 a34:	08010200 	stmdaeq	r1, {r9}
 a38:	000000d6 	ldrdeq	r0, [r0], -r6
 a3c:	00061e15 	andeq	r1, r6, r5, lsl lr
 a40:	06ad0100 	strteq	r0, [sp], r0, lsl #2
 a44:	0000026c 	andeq	r0, r0, ip, ror #4
 a48:	200008ca 	andcs	r0, r0, sl, asr #17
 a4c:	00000036 	andeq	r0, r0, r6, lsr r0
 a50:	029d9c01 	addseq	r9, sp, #256	; 0x100
 a54:	c9160000 	ldmdbgt	r6, {}	; <UNPREDICTABLE>
 a58:	01000001 	tsteq	r0, r1
 a5c:	019b18ad 	orrseq	r1, fp, sp, lsr #17
 a60:	91020000 	mrsls	r0, (UNDEF: 2)
 a64:	09150074 	ldmdbeq	r5, {r2, r4, r5, r6}
 a68:	01000005 	tsteq	r0, r5
 a6c:	026c069d 	rsbeq	r0, ip, #164626432	; 0x9d00000
 a70:	08660000 	stmdaeq	r6!, {}^	; <UNPREDICTABLE>
 a74:	00642000 	rsbeq	r2, r4, r0
 a78:	9c010000 	stcls	0, cr0, [r1], {-0}
 a7c:	000002d4 	ldrdeq	r0, [r0], -r4
 a80:	00316f17 	eorseq	r6, r1, r7, lsl pc
 a84:	9b1e9d01 	blls	7a7e90 <startup-0x1f858170>
 a88:	02000001 	andeq	r0, r0, #1
 a8c:	6f177491 	svcvs	0x00177491
 a90:	9d010032 	stcls	0, cr0, [r1, #-200]	; 0xffffff38
 a94:	00019b2a 	andeq	r9, r1, sl, lsr #22
 a98:	70910200 	addsvc	r0, r1, r0, lsl #4
 a9c:	05401500 	strbeq	r1, [r0, #-1280]	; 0xfffffb00
 aa0:	90010000 	andls	r0, r1, r0
 aa4:	0000a405 	andeq	sl, r0, r5, lsl #8
 aa8:	0007a600 	andeq	sl, r7, r0, lsl #12
 aac:	0000c020 	andeq	ip, r0, r0, lsr #32
 ab0:	759c0100 	ldrvc	r0, [ip, #256]	; 0x100
 ab4:	17000003 	strne	r0, [r0, -r3]
 ab8:	0100316f 	tsteq	r0, pc, ror #2
 abc:	019b1b90 			; <UNDEFINED> instruction: 0x019b1b90
 ac0:	91020000 	mrsls	r0, (UNDEF: 2)
 ac4:	326f175c 	rsbcc	r1, pc, #92, 14	; 0x1700000
 ac8:	27900100 	ldrcs	r0, [r0, r0, lsl #2]
 acc:	0000019b 	muleq	r0, fp, r1
 ad0:	10589102 	subsne	r9, r8, r2, lsl #2
 ad4:	0000054e 	andeq	r0, r0, lr, asr #10
 ad8:	a4079101 	strge	r9, [r7], #-257	; 0xfffffeff
 adc:	02000000 	andeq	r0, r0, #0
 ae0:	57106c91 			; <UNDEFINED> instruction: 0x57106c91
 ae4:	01000005 	tsteq	r0, r5
 ae8:	00a40792 	umlaleq	r0, r4, r2, r7
 aec:	91020000 	mrsls	r0, (UNDEF: 2)
 af0:	056a1068 	strbeq	r1, [sl, #-104]!	; 0xffffff98
 af4:	93010000 	movwls	r0, #4096	; 0x1000
 af8:	0000a407 	andeq	sl, r0, r7, lsl #8
 afc:	64910200 	ldrvs	r0, [r1], #512	; 0x200
 b00:	00065010 	andeq	r5, r6, r0, lsl r0
 b04:	07940100 	ldreq	r0, [r4, r0, lsl #2]
 b08:	000000a4 	andeq	r0, r0, r4, lsr #1
 b0c:	18609102 	stmdane	r0!, {r1, r8, ip, pc}^
 b10:	200007c8 	andcs	r0, r0, r8, asr #15
 b14:	00000094 	muleq	r0, r4, r0
 b18:	01006912 	tsteq	r0, r2, lsl r9
 b1c:	00a40c95 	umlaleq	r0, r4, r5, ip
 b20:	91020000 	mrsls	r0, (UNDEF: 2)
 b24:	07ce1874 			; <UNDEFINED> instruction: 0x07ce1874
 b28:	007c2000 	rsbseq	r2, ip, r0
 b2c:	6a120000 	bvs	480b34 <startup-0x1fb7f4cc>
 b30:	0e960100 	fmleqs	f0, f6, f0
 b34:	000000a4 	andeq	r0, r0, r4, lsr #1
 b38:	00709102 	rsbseq	r9, r0, r2, lsl #2
 b3c:	d8110000 	ldmdale	r1, {}	; <UNPREDICTABLE>
 b40:	01000004 	tsteq	r0, r4
 b44:	076a0657 			; <UNDEFINED> instruction: 0x076a0657
 b48:	003c2000 	eorseq	r2, ip, r0
 b4c:	9c010000 	stcls	0, cr0, [r1], {-0}
 b50:	0000039b 	muleq	r0, fp, r3
 b54:	00052516 	andeq	r2, r5, r6, lsl r5
 b58:	19570100 	ldmdbne	r7, {r8}^
 b5c:	0000019b 	muleq	r0, fp, r1
 b60:	00749102 	rsbseq	r9, r4, r2, lsl #2
 b64:	00058a11 	andeq	r8, r5, r1, lsl sl
 b68:	064c0100 	strbeq	r0, [ip], -r0, lsl #2
 b6c:	20000728 	andcs	r0, r0, r8, lsr #14
 b70:	00000042 	andeq	r0, r0, r2, asr #32
 b74:	03c19c01 	biceq	r9, r1, #256	; 0x100
 b78:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
 b7c:	01000006 	tsteq	r0, r6
 b80:	019b194c 	orrseq	r1, fp, ip, asr #18
 b84:	91020000 	mrsls	r0, (UNDEF: 2)
 b88:	b6190074 			; <UNDEFINED> instruction: 0xb6190074
 b8c:	01000006 	tsteq	r0, r6
 b90:	07080645 	streq	r0, [r8, -r5, asr #12]
 b94:	00202000 	eoreq	r2, r0, r0
 b98:	9c010000 	stcls	0, cr0, [r1], {-0}
 b9c:	00000401 	andeq	r0, r0, r1, lsl #8
 ba0:	6a626f17 	bvs	189c804 <startup-0x1e7637fc>
 ba4:	1f450100 	svcne	0x00450100
 ba8:	0000019b 	muleq	r0, fp, r1
 bac:	17749102 	ldrbne	r9, [r4, -r2, lsl #2]!
 bb0:	45010078 	strmi	r0, [r1, #-120]	; 0xffffff88
 bb4:	0000a428 	andeq	sl, r0, r8, lsr #8
 bb8:	70910200 	addsvc	r0, r1, r0, lsl #4
 bbc:	01007917 	tsteq	r0, r7, lsl r9
 bc0:	00a42f45 	adceq	r2, r4, r5, asr #30
 bc4:	91020000 	mrsls	r0, (UNDEF: 2)
 bc8:	6811006c 	ldmdavs	r1, {r2, r3, r5, r6}
 bcc:	01000006 	tsteq	r0, r6
 bd0:	0686063a 			; <UNDEFINED> instruction: 0x0686063a
 bd4:	00822000 	addeq	r2, r2, r0
 bd8:	9c010000 	stcls	0, cr0, [r1], {-0}
 bdc:	00000471 	andeq	r0, r0, r1, ror r4
 be0:	6a626f17 	bvs	189c844 <startup-0x1e7637bc>
 be4:	1b3a0100 	blne	e80fec <startup-0x1f17f014>
 be8:	0000019b 	muleq	r0, fp, r1
 bec:	105c9102 	subsne	r9, ip, r2, lsl #2
 bf0:	00000560 	andeq	r0, r0, r0, ror #10
 bf4:	a4063c01 	strge	r3, [r6], #-3073	; 0xfffff3ff
 bf8:	02000000 	andeq	r0, r0, #0
 bfc:	96186891 			; <UNDEFINED> instruction: 0x96186891
 c00:	68200006 	stmdavs	r0!, {r1, r2}
 c04:	12000000 	andne	r0, r0, #0
 c08:	3d010069 	stccc	0, cr0, [r1, #-420]	; 0xfffffe5c
 c0c:	0000a40a 	andeq	sl, r0, sl, lsl #8
 c10:	6c910200 	lfmvs	f0, 4, [r1], {0}
 c14:	00069c18 	andeq	r9, r6, r8, lsl ip
 c18:	00005420 	andeq	r5, r0, r0, lsr #8
 c1c:	00781200 	rsbseq	r1, r8, r0, lsl #4
 c20:	33113f01 	tstcc	r1, #1, 30
 c24:	02000000 	andeq	r0, r0, #0
 c28:	79126791 	ldmdbvc	r2, {r0, r4, r7, r8, r9, sl, sp, lr}
 c2c:	11400100 	mrsne	r0, (UNDEF: 80)
 c30:	00000033 	andeq	r0, r0, r3, lsr r0
 c34:	00669102 	rsbeq	r9, r6, r2, lsl #2
 c38:	ee110000 	cdp	0, 1, cr0, cr1, cr0, {0}
 c3c:	01000004 	tsteq	r0, r4
 c40:	0604062f 	streq	r0, [r4], -pc, lsr #12
 c44:	00822000 	addeq	r2, r2, r0
 c48:	9c010000 	stcls	0, cr0, [r1], {-0}
 c4c:	000004e1 	andeq	r0, r0, r1, ror #9
 c50:	6a626f17 	bvs	189c8b4 <startup-0x1e76374c>
 c54:	1a2f0100 	bne	bc105c <startup-0x1f43efa4>
 c58:	0000019b 	muleq	r0, fp, r1
 c5c:	105c9102 	subsne	r9, ip, r2, lsl #2
 c60:	00000560 	andeq	r0, r0, r0, ror #10
 c64:	a4063101 	strge	r3, [r6], #-257	; 0xfffffeff
 c68:	02000000 	andeq	r0, r0, #0
 c6c:	14186891 	ldrne	r6, [r8], #-2193	; 0xfffff76f
 c70:	68200006 	stmdavs	r0!, {r1, r2}
 c74:	12000000 	andne	r0, r0, #0
 c78:	32010069 	andcc	r0, r1, #105	; 0x69
 c7c:	0000a40a 	andeq	sl, r0, sl, lsl #8
 c80:	6c910200 	lfmvs	f0, 4, [r1], {0}
 c84:	00061a18 	andeq	r1, r6, r8, lsl sl
 c88:	00005420 	andeq	r5, r0, r0, lsr #8
 c8c:	00781200 	rsbseq	r1, r8, r0, lsl #4
 c90:	33113401 	tstcc	r1, #16777216	; 0x1000000
 c94:	02000000 	andeq	r0, r0, #0
 c98:	79126791 	ldmdbvc	r2, {r0, r4, r7, r8, r9, sl, sp, lr}
 c9c:	11350100 	teqne	r5, r0, lsl #2
 ca0:	00000033 	andeq	r0, r0, r3, lsr r0
 ca4:	00669102 	rsbeq	r9, r6, r2, lsl #2
 ca8:	9a190000 	bls	640cb0 <startup-0x1f9bf350>
 cac:	01000006 	tsteq	r0, r6
 cb0:	05fe0627 	ldrbeq	r0, [lr, #1575]!	; 0x627
 cb4:	00062000 	andeq	r2, r6, r0
 cb8:	9c010000 	stcls	0, cr0, [r1], {-0}
 cbc:	00000510 	andeq	r0, r0, r0, lsl r5
 cc0:	01007817 	tsteq	r0, r7, lsl r8
 cc4:	00a41e27 	adceq	r1, r4, r7, lsr #28
 cc8:	50010000 	andpl	r0, r1, r0
 ccc:	01007917 	tsteq	r0, r7, lsl r9
 cd0:	00a42527 	adceq	r2, r4, r7, lsr #10
 cd4:	51010000 	mrspl	r0, (UNDEF: 1)
 cd8:	06c71a00 	strbeq	r1, [r7], r0, lsl #20
 cdc:	20010000 	andcs	r0, r1, r0
 ce0:	0005f806 	andeq	pc, r5, r6, lsl #16
 ce4:	00000620 	andeq	r0, r0, r0, lsr #12
 ce8:	199c0100 	ldmibne	ip, {r8}
 cec:	00000573 	andeq	r0, r0, r3, ror r5
 cf0:	f2061901 	vmla.i8	d1, d6, d1
 cf4:	06200005 	strteq	r0, [r0], -r5
 cf8:	01000000 	mrseq	r0, (UNDEF: 0)
 cfc:	0005519c 	muleq	r5, ip, r1
 d00:	00781700 	rsbseq	r1, r8, r0, lsl #14
 d04:	a41c1901 	ldrge	r1, [ip], #-2305	; 0xfffff6ff
 d08:	01000000 	mrseq	r0, (UNDEF: 0)
 d0c:	00791750 	rsbseq	r1, r9, r0, asr r7
 d10:	a4231901 	strtge	r1, [r3], #-2305	; 0xfffff6ff
 d14:	01000000 	mrseq	r0, (UNDEF: 0)
 d18:	281a0051 	ldmdacs	sl, {r0, r4, r6}
 d1c:	01000006 	tsteq	r0, r6
 d20:	05ec0612 	strbeq	r0, [ip, #1554]!	; 0x612
 d24:	00062000 	andeq	r2, r6, r0
 d28:	9c010000 	stcls	0, cr0, [r1], {-0}
 d2c:	0005a11a 	andeq	sl, r5, sl, lsl r1
 d30:	06070100 	streq	r0, [r7], -r0, lsl #2
 d34:	20000000 	andcs	r0, r0, r0
 d38:	0000000c 	andeq	r0, r0, ip
 d3c:	Address 0x00000d3c is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	10061201 	andne	r1, r6, r1, lsl #4
  10:	02000017 	andeq	r0, r0, #23
  14:	0b0b0113 	bleq	2c0468 <startup-0x1fd3fb98>
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	13010b39 	movwne	r0, #6969	; 0x1b39
  20:	0d030000 	stceq	0, cr0, [r3, #-0]
  24:	3a0e0300 	bcc	380c2c <startup-0x1fc7f3d4>
  28:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  2c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  30:	0400000b 	streq	r0, [r0], #-11
  34:	13490035 	movtne	r0, #36917	; 0x9035
  38:	24050000 	strcs	r0, [r5], #-0
  3c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  40:	000e030b 	andeq	r0, lr, fp, lsl #6
  44:	00160600 	andseq	r0, r6, r0, lsl #12
  48:	0b3a0e03 	bleq	e8385c <startup-0x1f17c7a4>
  4c:	0b390b3b 	bleq	e42d40 <startup-0x1f1bd2c0>
  50:	00001349 	andeq	r1, r0, r9, asr #6
  54:	0b000f07 	bleq	3c78 <startup-0x1fffc388>
  58:	0013490b 	andseq	r4, r3, fp, lsl #18
  5c:	00240800 	eoreq	r0, r4, r0, lsl #16
  60:	0b3e0b0b 	bleq	f82c94 <startup-0x1f07d36c>
  64:	00000803 	andeq	r0, r0, r3, lsl #16
  68:	3f012e09 	svccc	0x00012e09
  6c:	3a0e0319 	bcc	380cd8 <startup-0x1fc7f328>
  70:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  74:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  78:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  7c:	96184006 	ldrls	r4, [r8], -r6
  80:	13011942 	movwne	r1, #6466	; 0x1942
  84:	050a0000 	streq	r0, [sl, #-0]
  88:	3a0e0300 	bcc	380c90 <startup-0x1fc7f370>
  8c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  90:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  94:	0b000018 	bleq	fc <startup-0x1fffff04>
  98:	08030034 	stmdaeq	r3, {r2, r4, r5}
  9c:	0b3b0b3a 	bleq	ec2d8c <startup-0x1f13d274>
  a0:	13490b39 	movtne	r0, #39737	; 0x9b39
  a4:	00001802 	andeq	r1, r0, r2, lsl #16
  a8:	3f012e0c 	svccc	0x00012e0c
  ac:	3a0e0319 	bcc	380d18 <startup-0x1fc7f2e8>
  b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  b4:	1119270b 	tstne	r9, fp, lsl #14
  b8:	40061201 	andmi	r1, r6, r1, lsl #4
  bc:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  c0:	00001301 	andeq	r1, r0, r1, lsl #6
  c4:	0300050d 	movweq	r0, #1293	; 0x50d
  c8:	3b0b3a08 	blcc	2ce8f0 <startup-0x1fd31710>
  cc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  d0:	00180213 	andseq	r0, r8, r3, lsl r2
  d4:	002e0e00 	eoreq	r0, lr, r0, lsl #28
  d8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  dc:	0b3b0b3a 	bleq	ec2dcc <startup-0x1f13d234>
  e0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  e4:	06120111 			; <UNDEFINED> instruction: 0x06120111
  e8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  ec:	0f000019 	svceq	0x00000019
  f0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  f4:	0b3a0e03 	bleq	e83908 <startup-0x1f17c6f8>
  f8:	0b390b3b 	bleq	e42dec <startup-0x1f1bd214>
  fc:	01111927 	tsteq	r1, r7, lsr #18
 100:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 104:	01194297 			; <UNDEFINED> instruction: 0x01194297
 108:	10000013 	andne	r0, r0, r3, lsl r0
 10c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 110:	0b3a0e03 	bleq	e83924 <startup-0x1f17c6dc>
 114:	0b390b3b 	bleq	e42e08 <startup-0x1f1bd1f8>
 118:	01111927 	tsteq	r1, r7, lsr #18
 11c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 120:	00194297 	mulseq	r9, r7, r2
 124:	11010000 	mrsne	r0, (UNDEF: 1)
 128:	130e2501 	movwne	r2, #58625	; 0xe501
 12c:	1b0e030b 	blne	380d60 <startup-0x1fc7f2a0>
 130:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 134:	00171006 	andseq	r1, r7, r6
 138:	00240200 	eoreq	r0, r4, r0, lsl #4
 13c:	0b3e0b0b 	bleq	f82d70 <startup-0x1f07d290>
 140:	00000e03 	andeq	r0, r0, r3, lsl #28
 144:	0b002403 	bleq	9158 <startup-0x1fff6ea8>
 148:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 14c:	04000008 	streq	r0, [r0], #-8
 150:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 154:	0b3a0e03 	bleq	e83968 <startup-0x1f17c698>
 158:	0b390b3b 	bleq	e42e4c <startup-0x1f1bd1b4>
 15c:	13491927 	movtne	r1, #39207	; 0x9927
 160:	06120111 			; <UNDEFINED> instruction: 0x06120111
 164:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 168:	00130119 	andseq	r0, r3, r9, lsl r1
 16c:	00050500 	andeq	r0, r5, r0, lsl #10
 170:	0b3a0803 	bleq	e82184 <startup-0x1f17de7c>
 174:	0b390b3b 	bleq	e42e68 <startup-0x1f1bd198>
 178:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 17c:	34060000 	strcc	r0, [r6], #-0
 180:	3a0e0300 	bcc	380d88 <startup-0x1fc7f278>
 184:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 188:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 18c:	07000018 	smladeq	r0, r8, r0, r0
 190:	08030034 	stmdaeq	r3, {r2, r4, r5}
 194:	0b3b0b3a 	bleq	ec2e84 <startup-0x1f13d17c>
 198:	13490b39 	movtne	r0, #39737	; 0x9b39
 19c:	00001802 	andeq	r1, r0, r2, lsl #16
 1a0:	3f012e08 	svccc	0x00012e08
 1a4:	3a0e0319 	bcc	380e10 <startup-0x1fc7f1f0>
 1a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1ac:	1119270b 	tstne	r9, fp, lsl #14
 1b0:	40061201 	andmi	r1, r6, r1, lsl #4
 1b4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 1b8:	00001301 	andeq	r1, r0, r1, lsl #6
 1bc:	11010b09 	tstne	r1, r9, lsl #22
 1c0:	00061201 	andeq	r1, r6, r1, lsl #4
 1c4:	002e0a00 	eoreq	r0, lr, r0, lsl #20
 1c8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 1cc:	0b3b0b3a 	bleq	ec2ebc <startup-0x1f13d144>
 1d0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 1d4:	06120111 			; <UNDEFINED> instruction: 0x06120111
 1d8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 1dc:	00000019 	andeq	r0, r0, r9, lsl r0
 1e0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 1e4:	030b130e 	movweq	r1, #45838	; 0xb30e
 1e8:	110e1b0e 	tstne	lr, lr, lsl #22
 1ec:	10061201 	andne	r1, r6, r1, lsl #4
 1f0:	02000017 	andeq	r0, r0, #23
 1f4:	0b0b0113 	bleq	2c0648 <startup-0x1fd3f9b8>
 1f8:	0b3b0b3a 	bleq	ec2ee8 <startup-0x1f13d118>
 1fc:	13010b39 	movwne	r0, #6969	; 0x1b39
 200:	0d030000 	stceq	0, cr0, [r3, #-0]
 204:	3a0e0300 	bcc	380e0c <startup-0x1fc7f1f4>
 208:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 20c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 210:	0400000b 	streq	r0, [r0], #-11
 214:	13490035 	movtne	r0, #36917	; 0x9035
 218:	24050000 	strcs	r0, [r5], #-0
 21c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 220:	000e030b 	andeq	r0, lr, fp, lsl #6
 224:	00160600 	andseq	r0, r6, r0, lsl #12
 228:	0b3a0e03 	bleq	e83a3c <startup-0x1f17c5c4>
 22c:	0b390b3b 	bleq	e42f20 <startup-0x1f1bd0e0>
 230:	00001349 	andeq	r1, r0, r9, asr #6
 234:	0b000f07 	bleq	3e58 <startup-0x1fffc1a8>
 238:	0013490b 	andseq	r4, r3, fp, lsl #18
 23c:	00240800 	eoreq	r0, r4, r0, lsl #16
 240:	0b3e0b0b 	bleq	f82e74 <startup-0x1f07d18c>
 244:	00000803 	andeq	r0, r0, r3, lsl #16
 248:	3f012e09 	svccc	0x00012e09
 24c:	3a0e0319 	bcc	380eb8 <startup-0x1fc7f148>
 250:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 254:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 258:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 25c:	96184006 	ldrls	r4, [r8], -r6
 260:	13011942 	movwne	r1, #6466	; 0x1942
 264:	340a0000 	strcc	r0, [sl], #-0
 268:	3a080300 	bcc	200e70 <startup-0x1fdff190>
 26c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 270:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 274:	0b000018 	bleq	2dc <startup-0x1ffffd24>
 278:	13490101 	movtne	r0, #37121	; 0x9101
 27c:	00001301 	andeq	r1, r0, r1, lsl #6
 280:	4900210c 	stmdbmi	r0, {r2, r3, r8, sp}
 284:	000b2f13 	andeq	r2, fp, r3, lsl pc
 288:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
 28c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 290:	0b3b0b3a 	bleq	ec2f80 <startup-0x1f13d080>
 294:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 298:	01111349 	tsteq	r1, r9, asr #6
 29c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 2a0:	01194297 			; <UNDEFINED> instruction: 0x01194297
 2a4:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
 2a8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 2ac:	0b3a0e03 	bleq	e83ac0 <startup-0x1f17c540>
 2b0:	0b390b3b 	bleq	e42fa4 <startup-0x1f1bd05c>
 2b4:	01111927 	tsteq	r1, r7, lsr #18
 2b8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 2bc:	00194297 	mulseq	r9, r7, r2
 2c0:	00050f00 	andeq	r0, r5, r0, lsl #30
 2c4:	0b3a0803 	bleq	e822d8 <startup-0x1f17dd28>
 2c8:	0b390b3b 	bleq	e42fbc <startup-0x1f1bd044>
 2cc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 2d0:	01000000 	mrseq	r0, (UNDEF: 0)
 2d4:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 2d8:	0e030b13 	vmoveq.32	d3[0], r0
 2dc:	01110e1b 	tsteq	r1, fp, lsl lr
 2e0:	17100612 			; <UNDEFINED> instruction: 0x17100612
 2e4:	13020000 	movwne	r0, #8192	; 0x2000
 2e8:	3a0b0b01 	bcc	2c2ef4 <startup-0x1fd3d10c>
 2ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2f0:	0013010b 	andseq	r0, r3, fp, lsl #2
 2f4:	000d0300 	andeq	r0, sp, r0, lsl #6
 2f8:	0b3a0e03 	bleq	e83b0c <startup-0x1f17c4f4>
 2fc:	0b390b3b 	bleq	e42ff0 <startup-0x1f1bd010>
 300:	0b381349 	bleq	e0502c <startup-0x1f1fafd4>
 304:	35040000 	strcc	r0, [r4, #-0]
 308:	00134900 	andseq	r4, r3, r0, lsl #18
 30c:	00240500 	eoreq	r0, r4, r0, lsl #10
 310:	0b3e0b0b 	bleq	f82f44 <startup-0x1f07d0bc>
 314:	00000e03 	andeq	r0, r0, r3, lsl #28
 318:	03001606 	movweq	r1, #1542	; 0x606
 31c:	3b0b3a0e 	blcc	2ceb5c <startup-0x1fd314a4>
 320:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 324:	07000013 	smladeq	r0, r3, r0, r0
 328:	0b0b000f 	bleq	2c036c <startup-0x1fd3fc94>
 32c:	00001349 	andeq	r1, r0, r9, asr #6
 330:	0b002408 	bleq	9358 <startup-0x1fff6ca8>
 334:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 338:	09000008 	stmdbeq	r0, {r3}
 33c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 340:	0b3a0e03 	bleq	e83b54 <startup-0x1f17c4ac>
 344:	0b390b3b 	bleq	e43038 <startup-0x1f1bcfc8>
 348:	06120111 			; <UNDEFINED> instruction: 0x06120111
 34c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 350:	0a000019 	beq	3bc <startup-0x1ffffc44>
 354:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 358:	0b3a0e03 	bleq	e83b6c <startup-0x1f17c494>
 35c:	0b390b3b 	bleq	e43050 <startup-0x1f1bcfb0>
 360:	06120111 			; <UNDEFINED> instruction: 0x06120111
 364:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 368:	00000019 	andeq	r0, r0, r9, lsl r0
 36c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 370:	030b130e 	movweq	r1, #45838	; 0xb30e
 374:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
 378:	10011117 	andne	r1, r1, r7, lsl r1
 37c:	02000017 	andeq	r0, r0, #23
 380:	0b0b0024 	bleq	2c0418 <startup-0x1fd3fbe8>
 384:	0e030b3e 	vmoveq.16	d3[0], r0
 388:	13030000 	movwne	r0, #12288	; 0x3000
 38c:	3a0b0b01 	bcc	2c2f98 <startup-0x1fd3d068>
 390:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 394:	0013010b 	andseq	r0, r3, fp, lsl #2
 398:	000d0400 	andeq	r0, sp, r0, lsl #8
 39c:	0b3a0803 	bleq	e823b0 <startup-0x1f17dc50>
 3a0:	0b390b3b 	bleq	e43094 <startup-0x1f1bcf6c>
 3a4:	0b381349 	bleq	e050d0 <startup-0x1f1faf30>
 3a8:	16050000 	strne	r0, [r5], -r0
 3ac:	3a0e0300 	bcc	380fb4 <startup-0x1fc7f04c>
 3b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 3b4:	0013490b 	andseq	r4, r3, fp, lsl #18
 3b8:	01130600 	tsteq	r3, r0, lsl #12
 3bc:	0b3a050b 	bleq	e817f0 <startup-0x1f17e810>
 3c0:	0b390b3b 	bleq	e430b4 <startup-0x1f1bcf4c>
 3c4:	00001301 	andeq	r1, r0, r1, lsl #6
 3c8:	03000d07 	movweq	r0, #3335	; 0xd07
 3cc:	3b0b3a0e 	blcc	2cec0c <startup-0x1fd313f4>
 3d0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3d4:	000b3813 	andeq	r3, fp, r3, lsl r8
 3d8:	00240800 	eoreq	r0, r4, r0, lsl #16
 3dc:	0b3e0b0b 	bleq	f83010 <startup-0x1f07cff0>
 3e0:	00000803 	andeq	r0, r0, r3, lsl #16
 3e4:	49010109 	stmdbmi	r1, {r0, r3, r8}
 3e8:	00130113 	andseq	r0, r3, r3, lsl r1
 3ec:	00210a00 	eoreq	r0, r1, r0, lsl #20
 3f0:	052f1349 	streq	r1, [pc, #-841]!	; af <startup-0x1fffff51>
 3f4:	0f0b0000 	svceq	0x000b0000
 3f8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 3fc:	0c000013 	stceq	0, cr0, [r0], {19}
 400:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 404:	0b3a0b0b 	bleq	e83038 <startup-0x1f17cfc8>
 408:	0b390b3b 	bleq	e430fc <startup-0x1f1bcf04>
 40c:	00001301 	andeq	r1, r0, r1, lsl #6
 410:	2701150d 	strcs	r1, [r1, -sp, lsl #10]
 414:	00130119 	andseq	r0, r3, r9, lsl r1
 418:	00050e00 	andeq	r0, r5, r0, lsl #28
 41c:	00001349 	andeq	r1, r0, r9, asr #6
 420:	0300340f 	movweq	r3, #1039	; 0x40f
 424:	3b0b3a0e 	blcc	2cec64 <startup-0x1fd3139c>
 428:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 42c:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
 430:	10000018 	andne	r0, r0, r8, lsl r0
 434:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 438:	0b3b0b3a 	bleq	ec3128 <startup-0x1f13ced8>
 43c:	13490b39 	movtne	r0, #39737	; 0x9b39
 440:	00001802 	andeq	r1, r0, r2, lsl #16
 444:	3f012e11 	svccc	0x00012e11
 448:	3a0e0319 	bcc	3810b4 <startup-0x1fc7ef4c>
 44c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 450:	1119270b 	tstne	r9, fp, lsl #14
 454:	40061201 	andmi	r1, r6, r1, lsl #4
 458:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 45c:	00001301 	andeq	r1, r0, r1, lsl #6
 460:	03003412 	movweq	r3, #1042	; 0x412
 464:	3b0b3a08 	blcc	2cec8c <startup-0x1fd31374>
 468:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 46c:	00180213 	andseq	r0, r8, r3, lsl r2
 470:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
 474:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 478:	0b3b0b3a 	bleq	ec3168 <startup-0x1f13ce98>
 47c:	13490b39 	movtne	r0, #39737	; 0x9b39
 480:	0000193c 	andeq	r1, r0, ip, lsr r9
 484:	00001814 	andeq	r1, r0, r4, lsl r8
 488:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
 48c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 490:	0b3b0b3a 	bleq	ec3180 <startup-0x1f13ce80>
 494:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 498:	01111349 	tsteq	r1, r9, asr #6
 49c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 4a0:	01194297 			; <UNDEFINED> instruction: 0x01194297
 4a4:	16000013 			; <UNDEFINED> instruction: 0x16000013
 4a8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 4ac:	0b3b0b3a 	bleq	ec319c <startup-0x1f13ce64>
 4b0:	13490b39 	movtne	r0, #39737	; 0x9b39
 4b4:	00001802 	andeq	r1, r0, r2, lsl #16
 4b8:	03000517 	movweq	r0, #1303	; 0x517
 4bc:	3b0b3a08 	blcc	2cece4 <startup-0x1fd3131c>
 4c0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 4c4:	00180213 	andseq	r0, r8, r3, lsl r2
 4c8:	010b1800 	tsteq	fp, r0, lsl #16
 4cc:	06120111 			; <UNDEFINED> instruction: 0x06120111
 4d0:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
 4d4:	03193f01 	tsteq	r9, #1, 30
 4d8:	3b0b3a0e 	blcc	2ced18 <startup-0x1fd312e8>
 4dc:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 4e0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 4e4:	97184006 	ldrls	r4, [r8, -r6]
 4e8:	13011942 	movwne	r1, #6466	; 0x1942
 4ec:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
 4f0:	03193f00 	tsteq	r9, #0, 30
 4f4:	3b0b3a0e 	blcc	2ced34 <startup-0x1fd312cc>
 4f8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 4fc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 500:	97184006 	ldrls	r4, [r8, -r6]
 504:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000310 	andeq	r0, r0, r0, lsl r3
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	03680002 	cmneq	r8, #2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	20000320 	andcs	r0, r0, r0, lsr #6
  34:	00000104 	andeq	r0, r0, r4, lsl #2
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	04790002 	ldrbteq	r0, [r9], #-2
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	20000424 	andcs	r0, r0, r4, lsr #8
  54:	00000120 	andeq	r0, r0, r0, lsr #2
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	064e0002 	strbeq	r0, [lr], -r2
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	20000544 	andcs	r0, r0, r4, asr #10
  74:	000000a6 	andeq	r0, r0, r6, lsr #1
	...
  80:	00000024 	andeq	r0, r0, r4, lsr #32
  84:	07c90002 	strbeq	r0, [r9, r2]
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	200005ec 	andcs	r0, r0, ip, ror #11
  94:	00000410 	andeq	r0, r0, r0, lsl r4
  98:	20000000 	andcs	r0, r0, r0
  9c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000001d9 	ldrdeq	r0, [r0], -r9
   4:	00a10003 	adceq	r0, r1, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	61696c45 	cmnvs	r9, r5, asr #24
  28:	6e4f2f73 	mcrvs	15, 2, r2, cr15, cr3, {3}
  2c:	69724465 	ldmdbvs	r2!, {r0, r2, r5, r6, sl, lr}^
  30:	2d206576 	cfstr32cs	mvfx6, [r0, #-472]!	; 0xfffffe28
  34:	61684320 	cmnvs	r8, r0, lsr #6
  38:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
  3c:	74532073 	ldrbvc	r2, [r3], #-115	; 0xffffff8d
  40:	6e656475 	mcrvs	4, 3, r6, cr5, cr5, {3}
  44:	442f7374 	strtmi	r7, [pc], #-884	; 4c <startup-0x1fffffb4>
  48:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
  4c:	73746e65 	cmnvc	r4, #1616	; 0x650
  50:	7574532f 	ldrbvc	r5, [r4, #-815]!	; 0xfffffcd1
  54:	73656964 	cmnvc	r5, #100, 18	; 0x190000
  58:	6f72502f 	svcvs	0x0072502f
  5c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
  60:	2f676e69 	svccs	0x00676e69
  64:	2f706f6d 	svccs	0x00706f6d
  68:	726f5763 	rsbvc	r5, pc, #25952256	; 0x18c0000
  6c:	6170536b 	cmnvs	r0, fp, ror #6
  70:	632f6563 			; <UNDEFINED> instruction: 0x632f6563
  74:	6b726f57 	blvs	1c9bdd8 <startup-0x1e364228>
  78:	63617053 	cmnvs	r1, #83	; 0x53
  7c:	6e732f65 	cdpvs	15, 7, cr2, cr3, cr5, {3}
  80:	00656b61 	rsbeq	r6, r5, r1, ror #22
  84:	63736100 	cmnvs	r3, #0, 2
  88:	645f6969 	ldrbvs	r6, [pc], #-2409	; 90 <startup-0x1fffff70>
  8c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
  90:	632e7961 			; <UNDEFINED> instruction: 0x632e7961
  94:	00000100 	andeq	r0, r0, r0, lsl #2
  98:	6c636564 	cfstr64vs	mvdx6, [r3], #-400	; 0xfffffe70
  9c:	74617261 	strbtvc	r7, [r1], #-609	; 0xfffffd9f
  a0:	736e6f69 	cmnvc	lr, #420	; 0x1a4
  a4:	0100682e 	tsteq	r0, lr, lsr #16
  a8:	05000000 	streq	r0, [r0, #-0]
  ac:	02050001 	andeq	r0, r5, #1
  b0:	20000010 	andcs	r0, r0, r0, lsl r0
  b4:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
  b8:	04056806 	streq	r6, [r5], #-2054	; 0xfffff7fa
  bc:	4b100520 	blmi	401544 <startup-0x1fbfeabc>
  c0:	05660205 	strbeq	r0, [r6, #-517]!	; 0xfffffdfb
  c4:	01052010 	tsteq	r5, r0, lsl r0
  c8:	0605694b 	streq	r6, [r5], -fp, asr #18
  cc:	20040568 	andcs	r0, r4, r8, ror #10
  d0:	054b0805 	strbeq	r0, [fp, #-2053]	; 0xfffff7fb
  d4:	02059e04 	andeq	r9, r5, #4, 28	; 0x40
  d8:	2010052f 	andscs	r0, r0, pc, lsr #10
  dc:	69670105 	stmdbvs	r7!, {r0, r2, r8}^
  e0:	3d680205 	sfmcc	f0, 2, [r8, #-20]!	; 0xffffffec
  e4:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
  e8:	052f3d02 	streq	r3, [pc, #-3330]!	; fffff3ee <apple+0xdfff86ca>
  ec:	05693e01 	strbeq	r3, [r9, #-3585]!	; 0xfffff1ff
  f0:	04053e02 	streq	r3, [r5], #-3586	; 0xfffff1fe
  f4:	2003053f 	andcs	r0, r3, pc, lsr r5
  f8:	053d0205 	ldreq	r0, [sp, #-517]!	; 0xfffffdfb
  fc:	01053d09 	tsteq	r5, r9, lsl #26
 100:	0205772f 	andeq	r7, r5, #12320768	; 0xbc0000
 104:	053d3d67 	ldreq	r3, [sp, #-3431]!	; 0xfffff299
 108:	054d5901 	strbeq	r5, [sp, #-2305]	; 0xfffff6ff
 10c:	3d3d6702 	ldccc	7, cr6, [sp, #-8]!
 110:	4d590105 	ldfmie	f0, [r9, #-20]	; 0xffffffec
 114:	053e0205 	ldreq	r0, [lr, #-517]!	; 0xfffffdfb
 118:	0205200f 	andeq	r2, r5, #15
 11c:	06053d2f 	streq	r3, [r5], -pc, lsr #26
 120:	5a02053d 	bpl	8161c <startup-0x1ff7e9e4>
 124:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
 128:	01052f09 	tsteq	r5, r9, lsl #30
 12c:	0f05a12f 	svceq	0x0005a12f
 130:	6702053d 	smladxvs	r2, sp, r5, r0
 134:	3d0b053d 	cfstr32cc	mvfx0, [fp, #-244]	; 0xffffff0c
 138:	05590f05 	ldrbeq	r0, [r9, #-3845]	; 0xfffff0fb
 13c:	01056709 	tsteq	r5, r9, lsl #14
 140:	0705852f 	streq	r8, [r5, -pc, lsr #10]
 144:	000a0567 	andeq	r0, sl, r7, ror #10
 148:	20010402 	andcs	r0, r1, r2, lsl #8
 14c:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
 150:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 154:	04020007 	streq	r0, [r2], #-7
 158:	02053c01 	andeq	r3, r5, #256	; 0x100
 15c:	01053d2f 	tsteq	r5, pc, lsr #26
 160:	4c180559 	cfldr32mi	mvfx0, [r8], {89}	; 0x59
 164:	3d300205 	lfmcc	f0, 4, [r0, #-20]!	; 0xffffffec
 168:	3d3e3d3e 	ldccc	13, cr3, [lr, #-248]!	; 0xffffff08
 16c:	01053d3e 	tsteq	r5, lr, lsr sp
 170:	07053f3d 	smladxeq	r5, sp, pc, r3	; <UNPREDICTABLE>
 174:	000a0567 	andeq	r0, sl, r7, ror #10
 178:	20010402 	andcs	r0, r1, r2, lsl #8
 17c:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
 180:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 184:	04020007 	streq	r0, [r2], #-7
 188:	02053c01 	andeq	r3, r5, #256	; 0x100
 18c:	05593d2f 	ldrbeq	r3, [r9, #-3375]	; 0xfffff2d1
 190:	054d3d01 	strbeq	r3, [sp, #-3329]	; 0xfffff2ff
 194:	04059107 	streq	r9, [r5], #-263	; 0xfffffef9
 198:	00160567 	andseq	r0, r6, r7, ror #10
 19c:	4a010402 	bmi	411ac <startup-0x1ffbee54>
 1a0:	05590205 	ldrbeq	r0, [r9, #-517]	; 0xfffffdfb
 1a4:	054f9f01 	strbeq	r9, [pc, #-3841]	; fffff2ab <apple+0xdfff8587>
 1a8:	052f5a02 	streq	r5, [pc, #-2562]!	; fffff7ae <apple+0xdfff8a8a>
 1ac:	07054b04 	streq	r4, [r5, -r4, lsl #22]
 1b0:	2116052f 	tstcs	r6, pc, lsr #10
 1b4:	053c0305 	ldreq	r0, [ip, #-773]!	; 0xfffffcfb
 1b8:	07054909 	streq	r4, [r5, -r9, lsl #18]
 1bc:	3102052e 	tstcc	r2, lr, lsr #10
 1c0:	054b0405 	strbeq	r0, [fp, #-1029]	; 0xfffffbfb
 1c4:	16052f07 	strne	r2, [r5], -r7, lsl #30
 1c8:	3c030521 	cfstr32cc	mvfx0, [r3], {33}	; 0x21
 1cc:	05490905 	strbeq	r0, [r9, #-2309]	; 0xfffff6fb
 1d0:	09052e07 	stmdbeq	r5, {r0, r1, r2, r9, sl, fp, sp}
 1d4:	21010531 	tstcs	r1, r1, lsr r5
 1d8:	01000402 	tsteq	r0, r2, lsl #8
 1dc:	00014501 	andeq	r4, r1, r1, lsl #10
 1e0:	93000300 	movwls	r0, #768	; 0x300
 1e4:	02000000 	andeq	r0, r0, #0
 1e8:	0d0efb01 	vstreq	d15, [lr, #-4]
 1ec:	01010100 	mrseq	r0, (UNDEF: 17)
 1f0:	00000001 	andeq	r0, r0, r1
 1f4:	01000001 	tsteq	r0, r1
 1f8:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff7bd <apple+0xdfff8a99>
 1fc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 200:	696c452f 	stmdbvs	ip!, {r0, r1, r2, r3, r5, r8, sl, lr}^
 204:	4f2f7361 	svcmi	0x002f7361
 208:	7244656e 	subvc	r6, r4, #461373440	; 0x1b800000
 20c:	20657669 	rsbcs	r7, r5, r9, ror #12
 210:	6843202d 	stmdavs	r3, {r0, r2, r3, r5, sp}^
 214:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
 218:	53207372 			; <UNDEFINED> instruction: 0x53207372
 21c:	65647574 	strbvs	r7, [r4, #-1396]!	; 0xfffffa8c
 220:	2f73746e 	svccs	0x0073746e
 224:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
 228:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 22c:	74532f73 	ldrbvc	r2, [r3], #-3955	; 0xfffff08d
 230:	65696475 	strbvs	r6, [r9, #-1141]!	; 0xfffffb8b
 234:	72502f73 	subsvc	r2, r0, #460	; 0x1cc
 238:	6172676f 	cmnvs	r2, pc, ror #14
 23c:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 240:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
 244:	6f57632f 	svcvs	0x0057632f
 248:	70536b72 	subsvc	r6, r3, r2, ror fp
 24c:	2f656361 	svccs	0x00656361
 250:	726f5763 	rsbvc	r5, pc, #25952256	; 0x18c0000
 254:	6170536b 	cmnvs	r0, fp, ror #6
 258:	732f6563 			; <UNDEFINED> instruction: 0x732f6563
 25c:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 260:	6f630000 	svcvs	0x00630000
 264:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 268:	635f676e 	cmpvs	pc, #28835840	; 0x1b80000
 26c:	75637269 	strbvc	r7, [r3, #-617]!	; 0xfffffd97
 270:	2e737469 	cdpcs	4, 7, cr7, cr3, cr9, {3}
 274:	00010063 	andeq	r0, r1, r3, rrx
 278:	01050000 	mrseq	r0, (UNDEF: 5)
 27c:	20020500 	andcs	r0, r2, r0, lsl #10
 280:	17200003 	strne	r0, [r0, -r3]!
 284:	05300205 	ldreq	r0, [r0, #-517]!	; 0xfffffdfb
 288:	0205200c 	andeq	r2, r5, #12
 28c:	200c052f 	andcs	r0, ip, pc, lsr #10
 290:	052f0205 	streq	r0, [pc, #-517]!	; 93 <startup-0x1fffff6d>
 294:	0205200b 	andeq	r2, r5, #11
 298:	200c052f 	andcs	r0, ip, pc, lsr #10
 29c:	052f0705 	streq	r0, [pc, #-1797]!	; fffffb9f <apple+0xdfff8e7b>
 2a0:	0402000a 	streq	r0, [r2], #-10
 2a4:	14052001 	strne	r2, [r5], #-1
 2a8:	01040200 	mrseq	r0, R12_usr
 2ac:	0007052e 	andeq	r0, r7, lr, lsr #10
 2b0:	3c010402 	cfstrscc	mvf0, [r1], {2}
 2b4:	05210205 	streq	r0, [r1, #-517]!	; 0xfffffdfb
 2b8:	0105200c 	tsteq	r5, ip
 2bc:	0505a12f 	streq	sl, [r5, #-303]	; 0xfffffed1
 2c0:	8304054c 	movwhi	r0, #17740	; 0x454c
 2c4:	053e0705 	ldreq	r0, [lr, #-1797]!	; 0xfffff8fb
 2c8:	0305220b 	movweq	r2, #21003	; 0x520b
 2cc:	001c052e 	andseq	r0, ip, lr, lsr #10
 2d0:	20030402 	andcs	r0, r3, r2, lsl #8
 2d4:	02001805 	andeq	r1, r0, #327680	; 0x50000
 2d8:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
 2dc:	04020003 	streq	r0, [r2], #-3
 2e0:	05053c01 	streq	r3, [r5, #-3073]	; 0xfffff3ff
 2e4:	3907053d 	stmdbcc	r7, {r0, r2, r3, r4, r5, r8, sl}
 2e8:	05410105 	strbeq	r0, [r1, #-261]	; 0xfffffefb
 2ec:	07055a23 	streq	r5, [r5, -r3, lsr #20]
 2f0:	2203054b 	andcs	r0, r3, #314572800	; 0x12c00000
 2f4:	053d0505 	ldreq	r0, [sp, #-1285]!	; 0xfffffafb
 2f8:	01053907 	tsteq	r5, r7, lsl #18
 2fc:	5e020541 	cfsh32pl	mvfx0, mvfx2, #33
 300:	05591805 	ldrbeq	r1, [r9, #-2053]	; 0xfffff7fb
 304:	08053c11 	stmdaeq	r5, {r0, r4, sl, fp, ip, sp}
 308:	3d1b0520 	cfldr32cc	mvfx0, [fp, #-128]	; 0xffffff80
 30c:	053c2105 	ldreq	r2, [ip, #-261]!	; 0xfffffefb
 310:	1b053c25 	blne	14f3ac <startup-0x1feb0c54>
 314:	4a290520 	bmi	a4179c <startup-0x1f5be864>
 318:	053c1005 	ldreq	r1, [ip, #-5]!
 31c:	02054b09 	andeq	r4, r5, #9216	; 0x2400
 320:	0007022f 	andeq	r0, r7, pc, lsr #4
 324:	015f0101 	cmpeq	pc, r1, lsl #2
 328:	00030000 	andeq	r0, r3, r0
 32c:	0000009a 	muleq	r0, sl, r0
 330:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 334:	0101000d 	tsteq	r1, sp
 338:	00000101 	andeq	r0, r0, r1, lsl #2
 33c:	00000100 	andeq	r0, r0, r0, lsl #2
 340:	2f3a4301 	svccs	0x003a4301
 344:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 348:	6c452f73 	mcrrvs	15, 7, r2, r5, cr3
 34c:	2f736169 	svccs	0x00736169
 350:	44656e4f 	strbtmi	r6, [r5], #-3663	; 0xfffff1b1
 354:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 358:	43202d20 			; <UNDEFINED> instruction: 0x43202d20
 35c:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
 360:	20737265 	rsbscs	r7, r3, r5, ror #4
 364:	64757453 	ldrbtvs	r7, [r5], #-1107	; 0xfffffbad
 368:	73746e65 	cmnvc	r4, #1616	; 0x650
 36c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
 370:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 374:	532f7374 			; <UNDEFINED> instruction: 0x532f7374
 378:	69647574 	stmdbvs	r4!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 37c:	502f7365 	eorpl	r7, pc, r5, ror #6
 380:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
 384:	6e696d61 	cdpvs	13, 6, cr6, cr9, cr1, {3}
 388:	6f6d2f67 	svcvs	0x006d2f67
 38c:	57632f70 			; <UNDEFINED> instruction: 0x57632f70
 390:	536b726f 	cmnpl	fp, #-268435450	; 0xf0000006
 394:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
 398:	6f57632f 	svcvs	0x0057632f
 39c:	70536b72 	subsvc	r6, r3, r2, ror fp
 3a0:	2f656361 	svccs	0x00656361
 3a4:	6b616e73 	blvs	185bd78 <startup-0x1e7a4288>
 3a8:	6b000065 	blvs	544 <startup-0x1ffffabc>
 3ac:	61707965 	cmnvs	r0, r5, ror #18
 3b0:	00632e64 	rsbeq	r2, r3, r4, ror #28
 3b4:	64000001 	strvs	r0, [r0], #-1
 3b8:	616c6365 	cmnvs	ip, r5, ror #6
 3bc:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 3c0:	2e736e6f 	cdpcs	14, 7, cr6, cr3, cr15, {3}
 3c4:	00010068 	andeq	r0, r1, r8, rrx
 3c8:	01050000 	mrseq	r0, (UNDEF: 5)
 3cc:	24020500 	strcs	r0, [r2], #-1280	; 0xfffffb00
 3d0:	18200004 	stmdane	r0!, {r2}
 3d4:	054b0205 	strbeq	r0, [fp, #-517]	; 0xfffffdfb
 3d8:	052f080b 	streq	r0, [pc, #-2059]!	; fffffbd5 <apple+0xdfff8eb1>
 3dc:	03052019 	movweq	r2, #20505	; 0x5019
 3e0:	210b052e 	tstcs	fp, lr, lsr #10
 3e4:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
 3e8:	0b052e03 	bleq	14bbfc <startup-0x1feb4404>
 3ec:	20190521 	andscs	r0, r9, r1, lsr #10
 3f0:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
 3f4:	1905210b 	stmdbne	r5, {r0, r1, r3, r8, sp}
 3f8:	2e030520 	cfsh32cs	mvfx0, mvfx3, #16
 3fc:	05220c05 	streq	r0, [r2, #-3077]!	; 0xfffff3fb
 400:	0105201a 	tsteq	r5, sl, lsl r0
 404:	06058530 			; <UNDEFINED> instruction: 0x06058530
 408:	2004053e 	andcs	r0, r4, lr, lsr r5
 40c:	053d0705 	ldreq	r0, [sp, #-1797]!	; 0xfffff8fb
 410:	13054a04 	movwne	r4, #23044	; 0x5a04
 414:	01040200 	mrseq	r0, R12_usr
 418:	2f070520 	svccs	0x00070520
 41c:	054a0405 	strbeq	r0, [sl, #-1029]	; 0xfffffbfb
 420:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
 424:	07052001 	streq	r2, [r5, -r1]
 428:	4a04052f 	bmi	1018ec <startup-0x1fefe714>
 42c:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
 430:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 434:	04052f07 	streq	r2, [r5], #-3847	; 0xfffff0f9
 438:	0013054a 	andseq	r0, r3, sl, asr #10
 43c:	20010402 	andcs	r0, r1, r2, lsl #8
 440:	052f0905 	streq	r0, [pc, #-2309]!	; fffffb43 <apple+0xdfff8e1f>
 444:	056c2101 	strbeq	r2, [ip, #-257]!	; 0xfffffeff
 448:	0a053d10 	beq	14f890 <startup-0x1feb0770>
 44c:	2e020569 	cfsh32cs	mvfx0, mvfx2, #57
 450:	05210305 	streq	r0, [r1, #-773]!	; 0xfffffcfb
 454:	05054b0a 	streq	r4, [r5, #-2826]	; 0xfffff4f6
 458:	3d04054a 	cfstr32cc	mvfx0, [r4, #-296]	; 0xfffffed8
 45c:	053d1505 	ldreq	r1, [sp, #-1285]!	; 0xfffffafb
 460:	1d052e10 	stcne	14, cr2, [r5, #-64]	; 0xffffffc0
 464:	2e180520 	cfmul64cs	mvdx0, mvdx8, mvdx0
 468:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
 46c:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
 470:	02053802 	andeq	r3, r5, #131072	; 0x20000
 474:	01040200 	mrseq	r0, R12_usr
 478:	0805433c 	stmdaeq	r5, {r2, r3, r4, r5, r8, r9, lr}
 47c:	0001053d 	andeq	r0, r1, sp, lsr r5
 480:	21010402 	tstcs	r1, r2, lsl #8
 484:	01000702 	tsteq	r0, r2, lsl #14
 488:	0000f301 	andeq	pc, r0, r1, lsl #6
 48c:	98000300 	stmdals	r0, {r8, r9}
 490:	02000000 	andeq	r0, r0, #0
 494:	0d0efb01 	vstreq	d15, [lr, #-4]
 498:	01010100 	mrseq	r0, (UNDEF: 17)
 49c:	00000001 	andeq	r0, r0, r1
 4a0:	01000001 	tsteq	r0, r1
 4a4:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffffa69 <apple+0xdfff8d45>
 4a8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 4ac:	696c452f 	stmdbvs	ip!, {r0, r1, r2, r3, r5, r8, sl, lr}^
 4b0:	4f2f7361 	svcmi	0x002f7361
 4b4:	7244656e 	subvc	r6, r4, #461373440	; 0x1b800000
 4b8:	20657669 	rsbcs	r7, r5, r9, ror #12
 4bc:	6843202d 	stmdavs	r3, {r0, r2, r3, r5, sp}^
 4c0:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
 4c4:	53207372 			; <UNDEFINED> instruction: 0x53207372
 4c8:	65647574 	strbvs	r7, [r4, #-1396]!	; 0xfffffa8c
 4cc:	2f73746e 	svccs	0x0073746e
 4d0:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
 4d4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 4d8:	74532f73 	ldrbvc	r2, [r3], #-3955	; 0xfffff08d
 4dc:	65696475 	strbvs	r6, [r9, #-1141]!	; 0xfffffb8b
 4e0:	72502f73 	subsvc	r2, r0, #460	; 0x1cc
 4e4:	6172676f 	cmnvs	r2, pc, ror #14
 4e8:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 4ec:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
 4f0:	6f57632f 	svcvs	0x0057632f
 4f4:	70536b72 	subsvc	r6, r3, r2, ror fp
 4f8:	2f656361 	svccs	0x00656361
 4fc:	726f5763 	rsbvc	r5, pc, #25952256	; 0x18c0000
 500:	6170536b 	cmnvs	r0, fp, ror #6
 504:	732f6563 			; <UNDEFINED> instruction: 0x732f6563
 508:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 50c:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
 510:	632e7469 			; <UNDEFINED> instruction: 0x632e7469
 514:	00000100 	andeq	r0, r0, r0, lsl #2
 518:	6c636564 	cfstr64vs	mvdx6, [r3], #-400	; 0xfffffe70
 51c:	74617261 	strbtvc	r7, [r1], #-609	; 0xfffffd9f
 520:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 524:	0100682e 	tsteq	r0, lr, lsr #16
 528:	05000000 	streq	r0, [r0, #-0]
 52c:	02050002 	andeq	r0, r5, #2
 530:	20000544 	andcs	r0, r0, r4, asr #10
 534:	0f052f17 	svceq	0x00052f17
 538:	3d020520 	cfstr32cc	mvfx0, [r2, #-128]	; 0xffffff80
 53c:	05201005 	streq	r1, [r0, #-5]!
 540:	0f052f02 	svceq	0x00052f02
 544:	3d020520 	cfstr32cc	mvfx0, [r2, #-128]	; 0xffffff80
 548:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
 54c:	055b3d01 	ldrbeq	r3, [fp, #-3329]	; 0xfffff2ff
 550:	0f052f02 	svceq	0x00052f02
 554:	2f020520 	svccs	0x00020520
 558:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
 55c:	10052f02 	andne	r2, r5, r2, lsl #30
 560:	2f010520 	svccs	0x00010520
 564:	2f0c0593 	svccs	0x000c0593
 568:	05830205 	streq	r0, [r3, #517]	; 0x205
 56c:	053d200c 	ldreq	r2, [sp, #-12]!
 570:	05858401 	streq	r8, [r5, #1025]	; 0x401
 574:	2f2f2f02 	svccs	0x002f2f02
 578:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
 57c:	01010003 	tsteq	r1, r3
 580:	00000389 	andeq	r0, r0, r9, lsl #7
 584:	00980003 	addseq	r0, r8, r3
 588:	01020000 	mrseq	r0, (UNDEF: 2)
 58c:	000d0efb 	strdeq	r0, [sp], -fp
 590:	01010101 	tsteq	r1, r1, lsl #2
 594:	01000000 	mrseq	r0, (UNDEF: 0)
 598:	43010000 	movwmi	r0, #4096	; 0x1000
 59c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
 5a0:	2f737265 	svccs	0x00737265
 5a4:	61696c45 	cmnvs	r9, r5, asr #24
 5a8:	6e4f2f73 	mcrvs	15, 2, r2, cr15, cr3, {3}
 5ac:	69724465 	ldmdbvs	r2!, {r0, r2, r5, r6, sl, lr}^
 5b0:	2d206576 	cfstr32cs	mvfx6, [r0, #-472]!	; 0xfffffe28
 5b4:	61684320 	cmnvs	r8, r0, lsr #6
 5b8:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 5bc:	74532073 	ldrbvc	r2, [r3], #-115	; 0xffffff8d
 5c0:	6e656475 	mcrvs	4, 3, r6, cr5, cr5, {3}
 5c4:	442f7374 	strtmi	r7, [pc], #-884	; 5cc <startup-0x1ffffa34>
 5c8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 5cc:	73746e65 	cmnvc	r4, #1616	; 0x650
 5d0:	7574532f 	ldrbvc	r5, [r4, #-815]!	; 0xfffffcd1
 5d4:	73656964 	cmnvc	r5, #100, 18	; 0x190000
 5d8:	6f72502f 	svcvs	0x0072502f
 5dc:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
 5e0:	2f676e69 	svccs	0x00676e69
 5e4:	2f706f6d 	svccs	0x00706f6d
 5e8:	726f5763 	rsbvc	r5, pc, #25952256	; 0x18c0000
 5ec:	6170536b 	cmnvs	r0, fp, ror #6
 5f0:	632f6563 			; <UNDEFINED> instruction: 0x632f6563
 5f4:	6b726f57 	blvs	1c9c358 <startup-0x1e363ca8>
 5f8:	63617053 	cmnvs	r1, #83	; 0x53
 5fc:	6e732f65 	cdpvs	15, 7, cr2, cr3, cr5, {3}
 600:	00656b61 	rsbeq	r6, r5, r1, ror #22
 604:	6d616700 	stclvs	7, cr6, [r1, #-0]
 608:	00632e65 	rsbeq	r2, r3, r5, ror #28
 60c:	64000001 	strvs	r0, [r0], #-1
 610:	616c6365 	cmnvs	ip, r5, ror #6
 614:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 618:	2e736e6f 	cdpcs	14, 7, cr6, cr3, cr15, {3}
 61c:	00010068 	andeq	r0, r1, r8, rrx
 620:	01050000 	mrseq	r0, (UNDEF: 5)
 624:	00020500 	andeq	r0, r2, r0, lsl #10
 628:	19200000 	stmdbne	r0!, {}	; <UNPREDICTABLE>
 62c:	2f212113 	svccs	0x00212113
 630:	00030221 	andeq	r0, r3, r1, lsr #4
 634:	01050101 	tsteq	r5, r1, lsl #2
 638:	ec020500 	cfstr32	mvfx0, [r2], {-0}
 63c:	03200005 			; <UNDEFINED> instruction: 0x03200005
 640:	02050112 	andeq	r0, r5, #-2147483644	; 0x80000004
 644:	01051321 	tsteq	r5, r1, lsr #6
 648:	02052421 	andeq	r2, r5, #553648128	; 0x21000000
 64c:	01051321 	tsteq	r5, r1, lsr #6
 650:	02052421 	andeq	r2, r5, #553648128	; 0x21000000
 654:	01051321 	tsteq	r5, r1, lsr #6
 658:	02052421 	andeq	r2, r5, #553648128	; 0x21000000
 65c:	01051321 	tsteq	r5, r1, lsr #6
 660:	16052521 	strne	r2, [r5], -r1, lsr #10
 664:	2e06054b 	cfsh32cs	mvfx0, mvfx6, #43
 668:	052f0a05 	streq	r0, [pc, #-2565]!	; fffffc6b <apple+0xdfff8f47>
 66c:	19052e02 	stmdbne	r5, {r1, r9, sl, fp, sp}
 670:	03040200 	movweq	r0, #16896	; 0x4200
 674:	00280522 	eoreq	r0, r8, r2, lsr #10
 678:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 67c:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
 680:	05660304 	strbeq	r0, [r6, #-772]!	; 0xfffffcfc
 684:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
 688:	11052e03 	tstne	r5, r3, lsl #28
 68c:	03040200 	movweq	r0, #16896	; 0x4200
 690:	0019053c 	andseq	r0, r9, ip, lsr r5
 694:	4b030402 	blmi	c16a4 <startup-0x1ff3e95c>
 698:	02002805 	andeq	r2, r0, #327680	; 0x50000
 69c:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
 6a0:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
 6a4:	2b056603 	blcs	159eb8 <startup-0x1fea6148>
 6a8:	03040200 	movweq	r0, #16896	; 0x4200
 6ac:	0011052e 	andseq	r0, r1, lr, lsr #10
 6b0:	3c030402 	cfstrscc	mvf0, [r3], {2}
 6b4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
 6b8:	054b0304 	strbeq	r0, [fp, #-772]	; 0xfffffcfc
 6bc:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
 6c0:	02057e03 	andeq	r7, r5, #3, 28	; 0x30
 6c4:	01040200 	mrseq	r0, R12_usr
 6c8:	5001053c 	andpl	r0, r1, ip, lsr r5
 6cc:	4b16055b 	blmi	581c40 <startup-0x1fa7e3c0>
 6d0:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
 6d4:	02052f0a 	andeq	r2, r5, #10, 30	; 0x28
 6d8:	0019052e 	andseq	r0, r9, lr, lsr #10
 6dc:	22030402 	andcs	r0, r3, #33554432	; 0x2000000
 6e0:	02002805 	andeq	r2, r0, #327680	; 0x50000
 6e4:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
 6e8:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
 6ec:	2b056603 	blcs	159f00 <startup-0x1fea6100>
 6f0:	03040200 	movweq	r0, #16896	; 0x4200
 6f4:	0011052e 	andseq	r0, r1, lr, lsr #10
 6f8:	3c030402 	cfstrscc	mvf0, [r3], {2}
 6fc:	02001905 	andeq	r1, r0, #81920	; 0x14000
 700:	054b0304 	strbeq	r0, [fp, #-772]	; 0xfffffcfc
 704:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
 708:	32052e03 	andcc	r2, r5, #3, 28	; 0x30
 70c:	03040200 	movweq	r0, #16896	; 0x4200
 710:	002b0566 	eoreq	r0, fp, r6, ror #10
 714:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 718:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
 71c:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
 720:	04020003 	streq	r0, [r2], #-3
 724:	21054b03 	tstcs	r5, r3, lsl #22
 728:	03040200 	movweq	r0, #16896	; 0x4200
 72c:	0002057e 	andeq	r0, r2, lr, ror r5
 730:	3c010402 	cfstrscc	mvf0, [r1], {2}
 734:	5b500105 	blpl	1400b50 <startup-0x1ebff4b0>
 738:	3d670e05 	stclcc	14, cr0, [r7, #-20]!	; 0xffffffec
 73c:	4e3d0105 	rsfmie	f0, f5, f5
 740:	054c0205 	strbeq	r0, [ip, #-517]	; 0xfffffdfb
 744:	19054b10 	stmdbne	r5, {r4, r8, r9, fp, lr}
 748:	2e10052e 	cfmul64cs	mvdx0, mvdx0, mvdx14
 74c:	2e19053d 	mrccs	5, 0, r0, cr9, cr13, {1}
 750:	052e1005 	streq	r1, [lr, #-5]!
 754:	054b3d02 	strbeq	r3, [fp, #-3330]	; 0xfffff2fe
 758:	054e3d01 	strbeq	r3, [lr, #-3329]	; 0xfffff2ff
 75c:	13054b02 	movwne	r4, #23298	; 0x5b02
 760:	5811054b 	ldmdapl	r1, {r0, r1, r3, r6, r8, sl}
 764:	052f1305 	streq	r1, [pc, #-773]!	; 467 <startup-0x1ffffb99>
 768:	02055811 	andeq	r5, r5, #1114112	; 0x110000
 76c:	4b01052f 	blmi	41c30 <startup-0x1ffbe3d0>
 770:	33032b05 	movwcc	r2, #15109	; 0x3b05
 774:	5907054a 	stmdbpl	r7, {r1, r3, r6, r8, sl}
 778:	053d3d3d 	ldreq	r3, [sp, #-3389]!	; 0xfffff2c3
 77c:	03053d0c 	movweq	r3, #23820	; 0x5d0c
 780:	210e052e 	tstcs	lr, lr, lsr #10
 784:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
 788:	25052119 	strcs	r2, [r5, #-281]	; 0xfffffee7
 78c:	7415052e 	ldrvc	r0, [r5], #-1326	; 0xfffffad2
 790:	052e3805 	streq	r3, [lr, #-2053]!	; 0xfffff7fb
 794:	34052e44 	strcc	r2, [r5], #-3652	; 0xfffff1bc
 798:	2e0a0574 	cfrshl64cs	mvdx10, mvdx4, r0
 79c:	02001705 	andeq	r1, r0, #1310720	; 0x140000
 7a0:	052f0104 	streq	r0, [pc, #-260]!	; 6a4 <startup-0x1ffff95c>
 7a4:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
 7a8:	13052e01 	movwne	r2, #24065	; 0x5e01
 7ac:	01040200 	mrseq	r0, R12_usr
 7b0:	00360574 	eorseq	r0, r6, r4, ror r5
 7b4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 7b8:	02004205 	andeq	r4, r0, #1342177280	; 0x50000000
 7bc:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
 7c0:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
 7c4:	48057401 	stmdami	r5, {r0, sl, ip, sp, lr}
 7c8:	01040200 	mrseq	r0, R12_usr
 7cc:	2f4e052d 	svccs	0x004e052d
 7d0:	02002f05 	andeq	r2, r0, #5, 30
 7d4:	052c0204 	streq	r0, [ip, #-516]!	; 0xfffffdfc
 7d8:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
 7dc:	21053c01 	tstcs	r5, r1, lsl #24
 7e0:	01040200 	mrseq	r0, R12_usr
 7e4:	0005052e 	andeq	r0, r5, lr, lsr #10
 7e8:	20010402 	andcs	r0, r1, r2, lsl #8
 7ec:	02002c05 	andeq	r2, r0, #1280	; 0x500
 7f0:	053b0204 	ldreq	r0, [fp, #-516]!	; 0xfffffdfc
 7f4:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
 7f8:	1e053c01 	cdpne	12, 0, cr3, cr5, cr1, {0}
 7fc:	01040200 	mrseq	r0, R12_usr
 800:	0003052e 	andeq	r0, r3, lr, lsr #10
 804:	20010402 	andcs	r0, r1, r2, lsl #8
 808:	05410a05 	strbeq	r0, [r1, #-2565]	; 0xfffff5fb
 80c:	054d2101 	strbeq	r2, [sp, #-257]	; 0xfffffeff
 810:	17055a09 	strne	r5, [r5, -r9, lsl #20]
 814:	2e05052e 	cfsh32cs	mvfx0, mvfx5, #30
 818:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
 81c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
 820:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
 824:	1f052e01 	svcne	0x00052e01
 828:	01040200 	mrseq	r0, R12_usr
 82c:	2f0a052e 	svccs	0x000a052e
 830:	2e060532 	mcrcs	5, 0, r0, cr6, cr2, {1}
 834:	02000c05 	andeq	r0, r0, #1280	; 0x500
 838:	052f0104 	streq	r0, [pc, #-260]!	; 73c <startup-0x1ffff8c4>
 83c:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
 840:	20052e01 	andcs	r2, r5, r1, lsl #28
 844:	01040200 	mrseq	r0, R12_usr
 848:	0014052e 	andseq	r0, r4, lr, lsr #10
 84c:	20010402 	andcs	r0, r1, r2, lsl #8
 850:	02001605 	andeq	r1, r0, #5242880	; 0x500000
 854:	051f0104 	ldreq	r0, [pc, #-260]	; 758 <startup-0x1ffff8a8>
 858:	29053006 	stmdbcs	r5, {r1, r2, ip, sp}
 85c:	300b052d 	andcc	r0, fp, sp, lsr #10
 860:	052e1805 	streq	r1, [lr, #-2053]!	; 0xfffff7fb
 864:	13052e1f 	movwne	r2, #24095	; 0x5e1f
 868:	1f120520 	svcne	0x00120520
 86c:	05300b05 	ldreq	r0, [r0, #-2821]!	; 0xfffff4fb
 870:	01052f09 	tsteq	r5, r9, lsl #30
 874:	08054d21 	stmdaeq	r5, {r0, r5, r8, sl, fp, lr}
 878:	2e02054c 	cfsh32cs	mvfx0, mvfx2, #44
 87c:	02000805 	andeq	r0, r0, #327680	; 0x50000
 880:	052f0104 	streq	r0, [pc, #-260]!	; 784 <startup-0x1ffff87c>
 884:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
 888:	08052d01 	stmdaeq	r5, {r0, r8, sl, fp, sp}
 88c:	2d1e0530 	cfldr32cs	mvfx0, [lr, #-192]	; 0xffffff40
 890:	05300805 	ldreq	r0, [r0, #-2053]!	; 0xfffff7fb
 894:	0b052d13 	bleq	14bce8 <startup-0x1feb4318>
 898:	2f0f0531 	svccs	0x000f0531
 89c:	4e210105 	sufmis	f0, f1, f5
 8a0:	2f3d0605 	svccs	0x003d0605
 8a4:	2f300a05 	svccs	0x00300a05
 8a8:	3002052f 	andcc	r0, r2, pc, lsr #10
 8ac:	09052f2f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r8, r9, sl, fp, sp}
 8b0:	2e020530 	cfmv64hrcs	mvdx2, r0
 8b4:	053d0805 	ldreq	r0, [sp, #-2053]!	; 0xfffff7fb
 8b8:	0305220e 	movweq	r2, #21006	; 0x520e
 8bc:	3d07052e 	cfstr32cc	mvfx0, [r7, #-184]	; 0xffffff48
 8c0:	05590305 	ldrbeq	r0, [r9, #-773]	; 0xfffffcfb
 8c4:	0c05ca17 			; <UNDEFINED> instruction: 0x0c05ca17
 8c8:	4a04052e 	bmi	101d88 <startup-0x1fefe278>
 8cc:	05221705 	streq	r1, [r2, #-1797]!	; 0xfffff8fb
 8d0:	04052e0c 	streq	r2, [r5], #-3596	; 0xfffff1f4
 8d4:	22170558 	andscs	r0, r7, #88, 10	; 0x16000000
 8d8:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
 8dc:	17055804 	strne	r5, [r5, -r4, lsl #16]
 8e0:	2e0c0522 	cfsh32cs	mvfx0, mvfx12, #18
 8e4:	054a0405 	strbeq	r0, [sl, #-1029]	; 0xfffffbfb
 8e8:	05052306 	streq	r2, [r5, #-774]	; 0xfffffcfa
 8ec:	220b0574 	andcs	r0, fp, #116, 10	; 0x1d000000
 8f0:	052e0405 	streq	r0, [lr, #-1029]!	; 0xfffffbfb
 8f4:	0a053d09 	beq	14fd20 <startup-0x1feb02e0>
 8f8:	053c6e03 	ldreq	r6, [ip, #-3587]!	; 0xfffff1fd
 8fc:	02055808 	andeq	r5, r5, #8, 16	; 0x80000
 900:	59201503 	stmdbpl	r0!, {r0, r1, r8, sl, ip}
 904:	6701052f 	strvs	r0, [r1, -pc, lsr #10]
 908:	01000d02 	tsteq	r0, r2, lsl #26
 90c:	Address 0x0000090c is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	726b636c 	rsbvc	r6, fp, #108, 6	; 0xb0000001
   4:	6c6f6300 	stclvs	3, cr6, [pc], #-0	; c <startup-0x1ffffff4>
   8:	006e6d75 	rsbeq	r6, lr, r5, ror sp
   c:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
  10:	73615f65 	cmnvc	r1, #404	; 0x194
  14:	00696963 	rsbeq	r6, r9, r3, ror #18
  18:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
  1c:	6e752074 	mrcvs	0, 3, r2, cr5, cr4, {3}
  20:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
  24:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
  28:	6200746e 	andvs	r7, r0, #1845493760	; 0x6e000000
  2c:	00727273 	rsbseq	r7, r2, r3, ror r2
  30:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  34:	6e695f69 	cdpvs	15, 6, cr5, cr9, cr9, {3}
  38:	6f007469 	svcvs	0x00007469
  3c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
  40:	65520072 	ldrbvs	r0, [r2, #-114]	; 0xffffff8e
  44:	76726573 			; <UNDEFINED> instruction: 0x76726573
  48:	00336465 	eorseq	r6, r3, r5, ror #8
  4c:	4872646f 	ldmdami	r2!, {r0, r1, r2, r3, r5, r6, sl, sp, lr}^
  50:	00686769 	rsbeq	r6, r8, r9, ror #14
  54:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff619 <apple+0xdfff88f5>
  58:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  5c:	696c452f 	stmdbvs	ip!, {r0, r1, r2, r3, r5, r8, sl, lr}^
  60:	4f2f7361 	svcmi	0x002f7361
  64:	7244656e 	subvc	r6, r4, #461373440	; 0x1b800000
  68:	20657669 	rsbcs	r7, r5, r9, ror #12
  6c:	6843202d 	stmdavs	r3, {r0, r2, r3, r5, sp}^
  70:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
  74:	53207372 			; <UNDEFINED> instruction: 0x53207372
  78:	65647574 	strbvs	r7, [r4, #-1396]!	; 0xfffffa8c
  7c:	2f73746e 	svccs	0x0073746e
  80:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
  84:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
  88:	74532f73 	ldrbvc	r2, [r3], #-3955	; 0xfffff08d
  8c:	65696475 	strbvs	r6, [r9, #-1141]!	; 0xfffffb8b
  90:	72502f73 	subsvc	r2, r0, #460	; 0x1cc
  94:	6172676f 	cmnvs	r2, pc, ror #14
  98:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
  9c:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
  a0:	6f57632f 	svcvs	0x0057632f
  a4:	70536b72 	subsvc	r6, r3, r2, ror fp
  a8:	2f656361 	svccs	0x00656361
  ac:	726f5763 	rsbvc	r5, pc, #25952256	; 0x18c0000
  b0:	6170536b 	cmnvs	r0, fp, ror #6
  b4:	732f6563 			; <UNDEFINED> instruction: 0x732f6563
  b8:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
  bc:	6373612f 	cmnvs	r3, #-1073741813	; 0xc000000b
  c0:	645f6969 	ldrbvs	r6, [pc], #-2409	; c8 <startup-0x1fffff38>
  c4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
  c8:	632e7961 			; <UNDEFINED> instruction: 0x632e7961
  cc:	736e7500 	cmnvc	lr, #0, 10
  d0:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  d4:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
  d8:	61007261 	tstvs	r0, r1, ror #4
  dc:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
  e0:	6165725f 	cmnvs	r5, pc, asr r2
  e4:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
  e8:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
  ec:	6e696c00 	cdpvs	12, 6, cr6, cr9, cr0, {0}
  f0:	50003165 	andpl	r3, r0, r5, ror #2
  f4:	4f495047 	svcmi	0x00495047
  f8:	72666100 	rsbvc	r6, r6, #0, 2
  fc:	66610068 	strbtvs	r0, [r1], -r8, rrx
 100:	6c006c72 	stcvs	12, cr6, [r0], {114}	; 0x72
 104:	32656e69 	rsbcc	r6, r5, #1680	; 0x690
 108:	63736100 	cmnvs	r3, #0, 2
 10c:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
 110:	5f646165 	svcpl	0x00646165
 114:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 118:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 11c:	61007265 	tstvs	r0, r5, ror #4
 120:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 124:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
 128:	69625f6c 	stmdbvs	r2!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 12c:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
 130:	73610074 	cmnvc	r1, #116	; 0x74
 134:	5f696963 	svcpl	0x00696963
 138:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 13c:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
 140:	75700064 	ldrbvc	r0, [r0, #-100]!	; 0xffffff9c
 144:	00726470 	rsbseq	r6, r2, r0, ror r4
 148:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
 14c:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
 150:	65520030 	ldrbvs	r0, [r2, #-48]	; 0xffffffd0
 154:	76726573 			; <UNDEFINED> instruction: 0x76726573
 158:	00316465 	eorseq	r6, r1, r5, ror #8
 15c:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
 160:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
 164:	3a430032 	bcc	10c0234 <startup-0x1ef3fdcc>
 168:	6573555c 	ldrbvs	r5, [r3, #-1372]!	; 0xfffffaa4
 16c:	455c7372 	ldrbmi	r7, [ip, #-882]	; 0xfffffc8e
 170:	7361696c 	cmnvc	r1, #108, 18	; 0x1b0000
 174:	656e4f5c 	strbvs	r4, [lr, #-3932]!	; 0xfffff0a4
 178:	76697244 	strbtvc	r7, [r9], -r4, asr #4
 17c:	202d2065 	eorcs	r2, sp, r5, rrx
 180:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 184:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 188:	75745320 	ldrbvc	r5, [r4, #-800]!	; 0xfffffce0
 18c:	746e6564 	strbtvc	r6, [lr], #-1380	; 0xfffffa9c
 190:	6f445c73 	svcvs	0x00445c73
 194:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 198:	5c73746e 	cfldrdpl	mvd7, [r3], #-440	; 0xfffffe48
 19c:	64757453 	ldrbtvs	r7, [r5], #-1107	; 0xfffffbad
 1a0:	5c736569 	cfldr64pl	mvdx6, [r3], #-420	; 0xfffffe5c
 1a4:	676f7250 			; <UNDEFINED> instruction: 0x676f7250
 1a8:	696d6172 	stmdbvs	sp!, {r1, r4, r5, r6, r8, sp, lr}^
 1ac:	6d5c676e 	ldclvs	7, cr6, [ip, #-440]	; 0xfffffe48
 1b0:	635c706f 	cmpvs	ip, #111	; 0x6f
 1b4:	6b726f57 	blvs	1c9bf18 <startup-0x1e3640e8>
 1b8:	63617053 	cmnvs	r1, #83	; 0x53
 1bc:	57635c65 	strbpl	r5, [r3, -r5, ror #24]!
 1c0:	536b726f 	cmnpl	fp, #-268435450	; 0xf0000006
 1c4:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
 1c8:	616e735c 	cmnvs	lr, ip, asr r3
 1cc:	6f00656b 	svcvs	0x0000656b
 1d0:	6f4c7264 	svcvs	0x004c7264
 1d4:	73610077 	cmnvc	r1, #119	; 0x77
 1d8:	5f696963 	svcpl	0x00696963
 1dc:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 1e0:	61645f65 	cmnvs	r4, r5, ror #30
 1e4:	61006174 	tstvs	r0, r4, ror r1
 1e8:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 1ec:	6d6f635f 	stclvs	3, cr6, [pc, #-380]!	; 78 <startup-0x1fffff88>
 1f0:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
 1f4:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
 1f8:	39394320 	ldmdbcc	r9!, {r5, r8, r9, lr}
 1fc:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
 200:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
 204:	31393130 	teqcc	r9, r0, lsr r1
 208:	20353230 	eorscs	r3, r5, r0, lsr r2
 20c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
 210:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
 214:	415b2029 	cmpmi	fp, r9, lsr #32
 218:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
 21c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
 220:	6172622d 	cmnvs	r2, sp, lsr #4
 224:	2068636e 	rsbcs	r6, r8, lr, ror #6
 228:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 22c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 230:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
 234:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
 238:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
 23c:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
 240:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
 244:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
 248:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
 24c:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
 250:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
 254:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
 258:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
 25c:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
 260:	20672d20 	rsbcs	r2, r7, r0, lsr #26
 264:	20304f2d 	eorscs	r4, r0, sp, lsr #30
 268:	6474732d 	ldrbtvs	r7, [r4], #-813	; 0xfffffcd3
 26c:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
 270:	72646900 	rsbvc	r6, r4, #0, 18
 274:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
 278:	70736f00 	rsbsvc	r6, r3, r0, lsl #30
 27c:	72646565 	rsbvc	r6, r4, #423624704	; 0x19400000
 280:	63736100 	cmnvs	r3, #0, 2
 284:	675f6969 	ldrbvs	r6, [pc, -r9, ror #18]
 288:	7978746f 	ldmdbvc	r8!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 28c:	72646900 	rsbvc	r6, r4, #0, 18
 290:	00776f4c 	rsbseq	r6, r7, ip, asr #30
 294:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 298:	74635f69 	strbtvc	r5, [r3], #-3945	; 0xfffff097
 29c:	625f6c72 	subsvs	r6, pc, #29184	; 0x7200
 2a0:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
 2a4:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 2a8:	63736100 	cmnvs	r3, #0, 2
 2ac:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
 2b0:	5f646165 	svcpl	0x00646165
 2b4:	61746164 	cmnvs	r4, r4, ror #2
 2b8:	646f6d00 	strbtvs	r6, [pc], #-3328	; 2c0 <startup-0x1ffffd40>
 2bc:	61007265 	tstvs	r0, r5, ror #4
 2c0:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 2c4:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 2c8:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
 2cc:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 2d0:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 2d4:	73610072 	cmnvc	r1, #114	; 0x72
 2d8:	5f696963 	svcpl	0x00696963
 2dc:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 2e0:	68635f65 	stmdavs	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 2e4:	43007261 	movwmi	r7, #609	; 0x261
 2e8:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
 2ec:	2f737265 	svccs	0x00737265
 2f0:	61696c45 	cmnvs	r9, r5, asr #24
 2f4:	6e4f2f73 	mcrvs	15, 2, r2, cr15, cr3, {3}
 2f8:	69724465 	ldmdbvs	r2!, {r0, r2, r5, r6, sl, lr}^
 2fc:	2d206576 	cfstr32cs	mvfx6, [r0, #-472]!	; 0xfffffe28
 300:	61684320 	cmnvs	r8, r0, lsr #6
 304:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 308:	74532073 	ldrbvc	r2, [r3], #-115	; 0xffffff8d
 30c:	6e656475 	mcrvs	4, 3, r6, cr5, cr5, {3}
 310:	442f7374 	strtmi	r7, [pc], #-884	; 318 <startup-0x1ffffce8>
 314:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 318:	73746e65 	cmnvc	r4, #1616	; 0x650
 31c:	7574532f 	ldrbvc	r5, [r4, #-815]!	; 0xfffffcd1
 320:	73656964 	cmnvc	r5, #100, 18	; 0x190000
 324:	6f72502f 	svcvs	0x0072502f
 328:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
 32c:	2f676e69 	svccs	0x00676e69
 330:	2f706f6d 	svccs	0x00706f6d
 334:	726f5763 	rsbvc	r5, pc, #25952256	; 0x18c0000
 338:	6170536b 	cmnvs	r0, fp, ror #6
 33c:	632f6563 			; <UNDEFINED> instruction: 0x632f6563
 340:	6b726f57 	blvs	1c9c0a4 <startup-0x1e363f5c>
 344:	63617053 	cmnvs	r1, #83	; 0x53
 348:	6e732f65 	cdpvs	15, 7, cr2, cr3, cr5, {3}
 34c:	2f656b61 	svccs	0x00656b61
 350:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 354:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 358:	7269635f 	rsbvc	r6, r9, #2080374785	; 0x7c000001
 35c:	74697563 	strbtvc	r7, [r9], #-1379	; 0xfffffa9d
 360:	00632e73 	rsbeq	r2, r3, r3, ror lr
 364:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
 368:	72006d6f 	andvc	r6, r0, #7104	; 0x1bc0
 36c:	6f646e61 	svcvs	0x00646e61
 370:	756e5f6d 	strbvc	r5, [lr, #-3949]!	; 0xfffff093
 374:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
 378:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 37c:	325f7961 	subscc	r7, pc, #1589248	; 0x184000
 380:	736e3035 	cmnvc	lr, #53	; 0x35
 384:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 388:	6d5f7961 	vldrvs.16	s15, [pc, #-194]	; 2ce <startup-0x1ffffd32>	; <UNPREDICTABLE>
 38c:	696c6c69 	stmdbvs	ip!, {r0, r3, r5, r6, sl, fp, sp, lr}^
 390:	6f687300 	svcvs	0x00687300
 394:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
 398:	6400746e 	strvs	r7, [r0], #-1134	; 0xfffffb92
 39c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 3a0:	63696d5f 	cmnvs	r9, #6080	; 0x17c0
 3a4:	61006f72 	tstvs	r0, r2, ror pc
 3a8:	76697463 	strbtvc	r7, [r9], -r3, ror #8
 3ac:	52657461 	rsbpl	r7, r5, #1627389952	; 0x61000000
 3b0:	6b00776f 	blvs	1e174 <startup-0x1ffe1e8c>
 3b4:	00627965 	rsbeq	r7, r2, r5, ror #18
 3b8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 3bc:	006c6f43 	rsbeq	r6, ip, r3, asr #30
 3c0:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff985 <apple+0xdfff8c61>
 3c4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 3c8:	696c452f 	stmdbvs	ip!, {r0, r1, r2, r3, r5, r8, sl, lr}^
 3cc:	4f2f7361 	svcmi	0x002f7361
 3d0:	7244656e 	subvc	r6, r4, #461373440	; 0x1b800000
 3d4:	20657669 	rsbcs	r7, r5, r9, ror #12
 3d8:	6843202d 	stmdavs	r3, {r0, r2, r3, r5, sp}^
 3dc:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
 3e0:	53207372 			; <UNDEFINED> instruction: 0x53207372
 3e4:	65647574 	strbvs	r7, [r4, #-1396]!	; 0xfffffa8c
 3e8:	2f73746e 	svccs	0x0073746e
 3ec:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
 3f0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 3f4:	74532f73 	ldrbvc	r2, [r3], #-3955	; 0xfffff08d
 3f8:	65696475 	strbvs	r6, [r9, #-1141]!	; 0xfffffb8b
 3fc:	72502f73 	subsvc	r2, r0, #460	; 0x1cc
 400:	6172676f 	cmnvs	r2, pc, ror #14
 404:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 408:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
 40c:	6f57632f 	svcvs	0x0057632f
 410:	70536b72 	subsvc	r6, r3, r2, ror fp
 414:	2f656361 	svccs	0x00656361
 418:	726f5763 	rsbvc	r5, pc, #25952256	; 0x18c0000
 41c:	6170536b 	cmnvs	r0, fp, ror #6
 420:	732f6563 			; <UNDEFINED> instruction: 0x732f6563
 424:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 428:	79656b2f 	stmdbvc	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 42c:	2e646170 	mcrcs	1, 3, r6, cr4, cr0, {3}
 430:	6e690063 	cdpvs	0, 6, cr0, cr9, cr3, {3}
 434:	6b5f7469 	blvs	17dd5e0 <startup-0x1e822a20>
 438:	61707965 	cmnvs	r0, r5, ror #18
 43c:	6e690064 	cdpvs	0, 6, cr0, cr9, cr4, {3}
 440:	615f7469 	cmpvs	pc, r9, ror #8
 444:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 448:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
 44c:	70615f74 	rsbvc	r5, r1, r4, ror pc
 450:	3a430070 	bcc	10c0618 <startup-0x1ef3f9e8>
 454:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 458:	452f7372 	strmi	r7, [pc, #-882]!	; ee <startup-0x1fffff12>
 45c:	7361696c 	cmnvc	r1, #108, 18	; 0x1b0000
 460:	656e4f2f 	strbvs	r4, [lr, #-3887]!	; 0xfffff0d1
 464:	76697244 	strbtvc	r7, [r9], -r4, asr #4
 468:	202d2065 	eorcs	r2, sp, r5, rrx
 46c:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 470:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 474:	75745320 	ldrbvc	r5, [r4, #-800]!	; 0xfffffce0
 478:	746e6564 	strbtvc	r6, [lr], #-1380	; 0xfffffa9c
 47c:	6f442f73 	svcvs	0x00442f73
 480:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 484:	2f73746e 	svccs	0x0073746e
 488:	64757453 	ldrbtvs	r7, [r5], #-1107	; 0xfffffbad
 48c:	2f736569 	svccs	0x00736569
 490:	676f7250 			; <UNDEFINED> instruction: 0x676f7250
 494:	696d6172 	stmdbvs	sp!, {r1, r4, r5, r6, r8, sp, lr}^
 498:	6d2f676e 	stcvs	7, cr6, [pc, #-440]!	; 2e8 <startup-0x1ffffd18>
 49c:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
 4a0:	6b726f57 	blvs	1c9c204 <startup-0x1e363dfc>
 4a4:	63617053 	cmnvs	r1, #83	; 0x53
 4a8:	57632f65 	strbpl	r2, [r3, -r5, ror #30]!
 4ac:	536b726f 	cmnpl	fp, #-268435450	; 0xf0000006
 4b0:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
 4b4:	616e732f 	cmnvs	lr, pc, lsr #6
 4b8:	692f656b 	stmdbvs	pc!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
 4bc:	2e74696e 	vsubcs.f16	s13, s8, s29	; <UNPREDICTABLE>
 4c0:	6e690063 	cdpvs	0, 6, cr0, cr9, cr3, {3}
 4c4:	745f7469 	ldrbvc	r7, [pc], #-1129	; 4cc <startup-0x1ffffb34>
 4c8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
 4cc:	47500036 	smmlarmi	r0, r6, r0, r0
 4d0:	454d4f45 	strbmi	r4, [sp, #-3909]	; 0xfffff0bb
 4d4:	00595254 	subseq	r5, r9, r4, asr r2
 4d8:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
 4dc:	7070615f 	rsbsvc	r6, r0, pc, asr r1
 4e0:	7300656c 	movwvc	r6, #1388	; 0x56c
 4e4:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 4e8:	7a69735f 	bvc	1a5d26c <startup-0x1e5a2d94>
 4ec:	72640065 	rsbvc	r0, r4, #101	; 0x65
 4f0:	6f5f7761 	svcvs	0x005f7761
 4f4:	63656a62 	cmnvs	r5, #401408	; 0x62000
 4f8:	6f6d0074 	svcvs	0x006d0074
 4fc:	64006576 	strvs	r6, [r0], #-1398	; 0xfffffa8a
 500:	00787269 	rsbseq	r7, r8, r9, ror #4
 504:	79726964 	ldmdbvc	r2!, {r2, r5, r6, r8, fp, sp, lr}^
 508:	6a626f00 	bvs	189c110 <startup-0x1e763ef0>
 50c:	5f746365 	svcpl	0x00746365
 510:	6c6c6f63 	stclvs	15, cr6, [ip], #-396	; 0xfffffe74
 514:	73656469 	cmnvc	r5, #1761607680	; 0x69000000
 518:	6f637300 	svcvs	0x00637300
 51c:	50006572 	andpl	r6, r0, r2, ror r5
 520:	544e494f 	strbpl	r4, [lr], #-2383	; 0xfffff6b1
 524:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 528:	004f656c 	subeq	r6, pc, ip, ror #10
 52c:	5f746573 	svcpl	0x00746573
 530:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
 534:	6f700064 	svcvs	0x00700064
 538:	70007873 	andvc	r7, r0, r3, ror r8
 53c:	0079736f 	rsbseq	r7, r9, pc, ror #6
 540:	65786970 	ldrbvs	r6, [r8, #-2416]!	; 0xfffff690
 544:	766f5f6c 	strbtvc	r5, [pc], -ip, ror #30
 548:	616c7265 	cmnvs	ip, r5, ror #4
 54c:	666f0070 			; <UNDEFINED> instruction: 0x666f0070
 550:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
 554:	6f007831 	svcvs	0x00007831
 558:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
 55c:	00793174 	rsbseq	r3, r9, r4, ror r1
 560:	706d756e 	rsbvc	r7, sp, lr, ror #10
 564:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 568:	666f0073 			; <UNDEFINED> instruction: 0x666f0073
 56c:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
 570:	67007832 	smladxvs	r0, r2, r8, r7
 574:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 578:	705f6369 	subsvc	r6, pc, r9, ror #6
 57c:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 580:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
 584:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 588:	6f6d006e 	svcvs	0x006d006e
 58c:	735f6576 	cmpvc	pc, #494927872	; 0x1d800000
 590:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 594:	7a697300 	bvc	1a5d19c <startup-0x1e5a2e64>
 598:	73007865 	movwvc	r7, #2149	; 0x865
 59c:	79657a69 	stmdbvc	r5!, {r0, r3, r5, r6, r9, fp, ip, sp, lr}^
 5a0:	61747300 	cmnvs	r4, r0, lsl #6
 5a4:	70757472 	rsbsvc	r7, r5, r2, ror r4
 5a8:	61726400 	cmnvs	r2, r0, lsl #8
 5ac:	3a430077 	bcc	10c0790 <startup-0x1ef3f870>
 5b0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 5b4:	452f7372 	strmi	r7, [pc, #-882]!	; 24a <startup-0x1ffffdb6>
 5b8:	7361696c 	cmnvc	r1, #108, 18	; 0x1b0000
 5bc:	656e4f2f 	strbvs	r4, [lr, #-3887]!	; 0xfffff0d1
 5c0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
 5c4:	202d2065 	eorcs	r2, sp, r5, rrx
 5c8:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 5cc:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 5d0:	75745320 	ldrbvc	r5, [r4, #-800]!	; 0xfffffce0
 5d4:	746e6564 	strbtvc	r6, [lr], #-1380	; 0xfffffa9c
 5d8:	6f442f73 	svcvs	0x00442f73
 5dc:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 5e0:	2f73746e 	svccs	0x0073746e
 5e4:	64757453 	ldrbtvs	r7, [r5], #-1107	; 0xfffffbad
 5e8:	2f736569 	svccs	0x00736569
 5ec:	676f7250 			; <UNDEFINED> instruction: 0x676f7250
 5f0:	696d6172 	stmdbvs	sp!, {r1, r4, r5, r6, r8, sp, lr}^
 5f4:	6d2f676e 	stcvs	7, cr6, [pc, #-440]!	; 444 <startup-0x1ffffbbc>
 5f8:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
 5fc:	6b726f57 	blvs	1c9c360 <startup-0x1e363ca0>
 600:	63617053 	cmnvs	r1, #83	; 0x53
 604:	57632f65 	strbpl	r2, [r3, -r5, ror #30]!
 608:	536b726f 	cmnpl	fp, #-268435450	; 0xf0000006
 60c:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
 610:	616e732f 	cmnvs	lr, pc, lsr #6
 614:	672f656b 	strvs	r6, [pc, -fp, ror #10]!
 618:	2e656d61 	cdpcs	13, 6, cr6, cr5, cr1, {3}
 61c:	61670063 	cmnvs	r7, r3, rrx
 620:	6f5f656d 	svcvs	0x005f656d
 624:	00726576 	rsbseq	r6, r2, r6, ror r5
 628:	70617267 	rsbvc	r7, r1, r7, ror #4
 62c:	5f636968 	svcpl	0x00636968
 630:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 634:	7a696c61 	bvc	1a5b7c0 <startup-0x1e5a4840>
 638:	6e730065 	cdpvs	0, 7, cr0, cr3, cr5, {3}
 63c:	5f656b61 	svcpl	0x00656b61
 640:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 644:	616e7300 	cmnvs	lr, r0, lsl #6
 648:	745f656b 	ldrbvc	r6, [pc], #-1387	; 650 <startup-0x1ffff9b0>
 64c:	006c6961 	rsbeq	r6, ip, r1, ror #18
 650:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
 654:	79327465 	ldmdbvc	r2!, {r0, r2, r5, r6, sl, ip, sp, lr}
 658:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 65c:	675f656c 	ldrbvs	r6, [pc, -ip, ror #10]
 660:	656d6f65 	strbvs	r6, [sp, #-3941]!	; 0xfffff09b
 664:	00797274 	rsbseq	r7, r9, r4, ror r2
 668:	61656c63 	cmnvs	r5, r3, ror #24
 66c:	626f5f72 	rsbvs	r5, pc, #456	; 0x1c8
 670:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 674:	616e7300 	cmnvs	lr, r0, lsl #6
 678:	675f656b 	ldrbvs	r6, [pc, -fp, ror #10]
 67c:	656d6f65 	strbvs	r6, [sp, #-3941]!	; 0xfffff09b
 680:	00797274 	rsbseq	r7, r9, r4, ror r2
 684:	6a624f74 	bvs	189445c <startup-0x1e76bba4>
 688:	616e7300 	cmnvs	lr, r0, lsl #6
 68c:	004f656b 	subeq	r6, pc, fp, ror #10
 690:	706d756e 	rsbvc	r7, sp, lr, ror #10
 694:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
 698:	72670073 	rsbvc	r0, r7, #115	; 0x73
 69c:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 6a0:	69705f63 	ldmdbvs	r0!, {r0, r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 6a4:	5f6c6578 	svcpl	0x006c6578
 6a8:	61656c63 	cmnvs	r5, r3, ror #24
 6ac:	4f500072 	svcmi	0x00500072
 6b0:	43454a42 	movtmi	r4, #23106	; 0x5a42
 6b4:	65730054 	ldrbvs	r0, [r3, #-84]!	; 0xffffffac
 6b8:	626f5f74 	rsbvs	r5, pc, #116, 30	; 0x1d0
 6bc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 6c0:	6570735f 	ldrbvs	r7, [r0, #-863]!	; 0xfffffca1
 6c4:	67006465 	strvs	r6, [r0, -r5, ror #8]
 6c8:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 6cc:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 6d0:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 6d4:	7263735f 	rsbvc	r7, r3, #2080374785	; 0x7c000001
 6d8:	006e6565 	rsbeq	r6, lr, r5, ror #10

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000001c 	andeq	r0, r0, ip, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	20000010 	andcs	r0, r0, r0, lsl r0
  1c:	00000038 	andeq	r0, r0, r8, lsr r0
  20:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  24:	41018e02 	tstmi	r1, r2, lsl #28
  28:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  2c:	00000007 	andeq	r0, r0, r7
  30:	0000001c 	andeq	r0, r0, ip, lsl r0
  34:	00000000 	andeq	r0, r0, r0
  38:	20000048 	andcs	r0, r0, r8, asr #32
  3c:	00000048 	andeq	r0, r0, r8, asr #32
  40:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  44:	41018e02 	tstmi	r1, r2, lsl #28
  48:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  4c:	00000007 	andeq	r0, r0, r7
  50:	0000001c 	andeq	r0, r0, ip, lsl r0
  54:	00000000 	andeq	r0, r0, r0
  58:	20000090 	mulcs	r0, r0, r0
  5c:	00000030 	andeq	r0, r0, r0, lsr r0
  60:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  64:	41018e02 	tstmi	r1, r2, lsl #28
  68:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  6c:	00000007 	andeq	r0, r0, r7
  70:	0000001c 	andeq	r0, r0, ip, lsl r0
  74:	00000000 	andeq	r0, r0, r0
  78:	200000c0 	andcs	r0, r0, r0, asr #1
  7c:	0000002c 	andeq	r0, r0, ip, lsr #32
  80:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  84:	41018e02 	tstmi	r1, r2, lsl #28
  88:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  8c:	00000007 	andeq	r0, r0, r7
  90:	0000001c 	andeq	r0, r0, ip, lsl r0
  94:	00000000 	andeq	r0, r0, r0
  98:	200000ec 	andcs	r0, r0, ip, ror #1
  9c:	0000002a 	andeq	r0, r0, sl, lsr #32
  a0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  a4:	41018e02 	tstmi	r1, r2, lsl #28
  a8:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  ac:	00000007 	andeq	r0, r0, r7
  b0:	0000001c 	andeq	r0, r0, ip, lsl r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	20000116 	andcs	r0, r0, r6, lsl r1
  bc:	0000002a 	andeq	r0, r0, sl, lsr #32
  c0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  c4:	41018e02 	tstmi	r1, r2, lsl #28
  c8:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  cc:	00000007 	andeq	r0, r0, r7
  d0:	0000001c 	andeq	r0, r0, ip, lsl r0
  d4:	00000000 	andeq	r0, r0, r0
  d8:	20000140 	andcs	r0, r0, r0, asr #2
  dc:	00000040 	andeq	r0, r0, r0, asr #32
  e0:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  e4:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  e8:	180e4101 	stmdane	lr, {r0, r8, lr}
  ec:	00070d41 	andeq	r0, r7, r1, asr #26
  f0:	0000001c 	andeq	r0, r0, ip, lsl r0
  f4:	00000000 	andeq	r0, r0, r0
  f8:	20000180 	andcs	r0, r0, r0, lsl #3
  fc:	00000048 	andeq	r0, r0, r8, asr #32
 100:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 104:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 108:	180e4101 	stmdane	lr, {r0, r8, lr}
 10c:	00070d41 	andeq	r0, r7, r1, asr #26
 110:	0000001c 	andeq	r0, r0, ip, lsl r0
 114:	00000000 	andeq	r0, r0, r0
 118:	200001c8 	andcs	r0, r0, r8, asr #3
 11c:	00000036 	andeq	r0, r0, r6, lsr r0
 120:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 124:	41018e02 	tstmi	r1, r2, lsl #28
 128:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 12c:	00000007 	andeq	r0, r0, r7
 130:	00000018 	andeq	r0, r0, r8, lsl r0
 134:	00000000 	andeq	r0, r0, r0
 138:	200001fe 	strdcs	r0, [r0], -lr
 13c:	0000003a 	andeq	r0, r0, sl, lsr r0
 140:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 144:	41018e02 	tstmi	r1, r2, lsl #28
 148:	0000070d 	andeq	r0, r0, sp, lsl #14
 14c:	0000001c 	andeq	r0, r0, ip, lsl r0
 150:	00000000 	andeq	r0, r0, r0
 154:	20000238 	andcs	r0, r0, r8, lsr r2
 158:	0000003c 	andeq	r0, r0, ip, lsr r0
 15c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 160:	41018e02 	tstmi	r1, r2, lsl #28
 164:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 168:	00000007 	andeq	r0, r0, r7
 16c:	0000001c 	andeq	r0, r0, ip, lsl r0
 170:	00000000 	andeq	r0, r0, r0
 174:	20000274 	andcs	r0, r0, r4, ror r2
 178:	0000004c 	andeq	r0, r0, ip, asr #32
 17c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 180:	41018e02 	tstmi	r1, r2, lsl #28
 184:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 188:	00000007 	andeq	r0, r0, r7
 18c:	0000001c 	andeq	r0, r0, ip, lsl r0
 190:	00000000 	andeq	r0, r0, r0
 194:	200002c0 	andcs	r0, r0, r0, asr #5
 198:	00000060 	andeq	r0, r0, r0, rrx
 19c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1a0:	41018e02 	tstmi	r1, r2, lsl #28
 1a4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 1a8:	00000007 	andeq	r0, r0, r7
 1ac:	0000000c 	andeq	r0, r0, ip
 1b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1b4:	7c020001 	stcvc	0, cr0, [r2], {1}
 1b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1bc:	00000018 	andeq	r0, r0, r8, lsl r0
 1c0:	000001ac 	andeq	r0, r0, ip, lsr #3
 1c4:	20000320 	andcs	r0, r0, r0, lsr #6
 1c8:	00000044 	andeq	r0, r0, r4, asr #32
 1cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1d0:	41018e02 	tstmi	r1, r2, lsl #28
 1d4:	0000070d 	andeq	r0, r0, sp, lsl #14
 1d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1dc:	000001ac 	andeq	r0, r0, ip, lsr #3
 1e0:	20000364 	andcs	r0, r0, r4, ror #6
 1e4:	0000004c 	andeq	r0, r0, ip, asr #32
 1e8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1ec:	41018e02 	tstmi	r1, r2, lsl #28
 1f0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 1f4:	00000007 	andeq	r0, r0, r7
 1f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1fc:	000001ac 	andeq	r0, r0, ip, lsr #3
 200:	200003b0 			; <UNDEFINED> instruction: 0x200003b0
 204:	00000026 	andeq	r0, r0, r6, lsr #32
 208:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 20c:	41018e02 	tstmi	r1, r2, lsl #28
 210:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 214:	00000007 	andeq	r0, r0, r7
 218:	0000001c 	andeq	r0, r0, ip, lsl r0
 21c:	000001ac 	andeq	r0, r0, ip, lsr #3
 220:	200003d6 	ldrdcs	r0, [r0], -r6
 224:	0000004e 	andeq	r0, r0, lr, asr #32
 228:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 22c:	41018e02 	tstmi	r1, r2, lsl #28
 230:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 234:	00000007 	andeq	r0, r0, r7
 238:	0000000c 	andeq	r0, r0, ip
 23c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 240:	7c020001 	stcvc	0, cr0, [r2], {1}
 244:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 248:	0000001c 	andeq	r0, r0, ip, lsl r0
 24c:	00000238 	andeq	r0, r0, r8, lsr r2
 250:	20000424 	andcs	r0, r0, r4, lsr #8
 254:	00000064 	andeq	r0, r0, r4, rrx
 258:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 25c:	41018e02 	tstmi	r1, r2, lsl #28
 260:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 264:	00000007 	andeq	r0, r0, r7
 268:	0000001c 	andeq	r0, r0, ip, lsl r0
 26c:	00000238 	andeq	r0, r0, r8, lsr r2
 270:	20000488 	andcs	r0, r0, r8, lsl #9
 274:	00000054 	andeq	r0, r0, r4, asr r0
 278:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 27c:	41018e02 	tstmi	r1, r2, lsl #28
 280:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 284:	00000007 	andeq	r0, r0, r7
 288:	0000001c 	andeq	r0, r0, ip, lsl r0
 28c:	00000238 	andeq	r0, r0, r8, lsr r2
 290:	200004dc 	ldrdcs	r0, [r0], -ip
 294:	00000068 	andeq	r0, r0, r8, rrx
 298:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 29c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 2a0:	280e4101 	stmdacs	lr, {r0, r8, lr}
 2a4:	00070d41 	andeq	r0, r7, r1, asr #26
 2a8:	0000000c 	andeq	r0, r0, ip
 2ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 2b0:	7c020001 	stcvc	0, cr0, [r2], {1}
 2b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2b8:	00000018 	andeq	r0, r0, r8, lsl r0
 2bc:	000002a8 	andeq	r0, r0, r8, lsr #5
 2c0:	20000544 	andcs	r0, r0, r4, asr #10
 2c4:	0000002c 	andeq	r0, r0, ip, lsr #32
 2c8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2cc:	41018e02 	tstmi	r1, r2, lsl #28
 2d0:	0000070d 	andeq	r0, r0, sp, lsl #14
 2d4:	00000018 	andeq	r0, r0, r8, lsl r0
 2d8:	000002a8 	andeq	r0, r0, r8, lsr #5
 2dc:	20000570 	andcs	r0, r0, r0, ror r5
 2e0:	00000028 	andeq	r0, r0, r8, lsr #32
 2e4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2e8:	41018e02 	tstmi	r1, r2, lsl #28
 2ec:	0000070d 	andeq	r0, r0, sp, lsl #14
 2f0:	00000018 	andeq	r0, r0, r8, lsl r0
 2f4:	000002a8 	andeq	r0, r0, r8, lsr #5
 2f8:	20000598 	mulcs	r0, r8, r5
 2fc:	0000003c 	andeq	r0, r0, ip, lsr r0
 300:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 304:	41018e02 	tstmi	r1, r2, lsl #28
 308:	0000070d 	andeq	r0, r0, sp, lsl #14
 30c:	00000018 	andeq	r0, r0, r8, lsl r0
 310:	000002a8 	andeq	r0, r0, r8, lsr #5
 314:	200005d4 	ldrdcs	r0, [r0], -r4
 318:	00000016 	andeq	r0, r0, r6, lsl r0
 31c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 320:	41018e02 	tstmi	r1, r2, lsl #28
 324:	0000070d 	andeq	r0, r0, sp, lsl #14
 328:	0000000c 	andeq	r0, r0, ip
 32c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 330:	7c020001 	stcvc	0, cr0, [r2], {1}
 334:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 338:	0000000c 	andeq	r0, r0, ip
 33c:	00000328 	andeq	r0, r0, r8, lsr #6
 340:	20000000 	andcs	r0, r0, r0
 344:	0000000c 	andeq	r0, r0, ip
 348:	0000000c 	andeq	r0, r0, ip
 34c:	00000328 	andeq	r0, r0, r8, lsr #6
 350:	200005ec 	andcs	r0, r0, ip, ror #11
 354:	00000006 	andeq	r0, r0, r6
 358:	0000000c 	andeq	r0, r0, ip
 35c:	00000328 	andeq	r0, r0, r8, lsr #6
 360:	200005f2 	strdcs	r0, [r0], -r2
 364:	00000006 	andeq	r0, r0, r6
 368:	0000000c 	andeq	r0, r0, ip
 36c:	00000328 	andeq	r0, r0, r8, lsr #6
 370:	200005f8 	strdcs	r0, [r0], -r8
 374:	00000006 	andeq	r0, r0, r6
 378:	0000000c 	andeq	r0, r0, ip
 37c:	00000328 	andeq	r0, r0, r8, lsr #6
 380:	200005fe 	strdcs	r0, [r0], -lr
 384:	00000006 	andeq	r0, r0, r6
 388:	0000001c 	andeq	r0, r0, ip, lsl r0
 38c:	00000328 	andeq	r0, r0, r8, lsr #6
 390:	20000604 	andcs	r0, r0, r4, lsl #12
 394:	00000082 	andeq	r0, r0, r2, lsl #1
 398:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 39c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 3a0:	280e4101 	stmdacs	lr, {r0, r8, lr}
 3a4:	00070d41 	andeq	r0, r7, r1, asr #26
 3a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3ac:	00000328 	andeq	r0, r0, r8, lsr #6
 3b0:	20000686 	andcs	r0, r0, r6, lsl #13
 3b4:	00000082 	andeq	r0, r0, r2, lsl #1
 3b8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 3bc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 3c0:	280e4101 	stmdacs	lr, {r0, r8, lr}
 3c4:	00070d41 	andeq	r0, r7, r1, asr #26
 3c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3cc:	00000328 	andeq	r0, r0, r8, lsr #6
 3d0:	20000708 	andcs	r0, r0, r8, lsl #14
 3d4:	00000020 	andeq	r0, r0, r0, lsr #32
 3d8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 3dc:	41018e02 	tstmi	r1, r2, lsl #28
 3e0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 3e4:	00000007 	andeq	r0, r0, r7
 3e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3ec:	00000328 	andeq	r0, r0, r8, lsr #6
 3f0:	20000728 	andcs	r0, r0, r8, lsr #14
 3f4:	00000042 	andeq	r0, r0, r2, asr #32
 3f8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 3fc:	41018e02 	tstmi	r1, r2, lsl #28
 400:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 404:	00000007 	andeq	r0, r0, r7
 408:	0000001c 	andeq	r0, r0, ip, lsl r0
 40c:	00000328 	andeq	r0, r0, r8, lsr #6
 410:	2000076a 	andcs	r0, r0, sl, ror #14
 414:	0000003c 	andeq	r0, r0, ip, lsr r0
 418:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 41c:	41018e02 	tstmi	r1, r2, lsl #28
 420:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 424:	00000007 	andeq	r0, r0, r7
 428:	0000001c 	andeq	r0, r0, ip, lsl r0
 42c:	00000328 	andeq	r0, r0, r8, lsr #6
 430:	200007a6 	andcs	r0, r0, r6, lsr #15
 434:	000000c0 	andeq	r0, r0, r0, asr #1
 438:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 43c:	41018e02 	tstmi	r1, r2, lsl #28
 440:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
 444:	00000007 	andeq	r0, r0, r7
 448:	0000001c 	andeq	r0, r0, ip, lsl r0
 44c:	00000328 	andeq	r0, r0, r8, lsr #6
 450:	20000866 	andcs	r0, r0, r6, ror #16
 454:	00000064 	andeq	r0, r0, r4, rrx
 458:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 45c:	41018e02 	tstmi	r1, r2, lsl #28
 460:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 464:	00000007 	andeq	r0, r0, r7
 468:	0000001c 	andeq	r0, r0, ip, lsl r0
 46c:	00000328 	andeq	r0, r0, r8, lsr #6
 470:	200008ca 	andcs	r0, r0, sl, asr #17
 474:	00000036 	andeq	r0, r0, r6, lsr r0
 478:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 47c:	41018e02 	tstmi	r1, r2, lsl #28
 480:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 484:	00000007 	andeq	r0, r0, r7
 488:	0000001c 	andeq	r0, r0, ip, lsl r0
 48c:	00000328 	andeq	r0, r0, r8, lsr #6
 490:	20000900 	andcs	r0, r0, r0, lsl #18
 494:	000000fc 	strdeq	r0, [r0], -ip
 498:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 49c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 4a0:	280e4101 	stmdacs	lr, {r0, r8, lr}
 4a4:	00070d41 	andeq	r0, r7, r1, asr #26
 4a8:	0000000c 	andeq	r0, r0, ip
 4ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 4b0:	7c010001 	stcvc	0, cr0, [r1], {1}
 4b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 4b8:	0000000c 	andeq	r0, r0, ip
 4bc:	000004a8 	andeq	r0, r0, r8, lsr #9
 4c0:	200009fd 	strdcs	r0, [r0], -sp
 4c4:	0000010a 	andeq	r0, r0, sl, lsl #2
 4c8:	0000000c 	andeq	r0, r0, ip
 4cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 4d0:	7c010001 	stcvc	0, cr0, [r1], {1}
 4d4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 4d8:	0000000c 	andeq	r0, r0, ip
 4dc:	000004c8 	andeq	r0, r0, r8, asr #9
 4e0:	20000b11 	andcs	r0, r0, r1, lsl fp
 4e4:	000001cc 	andeq	r0, r0, ip, asr #3

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	200005ec 	andcs	r0, r0, ip, ror #11
   4:	200009fc 	strdcs	r0, [r0], -ip
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...
