
Debug/snake:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 * STARTUP
 */
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 fc38 	bl	20000878 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <delay_250ns>:
#include "declarations.h"
/*
 * SYS_TICK
 */
void delay_250ns( void )
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
/* SystemCoreClock = 168000000 */
	*STK_CTRL = 0;
20000014:	4b0c      	ldr	r3, [pc, #48]	; (20000048 <delay_250ns+0x38>)
20000016:	2200      	movs	r2, #0
20000018:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/4) -1 );
2000001a:	4b0c      	ldr	r3, [pc, #48]	; (2000004c <delay_250ns+0x3c>)
2000001c:	2229      	movs	r2, #41	; 0x29
2000001e:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
20000020:	4b0b      	ldr	r3, [pc, #44]	; (20000050 <delay_250ns+0x40>)
20000022:	2200      	movs	r2, #0
20000024:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
20000026:	4b08      	ldr	r3, [pc, #32]	; (20000048 <delay_250ns+0x38>)
20000028:	2205      	movs	r2, #5
2000002a:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000 )== 0 );
2000002c:	46c0      	nop			; (mov r8, r8)
2000002e:	4b06      	ldr	r3, [pc, #24]	; (20000048 <delay_250ns+0x38>)
20000030:	681a      	ldr	r2, [r3, #0]
20000032:	2380      	movs	r3, #128	; 0x80
20000034:	025b      	lsls	r3, r3, #9
20000036:	4013      	ands	r3, r2
20000038:	d0f9      	beq.n	2000002e <delay_250ns+0x1e>
	*STK_CTRL = 0;
2000003a:	4b03      	ldr	r3, [pc, #12]	; (20000048 <delay_250ns+0x38>)
2000003c:	2200      	movs	r2, #0
2000003e:	601a      	str	r2, [r3, #0]
}
20000040:	46c0      	nop			; (mov r8, r8)
20000042:	46bd      	mov	sp, r7
20000044:	bd80      	pop	{r7, pc}
20000046:	46c0      	nop			; (mov r8, r8)
20000048:	e000e010 	and	lr, r0, r0, lsl r0
2000004c:	e000e014 	and	lr, r0, r4, lsl r0
20000050:	e000e018 	and	lr, r0, r8, lsl r0

20000054 <delay_micro>:

void delay_micro(unsigned int us)
{
20000054:	b580      	push	{r7, lr}
20000056:	b084      	sub	sp, #16
20000058:	af00      	add	r7, sp, #0
2000005a:	6078      	str	r0, [r7, #4]
#ifdef SIMULATOR
	us = us/1000;
2000005c:	687b      	ldr	r3, [r7, #4]
2000005e:	22fa      	movs	r2, #250	; 0xfa
20000060:	0091      	lsls	r1, r2, #2
20000062:	0018      	movs	r0, r3
20000064:	f000 fe68 	bl	20000d38 <__udivsi3>
20000068:	0003      	movs	r3, r0
2000006a:	607b      	str	r3, [r7, #4]
	us++;
2000006c:	687b      	ldr	r3, [r7, #4]
2000006e:	3301      	adds	r3, #1
20000070:	607b      	str	r3, [r7, #4]
#endif
	while( us > 0 )
20000072:	e00d      	b.n	20000090 <delay_micro+0x3c>
	{
		for(int i = 0; i<4; i++) delay_250ns();
20000074:	2300      	movs	r3, #0
20000076:	60fb      	str	r3, [r7, #12]
20000078:	e004      	b.n	20000084 <delay_micro+0x30>
2000007a:	f7ff ffc9 	bl	20000010 <delay_250ns>
2000007e:	68fb      	ldr	r3, [r7, #12]
20000080:	3301      	adds	r3, #1
20000082:	60fb      	str	r3, [r7, #12]
20000084:	68fb      	ldr	r3, [r7, #12]
20000086:	2b03      	cmp	r3, #3
20000088:	ddf7      	ble.n	2000007a <delay_micro+0x26>
		us--;
2000008a:	687b      	ldr	r3, [r7, #4]
2000008c:	3b01      	subs	r3, #1
2000008e:	607b      	str	r3, [r7, #4]
	while( us > 0 )
20000090:	687b      	ldr	r3, [r7, #4]
20000092:	2b00      	cmp	r3, #0
20000094:	d1ee      	bne.n	20000074 <delay_micro+0x20>
	}
}
20000096:	46c0      	nop			; (mov r8, r8)
20000098:	46c0      	nop			; (mov r8, r8)
2000009a:	46bd      	mov	sp, r7
2000009c:	b004      	add	sp, #16
2000009e:	bd80      	pop	{r7, pc}

200000a0 <delay_milli>:

void delay_milli(unsigned int ms) {
200000a0:	b580      	push	{r7, lr}
200000a2:	b082      	sub	sp, #8
200000a4:	af00      	add	r7, sp, #0
200000a6:	6078      	str	r0, [r7, #4]
	while( ms > 0 )
200000a8:	e005      	b.n	200000b6 <delay_milli+0x16>
	{
		delay_micro(100);
200000aa:	2064      	movs	r0, #100	; 0x64
200000ac:	f7ff ffd2 	bl	20000054 <delay_micro>
		ms--;
200000b0:	687b      	ldr	r3, [r7, #4]
200000b2:	3b01      	subs	r3, #1
200000b4:	607b      	str	r3, [r7, #4]
	while( ms > 0 )
200000b6:	687b      	ldr	r3, [r7, #4]
200000b8:	2b00      	cmp	r3, #0
200000ba:	d1f6      	bne.n	200000aa <delay_milli+0xa>
	}
}
200000bc:	46c0      	nop			; (mov r8, r8)
200000be:	46c0      	nop			; (mov r8, r8)
200000c0:	46bd      	mov	sp, r7
200000c2:	b002      	add	sp, #8
200000c4:	bd80      	pop	{r7, pc}

200000c6 <random_number>:

/*
 * TIM6 for randomizing number
 */
 int random_number(int min, int max)
 {
200000c6:	b580      	push	{r7, lr}
200000c8:	b084      	sub	sp, #16
200000ca:	af00      	add	r7, sp, #0
200000cc:	6078      	str	r0, [r7, #4]
200000ce:	6039      	str	r1, [r7, #0]
	short random = (char) *TIM6_CNT;
200000d0:	4b0f      	ldr	r3, [pc, #60]	; (20000110 <random_number+0x4a>)
200000d2:	881b      	ldrh	r3, [r3, #0]
200000d4:	b29b      	uxth	r3, r3
200000d6:	b2da      	uxtb	r2, r3
200000d8:	210e      	movs	r1, #14
200000da:	187b      	adds	r3, r7, r1
200000dc:	801a      	strh	r2, [r3, #0]
	unsigned char c = random % (max-min+1) + min; 
200000de:	187b      	adds	r3, r7, r1
200000e0:	2000      	movs	r0, #0
200000e2:	5e18      	ldrsh	r0, [r3, r0]
200000e4:	683a      	ldr	r2, [r7, #0]
200000e6:	687b      	ldr	r3, [r7, #4]
200000e8:	1ad3      	subs	r3, r2, r3
200000ea:	3301      	adds	r3, #1
200000ec:	0019      	movs	r1, r3
200000ee:	f000 ff93 	bl	20001018 <__aeabi_idivmod>
200000f2:	000b      	movs	r3, r1
200000f4:	b2d9      	uxtb	r1, r3
200000f6:	687b      	ldr	r3, [r7, #4]
200000f8:	b2da      	uxtb	r2, r3
200000fa:	200d      	movs	r0, #13
200000fc:	183b      	adds	r3, r7, r0
200000fe:	188a      	adds	r2, r1, r2
20000100:	701a      	strb	r2, [r3, #0]
	return c;
20000102:	183b      	adds	r3, r7, r0
20000104:	781b      	ldrb	r3, [r3, #0]
 }
20000106:	0018      	movs	r0, r3
20000108:	46bd      	mov	sp, r7
2000010a:	b004      	add	sp, #16
2000010c:	bd80      	pop	{r7, pc}
2000010e:	46c0      	nop			; (mov r8, r8)
20000110:	40001024 	andmi	r1, r0, r4, lsr #32

20000114 <itoa>:
/**
 * C++ version 0.4 char* style "itoa":
 * Written by Luk√°s Chmela
 * Released under GPLv3.
 */
char* itoa(int value, char* result, int base) {
20000114:	b580      	push	{r7, lr}
20000116:	b088      	sub	sp, #32
20000118:	af00      	add	r7, sp, #0
2000011a:	60f8      	str	r0, [r7, #12]
2000011c:	60b9      	str	r1, [r7, #8]
2000011e:	607a      	str	r2, [r7, #4]
	// converts int to char array
    // check that the base if valid
    if (base < 2 || base > 36) { *result = '\0'; return result; }
20000120:	687b      	ldr	r3, [r7, #4]
20000122:	2b01      	cmp	r3, #1
20000124:	dd02      	ble.n	2000012c <itoa+0x18>
20000126:	687b      	ldr	r3, [r7, #4]
20000128:	2b24      	cmp	r3, #36	; 0x24
2000012a:	dd04      	ble.n	20000136 <itoa+0x22>
2000012c:	68bb      	ldr	r3, [r7, #8]
2000012e:	2200      	movs	r2, #0
20000130:	701a      	strb	r2, [r3, #0]
20000132:	68bb      	ldr	r3, [r7, #8]
20000134:	e03f      	b.n	200001b6 <itoa+0xa2>

    char* ptr = result, *ptr1 = result, tmp_char;
20000136:	68bb      	ldr	r3, [r7, #8]
20000138:	61fb      	str	r3, [r7, #28]
2000013a:	68bb      	ldr	r3, [r7, #8]
2000013c:	61bb      	str	r3, [r7, #24]
    int tmp_value;

    do {
        tmp_value = value;
2000013e:	68fb      	ldr	r3, [r7, #12]
20000140:	617b      	str	r3, [r7, #20]
        value /= base;
20000142:	6879      	ldr	r1, [r7, #4]
20000144:	68f8      	ldr	r0, [r7, #12]
20000146:	f000 fe81 	bl	20000e4c <__divsi3>
2000014a:	0003      	movs	r3, r0
2000014c:	60fb      	str	r3, [r7, #12]
        *ptr++ = "zyxwvutsrqponmlkjihgfedcba9876543210123456789abcdefghijklmnopqrstuvwxyz" [35 + (tmp_value - value * base)];
2000014e:	68fb      	ldr	r3, [r7, #12]
20000150:	687a      	ldr	r2, [r7, #4]
20000152:	4353      	muls	r3, r2
20000154:	697a      	ldr	r2, [r7, #20]
20000156:	1ad3      	subs	r3, r2, r3
20000158:	3323      	adds	r3, #35	; 0x23
2000015a:	001a      	movs	r2, r3
2000015c:	69fb      	ldr	r3, [r7, #28]
2000015e:	1c59      	adds	r1, r3, #1
20000160:	61f9      	str	r1, [r7, #28]
20000162:	4917      	ldr	r1, [pc, #92]	; (200001c0 <itoa+0xac>)
20000164:	5c8a      	ldrb	r2, [r1, r2]
20000166:	701a      	strb	r2, [r3, #0]
    } while ( value );
20000168:	68fb      	ldr	r3, [r7, #12]
2000016a:	2b00      	cmp	r3, #0
2000016c:	d1e7      	bne.n	2000013e <itoa+0x2a>

    // Apply negative sign
    if (tmp_value < 0) *ptr++ = '-';
2000016e:	697b      	ldr	r3, [r7, #20]
20000170:	2b00      	cmp	r3, #0
20000172:	da04      	bge.n	2000017e <itoa+0x6a>
20000174:	69fb      	ldr	r3, [r7, #28]
20000176:	1c5a      	adds	r2, r3, #1
20000178:	61fa      	str	r2, [r7, #28]
2000017a:	222d      	movs	r2, #45	; 0x2d
2000017c:	701a      	strb	r2, [r3, #0]
    *ptr-- = '\0';
2000017e:	69fb      	ldr	r3, [r7, #28]
20000180:	1e5a      	subs	r2, r3, #1
20000182:	61fa      	str	r2, [r7, #28]
20000184:	2200      	movs	r2, #0
20000186:	701a      	strb	r2, [r3, #0]
    while(ptr1 < ptr) {
20000188:	e010      	b.n	200001ac <itoa+0x98>
        tmp_char = *ptr;
2000018a:	2113      	movs	r1, #19
2000018c:	187b      	adds	r3, r7, r1
2000018e:	69fa      	ldr	r2, [r7, #28]
20000190:	7812      	ldrb	r2, [r2, #0]
20000192:	701a      	strb	r2, [r3, #0]
        *ptr--= *ptr1;
20000194:	69fb      	ldr	r3, [r7, #28]
20000196:	1e5a      	subs	r2, r3, #1
20000198:	61fa      	str	r2, [r7, #28]
2000019a:	69ba      	ldr	r2, [r7, #24]
2000019c:	7812      	ldrb	r2, [r2, #0]
2000019e:	701a      	strb	r2, [r3, #0]
        *ptr1++ = tmp_char;
200001a0:	69bb      	ldr	r3, [r7, #24]
200001a2:	1c5a      	adds	r2, r3, #1
200001a4:	61ba      	str	r2, [r7, #24]
200001a6:	187a      	adds	r2, r7, r1
200001a8:	7812      	ldrb	r2, [r2, #0]
200001aa:	701a      	strb	r2, [r3, #0]
    while(ptr1 < ptr) {
200001ac:	69ba      	ldr	r2, [r7, #24]
200001ae:	69fb      	ldr	r3, [r7, #28]
200001b0:	429a      	cmp	r2, r3
200001b2:	d3ea      	bcc.n	2000018a <itoa+0x76>
    }
    return result;
200001b4:	68bb      	ldr	r3, [r7, #8]
}
200001b6:	0018      	movs	r0, r3
200001b8:	46bd      	mov	sp, r7
200001ba:	b008      	add	sp, #32
200001bc:	bd80      	pop	{r7, pc}
200001be:	46c0      	nop			; (mov r8, r8)
200001c0:	2000a094 	mulcs	r0, r4, r0

200001c4 <ascii_ctrl_bit_set>:

void ascii_ctrl_bit_set ( char x )
{
200001c4:	b580      	push	{r7, lr}
200001c6:	b084      	sub	sp, #16
200001c8:	af00      	add	r7, sp, #0
200001ca:	0002      	movs	r2, r0
200001cc:	1dfb      	adds	r3, r7, #7
200001ce:	701a      	strb	r2, [r3, #0]
	char c;
	c = GPIO_E.odrLow;
200001d0:	4a09      	ldr	r2, [pc, #36]	; (200001f8 <ascii_ctrl_bit_set+0x34>)
200001d2:	210f      	movs	r1, #15
200001d4:	187b      	adds	r3, r7, r1
200001d6:	7d12      	ldrb	r2, [r2, #20]
200001d8:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrLow = B_SELECT | x | c;
200001da:	1dfa      	adds	r2, r7, #7
200001dc:	187b      	adds	r3, r7, r1
200001de:	7812      	ldrb	r2, [r2, #0]
200001e0:	781b      	ldrb	r3, [r3, #0]
200001e2:	4313      	orrs	r3, r2
200001e4:	b2db      	uxtb	r3, r3
200001e6:	4a04      	ldr	r2, [pc, #16]	; (200001f8 <ascii_ctrl_bit_set+0x34>)
200001e8:	2104      	movs	r1, #4
200001ea:	430b      	orrs	r3, r1
200001ec:	b2db      	uxtb	r3, r3
200001ee:	7513      	strb	r3, [r2, #20]
}
200001f0:	46c0      	nop			; (mov r8, r8)
200001f2:	46bd      	mov	sp, r7
200001f4:	b004      	add	sp, #16
200001f6:	bd80      	pop	{r7, pc}
200001f8:	40021000 	andmi	r1, r2, r0

200001fc <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear ( char x )
{
200001fc:	b580      	push	{r7, lr}
200001fe:	b084      	sub	sp, #16
20000200:	af00      	add	r7, sp, #0
20000202:	0002      	movs	r2, r0
20000204:	1dfb      	adds	r3, r7, #7
20000206:	701a      	strb	r2, [r3, #0]
	char c;
	c = GPIO_E.odrLow;
20000208:	4a0d      	ldr	r2, [pc, #52]	; (20000240 <ascii_ctrl_bit_clear+0x44>)
2000020a:	210f      	movs	r1, #15
2000020c:	187b      	adds	r3, r7, r1
2000020e:	7d12      	ldrb	r2, [r2, #20]
20000210:	701a      	strb	r2, [r3, #0]
	c = c & ~x;
20000212:	1dfb      	adds	r3, r7, #7
20000214:	781b      	ldrb	r3, [r3, #0]
20000216:	b25b      	sxtb	r3, r3
20000218:	43db      	mvns	r3, r3
2000021a:	b25b      	sxtb	r3, r3
2000021c:	187a      	adds	r2, r7, r1
2000021e:	7812      	ldrb	r2, [r2, #0]
20000220:	b252      	sxtb	r2, r2
20000222:	4013      	ands	r3, r2
20000224:	b25a      	sxtb	r2, r3
20000226:	187b      	adds	r3, r7, r1
20000228:	701a      	strb	r2, [r3, #0]
	GPIO_E.odrLow = B_SELECT | c;
2000022a:	4a05      	ldr	r2, [pc, #20]	; (20000240 <ascii_ctrl_bit_clear+0x44>)
2000022c:	187b      	adds	r3, r7, r1
2000022e:	781b      	ldrb	r3, [r3, #0]
20000230:	2104      	movs	r1, #4
20000232:	430b      	orrs	r3, r1
20000234:	b2db      	uxtb	r3, r3
20000236:	7513      	strb	r3, [r2, #20]
}
20000238:	46c0      	nop			; (mov r8, r8)
2000023a:	46bd      	mov	sp, r7
2000023c:	b004      	add	sp, #16
2000023e:	bd80      	pop	{r7, pc}
20000240:	40021000 	andmi	r1, r2, r0

20000244 <ascii_write_controller>:
//time sensitive functions
void ascii_write_controller ( unsigned char c )
{
20000244:	b580      	push	{r7, lr}
20000246:	b082      	sub	sp, #8
20000248:	af00      	add	r7, sp, #0
2000024a:	0002      	movs	r2, r0
2000024c:	1dfb      	adds	r3, r7, #7
2000024e:	701a      	strb	r2, [r3, #0]
	//delay 40ns (small delay, no need)
	ascii_ctrl_bit_set(B_E);
20000250:	2040      	movs	r0, #64	; 0x40
20000252:	f7ff ffb7 	bl	200001c4 <ascii_ctrl_bit_set>
	GPIO_E.odrHigh = c;
20000256:	4a06      	ldr	r2, [pc, #24]	; (20000270 <ascii_write_controller+0x2c>)
20000258:	1dfb      	adds	r3, r7, #7
2000025a:	781b      	ldrb	r3, [r3, #0]
2000025c:	7553      	strb	r3, [r2, #21]
	delay_250ns();
2000025e:	f7ff fed7 	bl	20000010 <delay_250ns>
	ascii_ctrl_bit_clear(B_E);
20000262:	2040      	movs	r0, #64	; 0x40
20000264:	f7ff ffca 	bl	200001fc <ascii_ctrl_bit_clear>
	//delay 10ns
}
20000268:	46c0      	nop			; (mov r8, r8)
2000026a:	46bd      	mov	sp, r7
2000026c:	b002      	add	sp, #8
2000026e:	bd80      	pop	{r7, pc}
20000270:	40021000 	andmi	r1, r2, r0

20000274 <ascii_read_controller>:

char ascii_read_controller ( void )
{
20000274:	b580      	push	{r7, lr}
20000276:	b082      	sub	sp, #8
20000278:	af00      	add	r7, sp, #0
	char c;
	ascii_ctrl_bit_set(B_E);
2000027a:	2040      	movs	r0, #64	; 0x40
2000027c:	f7ff ffa2 	bl	200001c4 <ascii_ctrl_bit_set>
	delay_250ns;
	delay_250ns;
	c=GPIO_E.idrHigh;
20000280:	4a06      	ldr	r2, [pc, #24]	; (2000029c <ascii_read_controller+0x28>)
20000282:	1dfb      	adds	r3, r7, #7
20000284:	7c52      	ldrb	r2, [r2, #17]
20000286:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_E);
20000288:	2040      	movs	r0, #64	; 0x40
2000028a:	f7ff ffb7 	bl	200001fc <ascii_ctrl_bit_clear>
	return c;
2000028e:	1dfb      	adds	r3, r7, #7
20000290:	781b      	ldrb	r3, [r3, #0]
}
20000292:	0018      	movs	r0, r3
20000294:	46bd      	mov	sp, r7
20000296:	b002      	add	sp, #8
20000298:	bd80      	pop	{r7, pc}
2000029a:	46c0      	nop			; (mov r8, r8)
2000029c:	40021000 	andmi	r1, r2, r0

200002a0 <ascii_write_cmd>:
//other
void ascii_write_cmd( unsigned char c ) 
{
200002a0:	b580      	push	{r7, lr}
200002a2:	b082      	sub	sp, #8
200002a4:	af00      	add	r7, sp, #0
200002a6:	0002      	movs	r2, r0
200002a8:	1dfb      	adds	r3, r7, #7
200002aa:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
200002ac:	2001      	movs	r0, #1
200002ae:	f7ff ffa5 	bl	200001fc <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
200002b2:	2002      	movs	r0, #2
200002b4:	f7ff ffa2 	bl	200001fc <ascii_ctrl_bit_clear>
	ascii_write_controller(c);
200002b8:	1dfb      	adds	r3, r7, #7
200002ba:	781b      	ldrb	r3, [r3, #0]
200002bc:	0018      	movs	r0, r3
200002be:	f7ff ffc1 	bl	20000244 <ascii_write_controller>
}
200002c2:	46c0      	nop			; (mov r8, r8)
200002c4:	46bd      	mov	sp, r7
200002c6:	b002      	add	sp, #8
200002c8:	bd80      	pop	{r7, pc}

200002ca <ascii_write_data>:

void ascii_write_data( unsigned char c ) 
{
200002ca:	b580      	push	{r7, lr}
200002cc:	b082      	sub	sp, #8
200002ce:	af00      	add	r7, sp, #0
200002d0:	0002      	movs	r2, r0
200002d2:	1dfb      	adds	r3, r7, #7
200002d4:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
200002d6:	2001      	movs	r0, #1
200002d8:	f7ff ff74 	bl	200001c4 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RW);
200002dc:	2002      	movs	r0, #2
200002de:	f7ff ff8d 	bl	200001fc <ascii_ctrl_bit_clear>
	ascii_write_controller(c);
200002e2:	1dfb      	adds	r3, r7, #7
200002e4:	781b      	ldrb	r3, [r3, #0]
200002e6:	0018      	movs	r0, r3
200002e8:	f7ff ffac 	bl	20000244 <ascii_write_controller>
}
200002ec:	46c0      	nop			; (mov r8, r8)
200002ee:	46bd      	mov	sp, r7
200002f0:	b002      	add	sp, #8
200002f2:	bd80      	pop	{r7, pc}

200002f4 <ascii_read_status>:

unsigned char ascii_read_status ( void )
{
200002f4:	b590      	push	{r4, r7, lr}
200002f6:	b083      	sub	sp, #12
200002f8:	af00      	add	r7, sp, #0
	char c;
	GPIO_E.moder = 0x00005555;
200002fa:	4b0b      	ldr	r3, [pc, #44]	; (20000328 <ascii_read_status+0x34>)
200002fc:	4a0b      	ldr	r2, [pc, #44]	; (2000032c <ascii_read_status+0x38>)
200002fe:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RW);
20000300:	2002      	movs	r0, #2
20000302:	f7ff ff5f 	bl	200001c4 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RS);
20000306:	2001      	movs	r0, #1
20000308:	f7ff ff78 	bl	200001fc <ascii_ctrl_bit_clear>
	c = ascii_read_controller();
2000030c:	1dfc      	adds	r4, r7, #7
2000030e:	f7ff ffb1 	bl	20000274 <ascii_read_controller>
20000312:	0003      	movs	r3, r0
20000314:	7023      	strb	r3, [r4, #0]
	
	GPIO_E.moder = 0x55555555;
20000316:	4b04      	ldr	r3, [pc, #16]	; (20000328 <ascii_read_status+0x34>)
20000318:	4a05      	ldr	r2, [pc, #20]	; (20000330 <ascii_read_status+0x3c>)
2000031a:	601a      	str	r2, [r3, #0]
	return c;
2000031c:	1dfb      	adds	r3, r7, #7
2000031e:	781b      	ldrb	r3, [r3, #0]
}
20000320:	0018      	movs	r0, r3
20000322:	46bd      	mov	sp, r7
20000324:	b003      	add	sp, #12
20000326:	bd90      	pop	{r4, r7, pc}
20000328:	40021000 	andmi	r1, r2, r0
2000032c:	00005555 	andeq	r5, r0, r5, asr r5
20000330:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000334 <ascii_read_data>:

unsigned char ascii_read_data ( void )
{
20000334:	b590      	push	{r4, r7, lr}
20000336:	b083      	sub	sp, #12
20000338:	af00      	add	r7, sp, #0
	GPIO_E.moder &= 0x0000FFFF;
2000033a:	4b0e      	ldr	r3, [pc, #56]	; (20000374 <ascii_read_data+0x40>)
2000033c:	681a      	ldr	r2, [r3, #0]
2000033e:	4b0d      	ldr	r3, [pc, #52]	; (20000374 <ascii_read_data+0x40>)
20000340:	0412      	lsls	r2, r2, #16
20000342:	0c12      	lsrs	r2, r2, #16
20000344:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
20000346:	2001      	movs	r0, #1
20000348:	f7ff ff3c 	bl	200001c4 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_set(B_RW);
2000034c:	2002      	movs	r0, #2
2000034e:	f7ff ff39 	bl	200001c4 <ascii_ctrl_bit_set>
	char c = ascii_read_controller();
20000352:	1dfc      	adds	r4, r7, #7
20000354:	f7ff ff8e 	bl	20000274 <ascii_read_controller>
20000358:	0003      	movs	r3, r0
2000035a:	7023      	strb	r3, [r4, #0]
	GPIO_E.moder |= 0x55550000;
2000035c:	4b05      	ldr	r3, [pc, #20]	; (20000374 <ascii_read_data+0x40>)
2000035e:	681a      	ldr	r2, [r3, #0]
20000360:	4b04      	ldr	r3, [pc, #16]	; (20000374 <ascii_read_data+0x40>)
20000362:	4905      	ldr	r1, [pc, #20]	; (20000378 <ascii_read_data+0x44>)
20000364:	430a      	orrs	r2, r1
20000366:	601a      	str	r2, [r3, #0]
	return c;
20000368:	1dfb      	adds	r3, r7, #7
2000036a:	781b      	ldrb	r3, [r3, #0]
}
2000036c:	0018      	movs	r0, r3
2000036e:	46bd      	mov	sp, r7
20000370:	b003      	add	sp, #12
20000372:	bd90      	pop	{r4, r7, pc}
20000374:	40021000 	andmi	r1, r2, r0
20000378:	55550000 	ldrbpl	r0, [r5, #-0]

2000037c <ascii_command>:

void ascii_command( unsigned char command )
{
2000037c:	b580      	push	{r7, lr}
2000037e:	b082      	sub	sp, #8
20000380:	af00      	add	r7, sp, #0
20000382:	0002      	movs	r2, r0
20000384:	1dfb      	adds	r3, r7, #7
20000386:	701a      	strb	r2, [r3, #0]
	while( (ascii_read_status() & 0x80) == 0x80 ){}
20000388:	46c0      	nop			; (mov r8, r8)
2000038a:	f7ff ffb3 	bl	200002f4 <ascii_read_status>
2000038e:	0003      	movs	r3, r0
20000390:	001a      	movs	r2, r3
20000392:	2380      	movs	r3, #128	; 0x80
20000394:	4013      	ands	r3, r2
20000396:	2b80      	cmp	r3, #128	; 0x80
20000398:	d0f7      	beq.n	2000038a <ascii_command+0xe>
	delay_micro(8);
2000039a:	2008      	movs	r0, #8
2000039c:	f7ff fe5a 	bl	20000054 <delay_micro>
	ascii_write_cmd(command);
200003a0:	1dfb      	adds	r3, r7, #7
200003a2:	781b      	ldrb	r3, [r3, #0]
200003a4:	0018      	movs	r0, r3
200003a6:	f7ff ff7b 	bl	200002a0 <ascii_write_cmd>
}
200003aa:	46c0      	nop			; (mov r8, r8)
200003ac:	46bd      	mov	sp, r7
200003ae:	b002      	add	sp, #8
200003b0:	bd80      	pop	{r7, pc}

200003b2 <ascii_init>:

void ascii_init (void) {
200003b2:	b580      	push	{r7, lr}
200003b4:	af00      	add	r7, sp, #0
	// function set (2 rows and font size)
	ascii_command(0x38);
200003b6:	2038      	movs	r0, #56	; 0x38
200003b8:	f7ff ffe0 	bl	2000037c <ascii_command>
	delay_micro(39);
200003bc:	2027      	movs	r0, #39	; 0x27
200003be:	f7ff fe49 	bl	20000054 <delay_micro>
	// turn on display & cursor constant
	ascii_command(0xE);
200003c2:	200e      	movs	r0, #14
200003c4:	f7ff ffda 	bl	2000037c <ascii_command>
	delay_micro(39);
200003c8:	2027      	movs	r0, #39	; 0x27
200003ca:	f7ff fe43 	bl	20000054 <delay_micro>
	// clear screen
	ascii_command(1);
200003ce:	2001      	movs	r0, #1
200003d0:	f7ff ffd4 	bl	2000037c <ascii_command>
	delay_milli(2);
200003d4:	2002      	movs	r0, #2
200003d6:	f7ff fe63 	bl	200000a0 <delay_milli>
	//adressing with inc.
	ascii_command(6);
200003da:	2006      	movs	r0, #6
200003dc:	f7ff ffce 	bl	2000037c <ascii_command>
	delay_micro(39);
200003e0:	2027      	movs	r0, #39	; 0x27
200003e2:	f7ff fe37 	bl	20000054 <delay_micro>
}
200003e6:	46c0      	nop			; (mov r8, r8)
200003e8:	46bd      	mov	sp, r7
200003ea:	bd80      	pop	{r7, pc}

200003ec <ascii_write_char>:

void ascii_write_char(char c)
{
200003ec:	b580      	push	{r7, lr}
200003ee:	b082      	sub	sp, #8
200003f0:	af00      	add	r7, sp, #0
200003f2:	0002      	movs	r2, r0
200003f4:	1dfb      	adds	r3, r7, #7
200003f6:	701a      	strb	r2, [r3, #0]
	while( (ascii_read_status() & 0x80) == 0x80 ){}
200003f8:	46c0      	nop			; (mov r8, r8)
200003fa:	f7ff ff7b 	bl	200002f4 <ascii_read_status>
200003fe:	0003      	movs	r3, r0
20000400:	001a      	movs	r2, r3
20000402:	2380      	movs	r3, #128	; 0x80
20000404:	4013      	ands	r3, r2
20000406:	2b80      	cmp	r3, #128	; 0x80
20000408:	d0f7      	beq.n	200003fa <ascii_write_char+0xe>
	delay_micro(8);
2000040a:	2008      	movs	r0, #8
2000040c:	f7ff fe22 	bl	20000054 <delay_micro>
	ascii_write_data(c);
20000410:	1dfb      	adds	r3, r7, #7
20000412:	781b      	ldrb	r3, [r3, #0]
20000414:	0018      	movs	r0, r3
20000416:	f7ff ff58 	bl	200002ca <ascii_write_data>
	delay_micro(43);
2000041a:	202b      	movs	r0, #43	; 0x2b
2000041c:	f7ff fe1a 	bl	20000054 <delay_micro>
}
20000420:	46c0      	nop			; (mov r8, r8)
20000422:	46bd      	mov	sp, r7
20000424:	b002      	add	sp, #8
20000426:	bd80      	pop	{r7, pc}

20000428 <ascii_gotxy>:

void ascii_gotxy(unsigned char row, unsigned char column)
{
20000428:	b580      	push	{r7, lr}
2000042a:	b084      	sub	sp, #16
2000042c:	af00      	add	r7, sp, #0
2000042e:	0002      	movs	r2, r0
20000430:	1dfb      	adds	r3, r7, #7
20000432:	701a      	strb	r2, [r3, #0]
20000434:	1dbb      	adds	r3, r7, #6
20000436:	1c0a      	adds	r2, r1, #0
20000438:	701a      	strb	r2, [r3, #0]
	char adr = row-1;
2000043a:	210f      	movs	r1, #15
2000043c:	187b      	adds	r3, r7, r1
2000043e:	1dfa      	adds	r2, r7, #7
20000440:	7812      	ldrb	r2, [r2, #0]
20000442:	3a01      	subs	r2, #1
20000444:	701a      	strb	r2, [r3, #0]
	if(column == 2) adr = adr + 0x40;
20000446:	1dbb      	adds	r3, r7, #6
20000448:	781b      	ldrb	r3, [r3, #0]
2000044a:	2b02      	cmp	r3, #2
2000044c:	d104      	bne.n	20000458 <ascii_gotxy+0x30>
2000044e:	187b      	adds	r3, r7, r1
20000450:	187a      	adds	r2, r7, r1
20000452:	7812      	ldrb	r2, [r2, #0]
20000454:	3240      	adds	r2, #64	; 0x40
20000456:	701a      	strb	r2, [r3, #0]
	ascii_write_cmd ( 0x80 | adr );
20000458:	230f      	movs	r3, #15
2000045a:	18fb      	adds	r3, r7, r3
2000045c:	781b      	ldrb	r3, [r3, #0]
2000045e:	2280      	movs	r2, #128	; 0x80
20000460:	4252      	negs	r2, r2
20000462:	4313      	orrs	r3, r2
20000464:	b2db      	uxtb	r3, r3
20000466:	0018      	movs	r0, r3
20000468:	f7ff ff1a 	bl	200002a0 <ascii_write_cmd>
}
2000046c:	46c0      	nop			; (mov r8, r8)
2000046e:	46bd      	mov	sp, r7
20000470:	b004      	add	sp, #16
20000472:	bd80      	pop	{r7, pc}

20000474 <write_ascii>:
/*
 * main function
 */
int write_ascii(char line1[], char line2[])
{
20000474:	b580      	push	{r7, lr}
20000476:	b084      	sub	sp, #16
20000478:	af00      	add	r7, sp, #0
2000047a:	6078      	str	r0, [r7, #4]
2000047c:	6039      	str	r1, [r7, #0]
	char *s;
	ascii_init();
2000047e:	f7ff ff98 	bl	200003b2 <ascii_init>
	ascii_gotxy(1,1);
20000482:	2101      	movs	r1, #1
20000484:	2001      	movs	r0, #1
20000486:	f7ff ffcf 	bl	20000428 <ascii_gotxy>
	s = line1;
2000048a:	687b      	ldr	r3, [r7, #4]
2000048c:	60fb      	str	r3, [r7, #12]
	while( *s ) {
2000048e:	e006      	b.n	2000049e <write_ascii+0x2a>
		ascii_write_char(*s++);
20000490:	68fb      	ldr	r3, [r7, #12]
20000492:	1c5a      	adds	r2, r3, #1
20000494:	60fa      	str	r2, [r7, #12]
20000496:	781b      	ldrb	r3, [r3, #0]
20000498:	0018      	movs	r0, r3
2000049a:	f7ff ffa7 	bl	200003ec <ascii_write_char>
	while( *s ) {
2000049e:	68fb      	ldr	r3, [r7, #12]
200004a0:	781b      	ldrb	r3, [r3, #0]
200004a2:	2b00      	cmp	r3, #0
200004a4:	d1f4      	bne.n	20000490 <write_ascii+0x1c>
	}
	ascii_gotxy(1,2);
200004a6:	2102      	movs	r1, #2
200004a8:	2001      	movs	r0, #1
200004aa:	f7ff ffbd 	bl	20000428 <ascii_gotxy>
	s = line2;
200004ae:	683b      	ldr	r3, [r7, #0]
200004b0:	60fb      	str	r3, [r7, #12]
	while( *s ) {
200004b2:	e006      	b.n	200004c2 <write_ascii+0x4e>
		ascii_write_char(*s++);
200004b4:	68fb      	ldr	r3, [r7, #12]
200004b6:	1c5a      	adds	r2, r3, #1
200004b8:	60fa      	str	r2, [r7, #12]
200004ba:	781b      	ldrb	r3, [r3, #0]
200004bc:	0018      	movs	r0, r3
200004be:	f7ff ff95 	bl	200003ec <ascii_write_char>
	while( *s ) {
200004c2:	68fb      	ldr	r3, [r7, #12]
200004c4:	781b      	ldrb	r3, [r3, #0]
200004c6:	2b00      	cmp	r3, #0
200004c8:	d1f4      	bne.n	200004b4 <write_ascii+0x40>
	}
	return 0;
200004ca:	2300      	movs	r3, #0
}
200004cc:	0018      	movs	r0, r3
200004ce:	46bd      	mov	sp, r7
200004d0:	b004      	add	sp, #16
200004d2:	bd80      	pop	{r7, pc}

200004d4 <graphic_initalize>:

//GRPAPHICS DRIVERS----------------------------
//OBS! graphic_init. sets up port E for usage
__attribute__((naked))
void graphic_initalize(void)
{
200004d4:	4770dff0 			; <UNDEFINED> instruction: 0x4770dff0
	__asm volatile(" .HWORD 0xDFF0\n");
	__asm volatile(" BX LR\n");
}
200004d8:	46c0      	nop			; (mov r8, r8)

200004da <graphic_pixel_set>:

__attribute__((naked))
void graphic_pixel_set(int x, int y)
{
200004da:	4770dff2 			; <UNDEFINED> instruction: 0x4770dff2
	__asm volatile(" .HWORD 0xDFF2\n");
	__asm volatile(" BX LR\n");
}
200004de:	46c0      	nop			; (mov r8, r8)

200004e0 <graphic_clear_screen>:

__attribute__((naked))
void graphic_clear_screen(void)
{
200004e0:	4770dff1 			; <UNDEFINED> instruction: 0x4770dff1
	__asm volatile(" .HWORD 0xDFF1\n");
	__asm volatile(" BX LR\n");
}
200004e4:	46c0      	nop			; (mov r8, r8)

200004e6 <graphic_pixel_clear>:

__attribute__((naked))
void graphic_pixel_clear(int x, int y)
{
200004e6:	4770dff3 			; <UNDEFINED> instruction: 0x4770dff3
	__asm volatile(" .HWORD 0xDFF3\n");
	__asm volatile(" BX LR\n");
}
200004ea:	46c0      	nop			; (mov r8, r8)

200004ec <draw_object>:

//GRAPHICS DRIVERS----------------------------
//OBJECT-----------------------------
//general methods
void draw_object(POBJECT obj)
{
200004ec:	b590      	push	{r4, r7, lr}
200004ee:	b087      	sub	sp, #28
200004f0:	af00      	add	r7, sp, #0
200004f2:	6078      	str	r0, [r7, #4]
	int numpixels = obj -> geo -> numpoints;
200004f4:	687b      	ldr	r3, [r7, #4]
200004f6:	681b      	ldr	r3, [r3, #0]
200004f8:	681b      	ldr	r3, [r3, #0]
200004fa:	613b      	str	r3, [r7, #16]
	for(int i = 0; i < numpixels; i++)
200004fc:	2300      	movs	r3, #0
200004fe:	617b      	str	r3, [r7, #20]
20000500:	e02c      	b.n	2000055c <draw_object+0x70>
	{
		unsigned char x = obj -> geo -> px[i].x + (obj -> posx) * SQUARE_WIDTH;
20000502:	687b      	ldr	r3, [r7, #4]
20000504:	681a      	ldr	r2, [r3, #0]
20000506:	697b      	ldr	r3, [r7, #20]
20000508:	3304      	adds	r3, #4
2000050a:	005b      	lsls	r3, r3, #1
2000050c:	18d3      	adds	r3, r2, r3
2000050e:	3304      	adds	r3, #4
20000510:	7819      	ldrb	r1, [r3, #0]
20000512:	687b      	ldr	r3, [r7, #4]
20000514:	68db      	ldr	r3, [r3, #12]
20000516:	b2db      	uxtb	r3, r3
20000518:	009b      	lsls	r3, r3, #2
2000051a:	b2da      	uxtb	r2, r3
2000051c:	200f      	movs	r0, #15
2000051e:	183b      	adds	r3, r7, r0
20000520:	188a      	adds	r2, r1, r2
20000522:	701a      	strb	r2, [r3, #0]
		unsigned char y = obj -> geo -> px[i].y + (obj -> posy) * SQUARE_WIDTH;
20000524:	687b      	ldr	r3, [r7, #4]
20000526:	681a      	ldr	r2, [r3, #0]
20000528:	697b      	ldr	r3, [r7, #20]
2000052a:	3304      	adds	r3, #4
2000052c:	005b      	lsls	r3, r3, #1
2000052e:	18d3      	adds	r3, r2, r3
20000530:	3305      	adds	r3, #5
20000532:	7819      	ldrb	r1, [r3, #0]
20000534:	687b      	ldr	r3, [r7, #4]
20000536:	691b      	ldr	r3, [r3, #16]
20000538:	b2db      	uxtb	r3, r3
2000053a:	009b      	lsls	r3, r3, #2
2000053c:	b2da      	uxtb	r2, r3
2000053e:	240e      	movs	r4, #14
20000540:	193b      	adds	r3, r7, r4
20000542:	188a      	adds	r2, r1, r2
20000544:	701a      	strb	r2, [r3, #0]
		graphic_pixel_set(x, y);
20000546:	183b      	adds	r3, r7, r0
20000548:	781a      	ldrb	r2, [r3, #0]
2000054a:	193b      	adds	r3, r7, r4
2000054c:	781b      	ldrb	r3, [r3, #0]
2000054e:	0019      	movs	r1, r3
20000550:	0010      	movs	r0, r2
20000552:	f7ff ffc2 	bl	200004da <graphic_pixel_set>
	for(int i = 0; i < numpixels; i++)
20000556:	697b      	ldr	r3, [r7, #20]
20000558:	3301      	adds	r3, #1
2000055a:	617b      	str	r3, [r7, #20]
2000055c:	697a      	ldr	r2, [r7, #20]
2000055e:	693b      	ldr	r3, [r7, #16]
20000560:	429a      	cmp	r2, r3
20000562:	dbce      	blt.n	20000502 <draw_object+0x16>
	}
}
20000564:	46c0      	nop			; (mov r8, r8)
20000566:	46c0      	nop			; (mov r8, r8)
20000568:	46bd      	mov	sp, r7
2000056a:	b007      	add	sp, #28
2000056c:	bd90      	pop	{r4, r7, pc}

2000056e <clear_object>:

void clear_object(POBJECT obj)
{
2000056e:	b590      	push	{r4, r7, lr}
20000570:	b087      	sub	sp, #28
20000572:	af00      	add	r7, sp, #0
20000574:	6078      	str	r0, [r7, #4]
	int numpixels = obj -> geo -> numpoints;
20000576:	687b      	ldr	r3, [r7, #4]
20000578:	681b      	ldr	r3, [r3, #0]
2000057a:	681b      	ldr	r3, [r3, #0]
2000057c:	613b      	str	r3, [r7, #16]
	for(int i = 0; i < numpixels; i++)
2000057e:	2300      	movs	r3, #0
20000580:	617b      	str	r3, [r7, #20]
20000582:	e02c      	b.n	200005de <clear_object+0x70>
	{ 
		unsigned char x = obj -> geo -> px[i].x + (obj -> posx) * SQUARE_WIDTH;
20000584:	687b      	ldr	r3, [r7, #4]
20000586:	681a      	ldr	r2, [r3, #0]
20000588:	697b      	ldr	r3, [r7, #20]
2000058a:	3304      	adds	r3, #4
2000058c:	005b      	lsls	r3, r3, #1
2000058e:	18d3      	adds	r3, r2, r3
20000590:	3304      	adds	r3, #4
20000592:	7819      	ldrb	r1, [r3, #0]
20000594:	687b      	ldr	r3, [r7, #4]
20000596:	68db      	ldr	r3, [r3, #12]
20000598:	b2db      	uxtb	r3, r3
2000059a:	009b      	lsls	r3, r3, #2
2000059c:	b2da      	uxtb	r2, r3
2000059e:	200f      	movs	r0, #15
200005a0:	183b      	adds	r3, r7, r0
200005a2:	188a      	adds	r2, r1, r2
200005a4:	701a      	strb	r2, [r3, #0]
		unsigned char y = obj -> geo -> px[i].y + (obj -> posy) * SQUARE_WIDTH;
200005a6:	687b      	ldr	r3, [r7, #4]
200005a8:	681a      	ldr	r2, [r3, #0]
200005aa:	697b      	ldr	r3, [r7, #20]
200005ac:	3304      	adds	r3, #4
200005ae:	005b      	lsls	r3, r3, #1
200005b0:	18d3      	adds	r3, r2, r3
200005b2:	3305      	adds	r3, #5
200005b4:	7819      	ldrb	r1, [r3, #0]
200005b6:	687b      	ldr	r3, [r7, #4]
200005b8:	691b      	ldr	r3, [r3, #16]
200005ba:	b2db      	uxtb	r3, r3
200005bc:	009b      	lsls	r3, r3, #2
200005be:	b2da      	uxtb	r2, r3
200005c0:	240e      	movs	r4, #14
200005c2:	193b      	adds	r3, r7, r4
200005c4:	188a      	adds	r2, r1, r2
200005c6:	701a      	strb	r2, [r3, #0]
		graphic_pixel_clear(x, y);
200005c8:	183b      	adds	r3, r7, r0
200005ca:	781a      	ldrb	r2, [r3, #0]
200005cc:	193b      	adds	r3, r7, r4
200005ce:	781b      	ldrb	r3, [r3, #0]
200005d0:	0019      	movs	r1, r3
200005d2:	0010      	movs	r0, r2
200005d4:	f7ff ff87 	bl	200004e6 <graphic_pixel_clear>
	for(int i = 0; i < numpixels; i++)
200005d8:	697b      	ldr	r3, [r7, #20]
200005da:	3301      	adds	r3, #1
200005dc:	617b      	str	r3, [r7, #20]
200005de:	697a      	ldr	r2, [r7, #20]
200005e0:	693b      	ldr	r3, [r7, #16]
200005e2:	429a      	cmp	r2, r3
200005e4:	dbce      	blt.n	20000584 <clear_object+0x16>
	}
}
200005e6:	46c0      	nop			; (mov r8, r8)
200005e8:	46c0      	nop			; (mov r8, r8)
200005ea:	46bd      	mov	sp, r7
200005ec:	b007      	add	sp, #28
200005ee:	bd90      	pop	{r4, r7, pc}

200005f0 <drawclear_object>:

void drawclear_object(POBJECT obj) {
200005f0:	b580      	push	{r7, lr}
200005f2:	b082      	sub	sp, #8
200005f4:	af00      	add	r7, sp, #0
200005f6:	6078      	str	r0, [r7, #4]
	// clears place of object and then draws it
	clear_object(obj);
200005f8:	687b      	ldr	r3, [r7, #4]
200005fa:	0018      	movs	r0, r3
200005fc:	f7ff ffb7 	bl	2000056e <clear_object>
	draw_object(obj);
20000600:	687b      	ldr	r3, [r7, #4]
20000602:	0018      	movs	r0, r3
20000604:	f7ff ff72 	bl	200004ec <draw_object>
}
20000608:	46c0      	nop			; (mov r8, r8)
2000060a:	46bd      	mov	sp, r7
2000060c:	b002      	add	sp, #8
2000060e:	bd80      	pop	{r7, pc}

20000610 <set_object_speed>:

void set_object_speed(POBJECT obj, int x, int y)
{
20000610:	b580      	push	{r7, lr}
20000612:	b084      	sub	sp, #16
20000614:	af00      	add	r7, sp, #0
20000616:	60f8      	str	r0, [r7, #12]
20000618:	60b9      	str	r1, [r7, #8]
2000061a:	607a      	str	r2, [r7, #4]
	obj -> dirx = x;
2000061c:	68fb      	ldr	r3, [r7, #12]
2000061e:	68ba      	ldr	r2, [r7, #8]
20000620:	605a      	str	r2, [r3, #4]
	obj -> diry = y;
20000622:	68fb      	ldr	r3, [r7, #12]
20000624:	687a      	ldr	r2, [r7, #4]
20000626:	609a      	str	r2, [r3, #8]
}
20000628:	46c0      	nop			; (mov r8, r8)
2000062a:	46bd      	mov	sp, r7
2000062c:	b004      	add	sp, #16
2000062e:	bd80      	pop	{r7, pc}

20000630 <move_snake>:

//snake methods
void move_snake(POBJECT snakeO)
{
20000630:	b580      	push	{r7, lr}
20000632:	b082      	sub	sp, #8
20000634:	af00      	add	r7, sp, #0
20000636:	6078      	str	r0, [r7, #4]
	//deside new pos. by adding dir coordinates to list of points
	snakeO-> posx += snakeO-> dirx;
20000638:	687b      	ldr	r3, [r7, #4]
2000063a:	68da      	ldr	r2, [r3, #12]
2000063c:	687b      	ldr	r3, [r7, #4]
2000063e:	685b      	ldr	r3, [r3, #4]
20000640:	18d2      	adds	r2, r2, r3
20000642:	687b      	ldr	r3, [r7, #4]
20000644:	60da      	str	r2, [r3, #12]
	snakeO-> posy += snakeO-> diry;
20000646:	687b      	ldr	r3, [r7, #4]
20000648:	691a      	ldr	r2, [r3, #16]
2000064a:	687b      	ldr	r3, [r7, #4]
2000064c:	689b      	ldr	r3, [r3, #8]
2000064e:	18d2      	adds	r2, r2, r3
20000650:	687b      	ldr	r3, [r7, #4]
20000652:	611a      	str	r2, [r3, #16]
}
20000654:	46c0      	nop			; (mov r8, r8)
20000656:	46bd      	mov	sp, r7
20000658:	b002      	add	sp, #8
2000065a:	bd80      	pop	{r7, pc}

2000065c <move_apple>:

//apple methods
void move_apple(POBJECT appleO)
{
2000065c:	b580      	push	{r7, lr}
2000065e:	b082      	sub	sp, #8
20000660:	af00      	add	r7, sp, #0
20000662:	6078      	str	r0, [r7, #4]
	appleO -> posx = random_number(1, SCREEN_WIDTH);
20000664:	2120      	movs	r1, #32
20000666:	2001      	movs	r0, #1
20000668:	f7ff fd2d 	bl	200000c6 <random_number>
2000066c:	0002      	movs	r2, r0
2000066e:	687b      	ldr	r3, [r7, #4]
20000670:	60da      	str	r2, [r3, #12]
	appleO -> posy = random_number(1, SCREEN_HEIGHT);
20000672:	2110      	movs	r1, #16
20000674:	2001      	movs	r0, #1
20000676:	f7ff fd26 	bl	200000c6 <random_number>
2000067a:	0002      	movs	r2, r0
2000067c:	687b      	ldr	r3, [r7, #4]
2000067e:	611a      	str	r2, [r3, #16]
}
20000680:	46c0      	nop			; (mov r8, r8)
20000682:	46bd      	mov	sp, r7
20000684:	b002      	add	sp, #8
20000686:	bd80      	pop	{r7, pc}

20000688 <create_tail>:
};
//APPLE
//SNAKE TAIL


OBJECT create_tail (int x, int y) {
20000688:	b590      	push	{r4, r7, lr}
2000068a:	b08f      	sub	sp, #60	; 0x3c
2000068c:	af00      	add	r7, sp, #0
2000068e:	60f8      	str	r0, [r7, #12]
20000690:	60b9      	str	r1, [r7, #8]
20000692:	607a      	str	r2, [r7, #4]
	OBJECT obj = {
20000694:	2114      	movs	r1, #20
20000696:	187b      	adds	r3, r7, r1
20000698:	4a12      	ldr	r2, [pc, #72]	; (200006e4 <create_tail+0x5c>)
2000069a:	601a      	str	r2, [r3, #0]
2000069c:	187b      	adds	r3, r7, r1
2000069e:	2200      	movs	r2, #0
200006a0:	605a      	str	r2, [r3, #4]
200006a2:	187b      	adds	r3, r7, r1
200006a4:	2200      	movs	r2, #0
200006a6:	609a      	str	r2, [r3, #8]
200006a8:	187b      	adds	r3, r7, r1
200006aa:	68ba      	ldr	r2, [r7, #8]
200006ac:	60da      	str	r2, [r3, #12]
200006ae:	187b      	adds	r3, r7, r1
200006b0:	687a      	ldr	r2, [r7, #4]
200006b2:	611a      	str	r2, [r3, #16]
200006b4:	187b      	adds	r3, r7, r1
200006b6:	4a0c      	ldr	r2, [pc, #48]	; (200006e8 <create_tail+0x60>)
200006b8:	615a      	str	r2, [r3, #20]
200006ba:	187b      	adds	r3, r7, r1
200006bc:	4a0b      	ldr	r2, [pc, #44]	; (200006ec <create_tail+0x64>)
200006be:	619a      	str	r2, [r3, #24]
200006c0:	187b      	adds	r3, r7, r1
200006c2:	4a0b      	ldr	r2, [pc, #44]	; (200006f0 <create_tail+0x68>)
200006c4:	61da      	str	r2, [r3, #28]
200006c6:	187b      	adds	r3, r7, r1
200006c8:	4a0a      	ldr	r2, [pc, #40]	; (200006f4 <create_tail+0x6c>)
200006ca:	621a      	str	r2, [r3, #32]
		draw_object,
		clear_object,
		move_snake,
		set_object_speed
	};
	return obj;
200006cc:	68fb      	ldr	r3, [r7, #12]
200006ce:	187a      	adds	r2, r7, r1
200006d0:	ca13      	ldmia	r2!, {r0, r1, r4}
200006d2:	c313      	stmia	r3!, {r0, r1, r4}
200006d4:	ca13      	ldmia	r2!, {r0, r1, r4}
200006d6:	c313      	stmia	r3!, {r0, r1, r4}
200006d8:	ca13      	ldmia	r2!, {r0, r1, r4}
200006da:	c313      	stmia	r3!, {r0, r1, r4}
}
200006dc:	68f8      	ldr	r0, [r7, #12]
200006de:	46bd      	mov	sp, r7
200006e0:	b00f      	add	sp, #60	; 0x3c
200006e2:	bd90      	pop	{r4, r7, pc}
200006e4:	2000703c 	andcs	r7, r0, ip, lsr r0
200006e8:	200004ed 	andcs	r0, r0, sp, ror #9
200006ec:	2000056f 	andcs	r0, r0, pc, ror #10
200006f0:	20000631 	andcs	r0, r0, r1, lsr r6
200006f4:	20000611 	andcs	r0, r0, r1, lsl r6

200006f8 <draw_objarr>:

void draw_objarr(OBJECT obj[], int amount) {
200006f8:	b580      	push	{r7, lr}
200006fa:	b084      	sub	sp, #16
200006fc:	af00      	add	r7, sp, #0
200006fe:	6078      	str	r0, [r7, #4]
20000700:	6039      	str	r1, [r7, #0]
	// draws amount members of pobject array
	for (int i = 0; i < amount; i++) {
20000702:	2300      	movs	r3, #0
20000704:	60fb      	str	r3, [r7, #12]
20000706:	e00d      	b.n	20000724 <draw_objarr+0x2c>
		draw_object(&obj[i]);
20000708:	68fa      	ldr	r2, [r7, #12]
2000070a:	0013      	movs	r3, r2
2000070c:	00db      	lsls	r3, r3, #3
2000070e:	189b      	adds	r3, r3, r2
20000710:	009b      	lsls	r3, r3, #2
20000712:	001a      	movs	r2, r3
20000714:	687b      	ldr	r3, [r7, #4]
20000716:	189b      	adds	r3, r3, r2
20000718:	0018      	movs	r0, r3
2000071a:	f7ff fee7 	bl	200004ec <draw_object>
	for (int i = 0; i < amount; i++) {
2000071e:	68fb      	ldr	r3, [r7, #12]
20000720:	3301      	adds	r3, #1
20000722:	60fb      	str	r3, [r7, #12]
20000724:	68fa      	ldr	r2, [r7, #12]
20000726:	683b      	ldr	r3, [r7, #0]
20000728:	429a      	cmp	r2, r3
2000072a:	dbed      	blt.n	20000708 <draw_objarr+0x10>
	}
}
2000072c:	46c0      	nop			; (mov r8, r8)
2000072e:	46c0      	nop			; (mov r8, r8)
20000730:	46bd      	mov	sp, r7
20000732:	b004      	add	sp, #16
20000734:	bd80      	pop	{r7, pc}

20000736 <object_collides>:
//DEFINED OBJ.------------------------

//collision detection-------------------------------

char object_collides(POBJECT o1, POBJECT o2)
{	
20000736:	b580      	push	{r7, lr}
20000738:	b082      	sub	sp, #8
2000073a:	af00      	add	r7, sp, #0
2000073c:	6078      	str	r0, [r7, #4]
2000073e:	6039      	str	r1, [r7, #0]
	// objects collides
	return (o1 -> posx == o2 -> posx && o1->posy == o2->posy);
20000740:	687b      	ldr	r3, [r7, #4]
20000742:	68da      	ldr	r2, [r3, #12]
20000744:	683b      	ldr	r3, [r7, #0]
20000746:	68db      	ldr	r3, [r3, #12]
20000748:	429a      	cmp	r2, r3
2000074a:	d107      	bne.n	2000075c <object_collides+0x26>
2000074c:	687b      	ldr	r3, [r7, #4]
2000074e:	691a      	ldr	r2, [r3, #16]
20000750:	683b      	ldr	r3, [r7, #0]
20000752:	691b      	ldr	r3, [r3, #16]
20000754:	429a      	cmp	r2, r3
20000756:	d101      	bne.n	2000075c <object_collides+0x26>
20000758:	2301      	movs	r3, #1
2000075a:	e000      	b.n	2000075e <object_collides+0x28>
2000075c:	2300      	movs	r3, #0
2000075e:	b2db      	uxtb	r3, r3
}
20000760:	0018      	movs	r0, r3
20000762:	46bd      	mov	sp, r7
20000764:	b002      	add	sp, #8
20000766:	bd80      	pop	{r7, pc}

20000768 <game_over>:
//FUNC.-------------------------------
char game_over(POBJECT snake_head, OBJECT snake_tail[], int points)
{
20000768:	b580      	push	{r7, lr}
2000076a:	b086      	sub	sp, #24
2000076c:	af00      	add	r7, sp, #0
2000076e:	60f8      	str	r0, [r7, #12]
20000770:	60b9      	str	r1, [r7, #8]
20000772:	607a      	str	r2, [r7, #4]
	// out of bounds detection
	if (snake_head->posx < 0 ||
20000774:	68fb      	ldr	r3, [r7, #12]
20000776:	68db      	ldr	r3, [r3, #12]
20000778:	2b00      	cmp	r3, #0
2000077a:	db0b      	blt.n	20000794 <game_over+0x2c>
		snake_head->posx > SCREEN_WIDTH ||
2000077c:	68fb      	ldr	r3, [r7, #12]
2000077e:	68db      	ldr	r3, [r3, #12]
	if (snake_head->posx < 0 ||
20000780:	2b20      	cmp	r3, #32
20000782:	dc07      	bgt.n	20000794 <game_over+0x2c>
		snake_head->posy < 0 ||
20000784:	68fb      	ldr	r3, [r7, #12]
20000786:	691b      	ldr	r3, [r3, #16]
		snake_head->posx > SCREEN_WIDTH ||
20000788:	2b00      	cmp	r3, #0
2000078a:	db03      	blt.n	20000794 <game_over+0x2c>
		snake_head->posy > SCREEN_HEIGHT) {
2000078c:	68fb      	ldr	r3, [r7, #12]
2000078e:	691b      	ldr	r3, [r3, #16]
		snake_head->posy < 0 ||
20000790:	2b10      	cmp	r3, #16
20000792:	dd01      	ble.n	20000798 <game_over+0x30>
		return 1;
20000794:	2301      	movs	r3, #1
20000796:	e026      	b.n	200007e6 <game_over+0x7e>
	}
	// tail detection
	for (int i=0; i<points; i++) {
20000798:	2300      	movs	r3, #0
2000079a:	617b      	str	r3, [r7, #20]
2000079c:	e01e      	b.n	200007dc <game_over+0x74>
		if (snake_tail[i].posx == snake_head->posx &&
2000079e:	697a      	ldr	r2, [r7, #20]
200007a0:	0013      	movs	r3, r2
200007a2:	00db      	lsls	r3, r3, #3
200007a4:	189b      	adds	r3, r3, r2
200007a6:	009b      	lsls	r3, r3, #2
200007a8:	001a      	movs	r2, r3
200007aa:	68bb      	ldr	r3, [r7, #8]
200007ac:	189b      	adds	r3, r3, r2
200007ae:	68da      	ldr	r2, [r3, #12]
200007b0:	68fb      	ldr	r3, [r7, #12]
200007b2:	68db      	ldr	r3, [r3, #12]
200007b4:	429a      	cmp	r2, r3
200007b6:	d10e      	bne.n	200007d6 <game_over+0x6e>
			snake_tail[i].posy == snake_head->posy) {
200007b8:	697a      	ldr	r2, [r7, #20]
200007ba:	0013      	movs	r3, r2
200007bc:	00db      	lsls	r3, r3, #3
200007be:	189b      	adds	r3, r3, r2
200007c0:	009b      	lsls	r3, r3, #2
200007c2:	001a      	movs	r2, r3
200007c4:	68bb      	ldr	r3, [r7, #8]
200007c6:	189b      	adds	r3, r3, r2
200007c8:	691a      	ldr	r2, [r3, #16]
200007ca:	68fb      	ldr	r3, [r7, #12]
200007cc:	691b      	ldr	r3, [r3, #16]
		if (snake_tail[i].posx == snake_head->posx &&
200007ce:	429a      	cmp	r2, r3
200007d0:	d101      	bne.n	200007d6 <game_over+0x6e>
			return 1;
200007d2:	2301      	movs	r3, #1
200007d4:	e007      	b.n	200007e6 <game_over+0x7e>
	for (int i=0; i<points; i++) {
200007d6:	697b      	ldr	r3, [r7, #20]
200007d8:	3301      	adds	r3, #1
200007da:	617b      	str	r3, [r7, #20]
200007dc:	697a      	ldr	r2, [r7, #20]
200007de:	687b      	ldr	r3, [r7, #4]
200007e0:	429a      	cmp	r2, r3
200007e2:	dbdc      	blt.n	2000079e <game_over+0x36>
		}
	}
	return 0;
200007e4:	2300      	movs	r3, #0
}
200007e6:	0018      	movs	r0, r3
200007e8:	46bd      	mov	sp, r7
200007ea:	b006      	add	sp, #24
200007ec:	bd80      	pop	{r7, pc}

200007ee <main_menu>:

//MAIN------------------------------
void main_menu() {
200007ee:	b590      	push	{r4, r7, lr}
200007f0:	b08d      	sub	sp, #52	; 0x34
200007f2:	af00      	add	r7, sp, #0
	// convert high score to char[]
	char row1[] = "High score:              ";
200007f4:	230c      	movs	r3, #12
200007f6:	18fb      	adds	r3, r7, r3
200007f8:	4a1c      	ldr	r2, [pc, #112]	; (2000086c <main_menu+0x7e>)
200007fa:	ca13      	ldmia	r2!, {r0, r1, r4}
200007fc:	c313      	stmia	r3!, {r0, r1, r4}
200007fe:	ca13      	ldmia	r2!, {r0, r1, r4}
20000800:	c313      	stmia	r3!, {r0, r1, r4}
20000802:	8812      	ldrh	r2, [r2, #0]
20000804:	801a      	strh	r2, [r3, #0]
	char high_score_char[12];
	itoa(high_score, high_score_char, 10);
20000806:	4b1a      	ldr	r3, [pc, #104]	; (20000870 <main_menu+0x82>)
20000808:	681b      	ldr	r3, [r3, #0]
2000080a:	0018      	movs	r0, r3
2000080c:	003b      	movs	r3, r7
2000080e:	220a      	movs	r2, #10
20000810:	0019      	movs	r1, r3
20000812:	f7ff fc7f 	bl	20000114 <itoa>
	int j = 0;
20000816:	2300      	movs	r3, #0
20000818:	62fb      	str	r3, [r7, #44]	; 0x2c
	// adds score to row1
	for (int i =12; i<20; i++) {
2000081a:	230c      	movs	r3, #12
2000081c:	62bb      	str	r3, [r7, #40]	; 0x28
2000081e:	e00f      	b.n	20000840 <main_menu+0x52>
		row1[i] = high_score_char[j];
20000820:	003a      	movs	r2, r7
20000822:	6afb      	ldr	r3, [r7, #44]	; 0x2c
20000824:	18d3      	adds	r3, r2, r3
20000826:	7819      	ldrb	r1, [r3, #0]
20000828:	230c      	movs	r3, #12
2000082a:	18fa      	adds	r2, r7, r3
2000082c:	6abb      	ldr	r3, [r7, #40]	; 0x28
2000082e:	18d3      	adds	r3, r2, r3
20000830:	1c0a      	adds	r2, r1, #0
20000832:	701a      	strb	r2, [r3, #0]
		j++;
20000834:	6afb      	ldr	r3, [r7, #44]	; 0x2c
20000836:	3301      	adds	r3, #1
20000838:	62fb      	str	r3, [r7, #44]	; 0x2c
	for (int i =12; i<20; i++) {
2000083a:	6abb      	ldr	r3, [r7, #40]	; 0x28
2000083c:	3301      	adds	r3, #1
2000083e:	62bb      	str	r3, [r7, #40]	; 0x28
20000840:	6abb      	ldr	r3, [r7, #40]	; 0x28
20000842:	2b13      	cmp	r3, #19
20000844:	ddec      	ble.n	20000820 <main_menu+0x32>
	}
	// create output text
	write_ascii(row1, "Press any key:");
20000846:	4a0b      	ldr	r2, [pc, #44]	; (20000874 <main_menu+0x86>)
20000848:	230c      	movs	r3, #12
2000084a:	18fb      	adds	r3, r7, r3
2000084c:	0011      	movs	r1, r2
2000084e:	0018      	movs	r0, r3
20000850:	f7ff fe10 	bl	20000474 <write_ascii>
	while (keyb() == 0xFF);
20000854:	46c0      	nop			; (mov r8, r8)
20000856:	f000 f9e7 	bl	20000c28 <keyb>
2000085a:	0003      	movs	r3, r0
2000085c:	2bff      	cmp	r3, #255	; 0xff
2000085e:	d0fa      	beq.n	20000856 <main_menu+0x68>
}
20000860:	46c0      	nop			; (mov r8, r8)
20000862:	46c0      	nop			; (mov r8, r8)
20000864:	46bd      	mov	sp, r7
20000866:	b00d      	add	sp, #52	; 0x34
20000868:	bd90      	pop	{r4, r7, pc}
2000086a:	46c0      	nop			; (mov r8, r8)
2000086c:	2000a0ec 	andcs	sl, r0, ip, ror #1
20000870:	2000a048 	andcs	sl, r0, r8, asr #32
20000874:	2000a0dc 	ldrdcs	sl, [r0], -ip

20000878 <main>:

void main(void)
{
20000878:	b5f0      	push	{r4, r5, r6, r7, lr}
2000087a:	4cae      	ldr	r4, [pc, #696]	; (20000b34 <main+0x2bc>)
2000087c:	44a5      	add	sp, r4
2000087e:	af00      	add	r7, sp, #0
	//game init
	init_app();
20000880:	f000 fa4e 	bl	20000d20 <init_app>
	graphic_initalize();
20000884:	f7ff fe26 	bl	200004d4 <graphic_initalize>
	graphic_clear_screen();
20000888:	f7ff fe2a 	bl	200004e0 <graphic_clear_screen>

	//object declarations
	main_menu();
2000088c:	f7ff ffaf 	bl	200007ee <main_menu>
	POBJECT appleO = &apple;
20000890:	4ba9      	ldr	r3, [pc, #676]	; (20000b38 <main+0x2c0>)
20000892:	4aaa      	ldr	r2, [pc, #680]	; (20000b3c <main+0x2c4>)
20000894:	18b9      	adds	r1, r7, r2
20000896:	600b      	str	r3, [r1, #0]
	POBJECT snake_head = &snake;
20000898:	4ba9      	ldr	r3, [pc, #676]	; (20000b40 <main+0x2c8>)
2000089a:	49aa      	ldr	r1, [pc, #680]	; (20000b44 <main+0x2cc>)
2000089c:	1879      	adds	r1, r7, r1
2000089e:	600b      	str	r3, [r1, #0]
	OBJECT snake_tail[16*32];	
	appleO -> draw(appleO);
200008a0:	18bb      	adds	r3, r7, r2
200008a2:	681b      	ldr	r3, [r3, #0]
200008a4:	695b      	ldr	r3, [r3, #20]
200008a6:	18ba      	adds	r2, r7, r2
200008a8:	6812      	ldr	r2, [r2, #0]
200008aa:	0010      	movs	r0, r2
200008ac:	4798      	blx	r3
	
	// game loop
	while (!game_over(snake_head, snake_tail, points)) 
200008ae:	e123      	b.n	20000af8 <main+0x280>
	{
		// if snake eats apple
		if(object_collides(snake_head, appleO))
200008b0:	4ca2      	ldr	r4, [pc, #648]	; (20000b3c <main+0x2c4>)
200008b2:	193b      	adds	r3, r7, r4
200008b4:	681a      	ldr	r2, [r3, #0]
200008b6:	4ba3      	ldr	r3, [pc, #652]	; (20000b44 <main+0x2cc>)
200008b8:	18fb      	adds	r3, r7, r3
200008ba:	681b      	ldr	r3, [r3, #0]
200008bc:	0011      	movs	r1, r2
200008be:	0018      	movs	r0, r3
200008c0:	f7ff ff39 	bl	20000736 <object_collides>
200008c4:	1e03      	subs	r3, r0, #0
200008c6:	d045      	beq.n	20000954 <main+0xdc>
		{
			// TODO write score
			write_ascii("Score: ", "");
200008c8:	4a9f      	ldr	r2, [pc, #636]	; (20000b48 <main+0x2d0>)
200008ca:	4ba0      	ldr	r3, [pc, #640]	; (20000b4c <main+0x2d4>)
200008cc:	0011      	movs	r1, r2
200008ce:	0018      	movs	r0, r3
200008d0:	f7ff fdd0 	bl	20000474 <write_ascii>
			// move apple to random location
			move_apple(appleO);
200008d4:	193b      	adds	r3, r7, r4
200008d6:	681b      	ldr	r3, [r3, #0]
200008d8:	0018      	movs	r0, r3
200008da:	f7ff febf 	bl	2000065c <move_apple>
			draw_object(appleO);
200008de:	193b      	adds	r3, r7, r4
200008e0:	681b      	ldr	r3, [r3, #0]
200008e2:	0018      	movs	r0, r3
200008e4:	f7ff fe02 	bl	200004ec <draw_object>
			// add new body part (s)
			for (int i = 0; i < TAIL_INCREMENT; i++) {
200008e8:	2300      	movs	r3, #0
200008ea:	4a99      	ldr	r2, [pc, #612]	; (20000b50 <main+0x2d8>)
200008ec:	18ba      	adds	r2, r7, r2
200008ee:	6013      	str	r3, [r2, #0]
200008f0:	e02a      	b.n	20000948 <main+0xd0>
				snake_tail[points] = create_tail(snake_head->posx,snake_head->posy);
200008f2:	4a94      	ldr	r2, [pc, #592]	; (20000b44 <main+0x2cc>)
200008f4:	18bb      	adds	r3, r7, r2
200008f6:	681b      	ldr	r3, [r3, #0]
200008f8:	68d9      	ldr	r1, [r3, #12]
200008fa:	18bb      	adds	r3, r7, r2
200008fc:	681b      	ldr	r3, [r3, #0]
200008fe:	691a      	ldr	r2, [r3, #16]
20000900:	4b94      	ldr	r3, [pc, #592]	; (20000b54 <main+0x2dc>)
20000902:	681b      	ldr	r3, [r3, #0]
20000904:	4894      	ldr	r0, [pc, #592]	; (20000b58 <main+0x2e0>)
20000906:	4e95      	ldr	r6, [pc, #596]	; (20000b5c <main+0x2e4>)
20000908:	19bc      	adds	r4, r7, r6
2000090a:	1825      	adds	r5, r4, r0
2000090c:	001c      	movs	r4, r3
2000090e:	00e4      	lsls	r4, r4, #3
20000910:	18e4      	adds	r4, r4, r3
20000912:	00a3      	lsls	r3, r4, #2
20000914:	001c      	movs	r4, r3
20000916:	003b      	movs	r3, r7
20000918:	0018      	movs	r0, r3
2000091a:	f7ff feb5 	bl	20000688 <create_tail>
2000091e:	4b90      	ldr	r3, [pc, #576]	; (20000b60 <main+0x2e8>)
20000920:	19ba      	adds	r2, r7, r6
20000922:	18d2      	adds	r2, r2, r3
20000924:	192b      	adds	r3, r5, r4
20000926:	ca13      	ldmia	r2!, {r0, r1, r4}
20000928:	c313      	stmia	r3!, {r0, r1, r4}
2000092a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000092c:	c313      	stmia	r3!, {r0, r1, r4}
2000092e:	ca13      	ldmia	r2!, {r0, r1, r4}
20000930:	c313      	stmia	r3!, {r0, r1, r4}
				// tally new size of snake by increasing points
				points++;
20000932:	4b88      	ldr	r3, [pc, #544]	; (20000b54 <main+0x2dc>)
20000934:	681b      	ldr	r3, [r3, #0]
20000936:	1c5a      	adds	r2, r3, #1
20000938:	4b86      	ldr	r3, [pc, #536]	; (20000b54 <main+0x2dc>)
2000093a:	601a      	str	r2, [r3, #0]
			for (int i = 0; i < TAIL_INCREMENT; i++) {
2000093c:	4a84      	ldr	r2, [pc, #528]	; (20000b50 <main+0x2d8>)
2000093e:	18bb      	adds	r3, r7, r2
20000940:	681b      	ldr	r3, [r3, #0]
20000942:	3301      	adds	r3, #1
20000944:	18ba      	adds	r2, r7, r2
20000946:	6013      	str	r3, [r2, #0]
20000948:	4b81      	ldr	r3, [pc, #516]	; (20000b50 <main+0x2d8>)
2000094a:	18fb      	adds	r3, r7, r3
2000094c:	681b      	ldr	r3, [r3, #0]
2000094e:	2b1d      	cmp	r3, #29
20000950:	ddcf      	ble.n	200008f2 <main+0x7a>
20000952:	e075      	b.n	20000a40 <main+0x1c8>
			}
			
		} else if (points>0) {
20000954:	4b7f      	ldr	r3, [pc, #508]	; (20000b54 <main+0x2dc>)
20000956:	681b      	ldr	r3, [r3, #0]
20000958:	2b00      	cmp	r3, #0
2000095a:	d071      	beq.n	20000a40 <main+0x1c8>
			// clear last piece of tail
			clear_object(&snake_tail[0]);
2000095c:	2328      	movs	r3, #40	; 0x28
2000095e:	18fb      	adds	r3, r7, r3
20000960:	0018      	movs	r0, r3
20000962:	f7ff fe04 	bl	2000056e <clear_object>
			// move closest tail piece to previous snake_head position
			snake_tail[points-1].posx = snake_head->posx;
20000966:	4b7b      	ldr	r3, [pc, #492]	; (20000b54 <main+0x2dc>)
20000968:	681b      	ldr	r3, [r3, #0]
2000096a:	1e5a      	subs	r2, r3, #1
2000096c:	4c75      	ldr	r4, [pc, #468]	; (20000b44 <main+0x2cc>)
2000096e:	193b      	adds	r3, r7, r4
20000970:	681b      	ldr	r3, [r3, #0]
20000972:	68d9      	ldr	r1, [r3, #12]
20000974:	4b78      	ldr	r3, [pc, #480]	; (20000b58 <main+0x2e0>)
20000976:	4d79      	ldr	r5, [pc, #484]	; (20000b5c <main+0x2e4>)
20000978:	1978      	adds	r0, r7, r5
2000097a:	18c0      	adds	r0, r0, r3
2000097c:	0013      	movs	r3, r2
2000097e:	00db      	lsls	r3, r3, #3
20000980:	189b      	adds	r3, r3, r2
20000982:	009b      	lsls	r3, r3, #2
20000984:	18c3      	adds	r3, r0, r3
20000986:	330c      	adds	r3, #12
20000988:	6019      	str	r1, [r3, #0]
			snake_tail[points-1].posy = snake_head->posy;
2000098a:	4b72      	ldr	r3, [pc, #456]	; (20000b54 <main+0x2dc>)
2000098c:	681b      	ldr	r3, [r3, #0]
2000098e:	1e5a      	subs	r2, r3, #1
20000990:	193b      	adds	r3, r7, r4
20000992:	681b      	ldr	r3, [r3, #0]
20000994:	6919      	ldr	r1, [r3, #16]
20000996:	4b70      	ldr	r3, [pc, #448]	; (20000b58 <main+0x2e0>)
20000998:	1978      	adds	r0, r7, r5
2000099a:	18c0      	adds	r0, r0, r3
2000099c:	0013      	movs	r3, r2
2000099e:	00db      	lsls	r3, r3, #3
200009a0:	189b      	adds	r3, r3, r2
200009a2:	009b      	lsls	r3, r3, #2
200009a4:	18c3      	adds	r3, r0, r3
200009a6:	3310      	adds	r3, #16
200009a8:	6019      	str	r1, [r3, #0]
			// else move entire tail forward
			for (int i=0; i<points-1; i++) {
200009aa:	2300      	movs	r3, #0
200009ac:	4a6d      	ldr	r2, [pc, #436]	; (20000b64 <main+0x2ec>)
200009ae:	18ba      	adds	r2, r7, r2
200009b0:	6013      	str	r3, [r2, #0]
200009b2:	e038      	b.n	20000a26 <main+0x1ae>
				//move_o1_o2(snake_tail[i], snake_tail[i+1]);
				snake_tail[i].posx = snake_tail[i+1].posx;
200009b4:	4c6b      	ldr	r4, [pc, #428]	; (20000b64 <main+0x2ec>)
200009b6:	193b      	adds	r3, r7, r4
200009b8:	681b      	ldr	r3, [r3, #0]
200009ba:	1c5a      	adds	r2, r3, #1
200009bc:	4b66      	ldr	r3, [pc, #408]	; (20000b58 <main+0x2e0>)
200009be:	4d67      	ldr	r5, [pc, #412]	; (20000b5c <main+0x2e4>)
200009c0:	1979      	adds	r1, r7, r5
200009c2:	18c9      	adds	r1, r1, r3
200009c4:	0013      	movs	r3, r2
200009c6:	00db      	lsls	r3, r3, #3
200009c8:	189b      	adds	r3, r3, r2
200009ca:	009b      	lsls	r3, r3, #2
200009cc:	18cb      	adds	r3, r1, r3
200009ce:	330c      	adds	r3, #12
200009d0:	6819      	ldr	r1, [r3, #0]
200009d2:	4b61      	ldr	r3, [pc, #388]	; (20000b58 <main+0x2e0>)
200009d4:	197a      	adds	r2, r7, r5
200009d6:	18d0      	adds	r0, r2, r3
200009d8:	193b      	adds	r3, r7, r4
200009da:	681a      	ldr	r2, [r3, #0]
200009dc:	0013      	movs	r3, r2
200009de:	00db      	lsls	r3, r3, #3
200009e0:	189b      	adds	r3, r3, r2
200009e2:	009b      	lsls	r3, r3, #2
200009e4:	18c3      	adds	r3, r0, r3
200009e6:	330c      	adds	r3, #12
200009e8:	6019      	str	r1, [r3, #0]
				snake_tail[i].posy = snake_tail[i+1].posy;
200009ea:	193b      	adds	r3, r7, r4
200009ec:	681b      	ldr	r3, [r3, #0]
200009ee:	1c5a      	adds	r2, r3, #1
200009f0:	4b59      	ldr	r3, [pc, #356]	; (20000b58 <main+0x2e0>)
200009f2:	1979      	adds	r1, r7, r5
200009f4:	18c9      	adds	r1, r1, r3
200009f6:	0013      	movs	r3, r2
200009f8:	00db      	lsls	r3, r3, #3
200009fa:	189b      	adds	r3, r3, r2
200009fc:	009b      	lsls	r3, r3, #2
200009fe:	18cb      	adds	r3, r1, r3
20000a00:	3310      	adds	r3, #16
20000a02:	6819      	ldr	r1, [r3, #0]
20000a04:	4b54      	ldr	r3, [pc, #336]	; (20000b58 <main+0x2e0>)
20000a06:	197a      	adds	r2, r7, r5
20000a08:	18d0      	adds	r0, r2, r3
20000a0a:	193b      	adds	r3, r7, r4
20000a0c:	681a      	ldr	r2, [r3, #0]
20000a0e:	0013      	movs	r3, r2
20000a10:	00db      	lsls	r3, r3, #3
20000a12:	189b      	adds	r3, r3, r2
20000a14:	009b      	lsls	r3, r3, #2
20000a16:	18c3      	adds	r3, r0, r3
20000a18:	3310      	adds	r3, #16
20000a1a:	6019      	str	r1, [r3, #0]
			for (int i=0; i<points-1; i++) {
20000a1c:	193b      	adds	r3, r7, r4
20000a1e:	681b      	ldr	r3, [r3, #0]
20000a20:	3301      	adds	r3, #1
20000a22:	193a      	adds	r2, r7, r4
20000a24:	6013      	str	r3, [r2, #0]
20000a26:	4b4b      	ldr	r3, [pc, #300]	; (20000b54 <main+0x2dc>)
20000a28:	681b      	ldr	r3, [r3, #0]
20000a2a:	1e5a      	subs	r2, r3, #1
20000a2c:	4b4d      	ldr	r3, [pc, #308]	; (20000b64 <main+0x2ec>)
20000a2e:	18fb      	adds	r3, r7, r3
20000a30:	681b      	ldr	r3, [r3, #0]
20000a32:	429a      	cmp	r2, r3
20000a34:	d8be      	bhi.n	200009b4 <main+0x13c>
			}
			//draw new tail piece
			drawclear_object(&snake_tail[0]);
20000a36:	2328      	movs	r3, #40	; 0x28
20000a38:	18fb      	adds	r3, r7, r3
20000a3a:	0018      	movs	r0, r3
20000a3c:	f7ff fdd8 	bl	200005f0 <drawclear_object>
		}
		clear_object(snake_head);
20000a40:	4c40      	ldr	r4, [pc, #256]	; (20000b44 <main+0x2cc>)
20000a42:	193b      	adds	r3, r7, r4
20000a44:	681b      	ldr	r3, [r3, #0]
20000a46:	0018      	movs	r0, r3
20000a48:	f7ff fd91 	bl	2000056e <clear_object>
		// move snake
		move_snake(snake_head);
20000a4c:	193b      	adds	r3, r7, r4
20000a4e:	681b      	ldr	r3, [r3, #0]
20000a50:	0018      	movs	r0, r3
20000a52:	f7ff fded 	bl	20000630 <move_snake>
		drawclear_object(snake_head);
20000a56:	193b      	adds	r3, r7, r4
20000a58:	681b      	ldr	r3, [r3, #0]
20000a5a:	0018      	movs	r0, r3
20000a5c:	f7ff fdc8 	bl	200005f0 <drawclear_object>
		if (points>0) drawclear_object(&snake_tail[points-1]);
20000a60:	4b3c      	ldr	r3, [pc, #240]	; (20000b54 <main+0x2dc>)
20000a62:	681b      	ldr	r3, [r3, #0]
20000a64:	2b00      	cmp	r3, #0
20000a66:	d00c      	beq.n	20000a82 <main+0x20a>
20000a68:	4b3a      	ldr	r3, [pc, #232]	; (20000b54 <main+0x2dc>)
20000a6a:	681b      	ldr	r3, [r3, #0]
20000a6c:	1e5a      	subs	r2, r3, #1
20000a6e:	2328      	movs	r3, #40	; 0x28
20000a70:	18f9      	adds	r1, r7, r3
20000a72:	0013      	movs	r3, r2
20000a74:	00db      	lsls	r3, r3, #3
20000a76:	189b      	adds	r3, r3, r2
20000a78:	009b      	lsls	r3, r3, #2
20000a7a:	18cb      	adds	r3, r1, r3
20000a7c:	0018      	movs	r0, r3
20000a7e:	f7ff fdb7 	bl	200005f0 <drawclear_object>
		// while systick(flag)
		//keypad input
		switch (keyb()) {
20000a82:	f000 f8d1 	bl	20000c28 <keyb>
20000a86:	0003      	movs	r3, r0
20000a88:	2b08      	cmp	r3, #8
20000a8a:	d028      	beq.n	20000ade <main+0x266>
20000a8c:	dc31      	bgt.n	20000af2 <main+0x27a>
20000a8e:	2b06      	cmp	r3, #6
20000a90:	d005      	beq.n	20000a9e <main+0x226>
20000a92:	dc2e      	bgt.n	20000af2 <main+0x27a>
20000a94:	2b02      	cmp	r3, #2
20000a96:	d017      	beq.n	20000ac8 <main+0x250>
20000a98:	2b04      	cmp	r3, #4
20000a9a:	d00a      	beq.n	20000ab2 <main+0x23a>
20000a9c:	e029      	b.n	20000af2 <main+0x27a>
			// right
			case 6: snake_head -> set_speed(snake_head, 1, 0); break;
20000a9e:	4a29      	ldr	r2, [pc, #164]	; (20000b44 <main+0x2cc>)
20000aa0:	18bb      	adds	r3, r7, r2
20000aa2:	681b      	ldr	r3, [r3, #0]
20000aa4:	6a1b      	ldr	r3, [r3, #32]
20000aa6:	18ba      	adds	r2, r7, r2
20000aa8:	6810      	ldr	r0, [r2, #0]
20000aaa:	2200      	movs	r2, #0
20000aac:	2101      	movs	r1, #1
20000aae:	4798      	blx	r3
20000ab0:	e01f      	b.n	20000af2 <main+0x27a>
			// left
			case 4: snake_head -> set_speed(snake_head, -1, 0); break;
20000ab2:	4824      	ldr	r0, [pc, #144]	; (20000b44 <main+0x2cc>)
20000ab4:	183b      	adds	r3, r7, r0
20000ab6:	681b      	ldr	r3, [r3, #0]
20000ab8:	6a1b      	ldr	r3, [r3, #32]
20000aba:	2201      	movs	r2, #1
20000abc:	4251      	negs	r1, r2
20000abe:	183a      	adds	r2, r7, r0
20000ac0:	6810      	ldr	r0, [r2, #0]
20000ac2:	2200      	movs	r2, #0
20000ac4:	4798      	blx	r3
20000ac6:	e014      	b.n	20000af2 <main+0x27a>
			// up
			case 2: snake_head -> set_speed(snake_head, 0, -1); break;
20000ac8:	491e      	ldr	r1, [pc, #120]	; (20000b44 <main+0x2cc>)
20000aca:	187b      	adds	r3, r7, r1
20000acc:	681b      	ldr	r3, [r3, #0]
20000ace:	6a1b      	ldr	r3, [r3, #32]
20000ad0:	2201      	movs	r2, #1
20000ad2:	4252      	negs	r2, r2
20000ad4:	1879      	adds	r1, r7, r1
20000ad6:	6808      	ldr	r0, [r1, #0]
20000ad8:	2100      	movs	r1, #0
20000ada:	4798      	blx	r3
20000adc:	e009      	b.n	20000af2 <main+0x27a>
			// down
			case 8: snake_head -> set_speed(snake_head, 0, 1); break;
20000ade:	4a19      	ldr	r2, [pc, #100]	; (20000b44 <main+0x2cc>)
20000ae0:	18bb      	adds	r3, r7, r2
20000ae2:	681b      	ldr	r3, [r3, #0]
20000ae4:	6a1b      	ldr	r3, [r3, #32]
20000ae6:	18ba      	adds	r2, r7, r2
20000ae8:	6810      	ldr	r0, [r2, #0]
20000aea:	2201      	movs	r2, #1
20000aec:	2100      	movs	r1, #0
20000aee:	4798      	blx	r3
20000af0:	46c0      	nop			; (mov r8, r8)
		}
			
		// delay
		delay_milli(30);
20000af2:	201e      	movs	r0, #30
20000af4:	f7ff fad4 	bl	200000a0 <delay_milli>
	while (!game_over(snake_head, snake_tail, points)) 
20000af8:	4b16      	ldr	r3, [pc, #88]	; (20000b54 <main+0x2dc>)
20000afa:	681b      	ldr	r3, [r3, #0]
20000afc:	001a      	movs	r2, r3
20000afe:	2328      	movs	r3, #40	; 0x28
20000b00:	18f9      	adds	r1, r7, r3
20000b02:	4b10      	ldr	r3, [pc, #64]	; (20000b44 <main+0x2cc>)
20000b04:	18fb      	adds	r3, r7, r3
20000b06:	681b      	ldr	r3, [r3, #0]
20000b08:	0018      	movs	r0, r3
20000b0a:	f7ff fe2d 	bl	20000768 <game_over>
20000b0e:	1e03      	subs	r3, r0, #0
20000b10:	d100      	bne.n	20000b14 <main+0x29c>
20000b12:	e6cd      	b.n	200008b0 <main+0x38>
	}
	// game over
	delay_milli(10);
20000b14:	200a      	movs	r0, #10
20000b16:	f7ff fac3 	bl	200000a0 <delay_milli>
	graphic_clear_screen();
20000b1a:	f7ff fce1 	bl	200004e0 <graphic_clear_screen>
	write_ascii("Game over! ", "");
20000b1e:	4a0a      	ldr	r2, [pc, #40]	; (20000b48 <main+0x2d0>)
20000b20:	4b11      	ldr	r3, [pc, #68]	; (20000b68 <main+0x2f0>)
20000b22:	0011      	movs	r1, r2
20000b24:	0018      	movs	r0, r3
20000b26:	f7ff fca5 	bl	20000474 <write_ascii>

}
20000b2a:	46c0      	nop			; (mov r8, r8)
20000b2c:	46bd      	mov	sp, r7
20000b2e:	4b0f      	ldr	r3, [pc, #60]	; (20000b6c <main+0x2f4>)
20000b30:	449d      	add	sp, r3
20000b32:	bdf0      	pop	{r4, r5, r6, r7, pc}
20000b34:	ffffb7c4 			; <UNDEFINED> instruction: 0xffffb7c4
20000b38:	2000a070 	andcs	sl, r0, r0, ror r0
20000b3c:	0000482c 	andeq	r4, r0, ip, lsr #16
20000b40:	2000a04c 	andcs	sl, r0, ip, asr #32
20000b44:	00004828 	andeq	r4, r0, r8, lsr #16
20000b48:	2000a108 	andcs	sl, r0, r8, lsl #2
20000b4c:	2000a10c 	andcs	sl, r0, ip, lsl #2
20000b50:	00004834 	andeq	r4, r0, r4, lsr r8
20000b54:	2000a130 	andcs	sl, r0, r0, lsr r1
20000b58:	ffffb7f0 			; <UNDEFINED> instruction: 0xffffb7f0
20000b5c:	00004838 	andeq	r4, r0, r8, lsr r8
20000b60:	ffffb7c8 			; <UNDEFINED> instruction: 0xffffb7c8
20000b64:	00004830 	andeq	r4, r0, r0, lsr r8
20000b68:	2000a114 	andcs	sl, r0, r4, lsl r1
20000b6c:	0000483c 	andeq	r4, r0, ip, lsr r8

20000b70 <activateRow>:

/*
 * Helper Functions
 */
void activateRow(unsigned int row)
{
20000b70:	b580      	push	{r7, lr}
20000b72:	b082      	sub	sp, #8
20000b74:	af00      	add	r7, sp, #0
20000b76:	6078      	str	r0, [r7, #4]
	switch(row){
20000b78:	687b      	ldr	r3, [r7, #4]
20000b7a:	2b04      	cmp	r3, #4
20000b7c:	d01b      	beq.n	20000bb6 <activateRow+0x46>
20000b7e:	687b      	ldr	r3, [r7, #4]
20000b80:	2b04      	cmp	r3, #4
20000b82:	d81c      	bhi.n	20000bbe <activateRow+0x4e>
20000b84:	687b      	ldr	r3, [r7, #4]
20000b86:	2b03      	cmp	r3, #3
20000b88:	d011      	beq.n	20000bae <activateRow+0x3e>
20000b8a:	687b      	ldr	r3, [r7, #4]
20000b8c:	2b03      	cmp	r3, #3
20000b8e:	d816      	bhi.n	20000bbe <activateRow+0x4e>
20000b90:	687b      	ldr	r3, [r7, #4]
20000b92:	2b01      	cmp	r3, #1
20000b94:	d003      	beq.n	20000b9e <activateRow+0x2e>
20000b96:	687b      	ldr	r3, [r7, #4]
20000b98:	2b02      	cmp	r3, #2
20000b9a:	d004      	beq.n	20000ba6 <activateRow+0x36>
20000b9c:	e00f      	b.n	20000bbe <activateRow+0x4e>
		case 1: GPIO_D.odrHigh=0x10; break;
20000b9e:	4b0c      	ldr	r3, [pc, #48]	; (20000bd0 <activateRow+0x60>)
20000ba0:	2210      	movs	r2, #16
20000ba2:	755a      	strb	r2, [r3, #21]
20000ba4:	e00f      	b.n	20000bc6 <activateRow+0x56>
		case 2: GPIO_D.odrHigh=0x20; break;
20000ba6:	4b0a      	ldr	r3, [pc, #40]	; (20000bd0 <activateRow+0x60>)
20000ba8:	2220      	movs	r2, #32
20000baa:	755a      	strb	r2, [r3, #21]
20000bac:	e00b      	b.n	20000bc6 <activateRow+0x56>
		case 3: GPIO_D.odrHigh=0x40; break;
20000bae:	4b08      	ldr	r3, [pc, #32]	; (20000bd0 <activateRow+0x60>)
20000bb0:	2240      	movs	r2, #64	; 0x40
20000bb2:	755a      	strb	r2, [r3, #21]
20000bb4:	e007      	b.n	20000bc6 <activateRow+0x56>
		case 4: GPIO_D.odrHigh=0x80; break;
20000bb6:	4b06      	ldr	r3, [pc, #24]	; (20000bd0 <activateRow+0x60>)
20000bb8:	2280      	movs	r2, #128	; 0x80
20000bba:	755a      	strb	r2, [r3, #21]
20000bbc:	e003      	b.n	20000bc6 <activateRow+0x56>
		
		default: GPIO_D.odrHigh=0;
20000bbe:	4b04      	ldr	r3, [pc, #16]	; (20000bd0 <activateRow+0x60>)
20000bc0:	2200      	movs	r2, #0
20000bc2:	755a      	strb	r2, [r3, #21]
	}
}
20000bc4:	46c0      	nop			; (mov r8, r8)
20000bc6:	46c0      	nop			; (mov r8, r8)
20000bc8:	46bd      	mov	sp, r7
20000bca:	b002      	add	sp, #8
20000bcc:	bd80      	pop	{r7, pc}
20000bce:	46c0      	nop			; (mov r8, r8)
20000bd0:	40020c00 	andmi	r0, r2, r0, lsl #24

20000bd4 <readCol>:

int readCol(void)
{
20000bd4:	b580      	push	{r7, lr}
20000bd6:	b082      	sub	sp, #8
20000bd8:	af00      	add	r7, sp, #0
	unsigned char c;
	c = GPIO_D.idrHigh;
20000bda:	4a12      	ldr	r2, [pc, #72]	; (20000c24 <readCol+0x50>)
20000bdc:	1dfb      	adds	r3, r7, #7
20000bde:	7c52      	ldrb	r2, [r2, #17]
20000be0:	701a      	strb	r2, [r3, #0]
	if(c & 8) return 4;
20000be2:	1dfb      	adds	r3, r7, #7
20000be4:	781b      	ldrb	r3, [r3, #0]
20000be6:	2208      	movs	r2, #8
20000be8:	4013      	ands	r3, r2
20000bea:	d001      	beq.n	20000bf0 <readCol+0x1c>
20000bec:	2304      	movs	r3, #4
20000bee:	e015      	b.n	20000c1c <readCol+0x48>
	if(c & 4) return 3;
20000bf0:	1dfb      	adds	r3, r7, #7
20000bf2:	781b      	ldrb	r3, [r3, #0]
20000bf4:	2204      	movs	r2, #4
20000bf6:	4013      	ands	r3, r2
20000bf8:	d001      	beq.n	20000bfe <readCol+0x2a>
20000bfa:	2303      	movs	r3, #3
20000bfc:	e00e      	b.n	20000c1c <readCol+0x48>
	if(c & 2) return 2;
20000bfe:	1dfb      	adds	r3, r7, #7
20000c00:	781b      	ldrb	r3, [r3, #0]
20000c02:	2202      	movs	r2, #2
20000c04:	4013      	ands	r3, r2
20000c06:	d001      	beq.n	20000c0c <readCol+0x38>
20000c08:	2302      	movs	r3, #2
20000c0a:	e007      	b.n	20000c1c <readCol+0x48>
	if(c & 1) return 1;
20000c0c:	1dfb      	adds	r3, r7, #7
20000c0e:	781b      	ldrb	r3, [r3, #0]
20000c10:	2201      	movs	r2, #1
20000c12:	4013      	ands	r3, r2
20000c14:	d001      	beq.n	20000c1a <readCol+0x46>
20000c16:	2301      	movs	r3, #1
20000c18:	e000      	b.n	20000c1c <readCol+0x48>
	return 0;
20000c1a:	2300      	movs	r3, #0
}
20000c1c:	0018      	movs	r0, r3
20000c1e:	46bd      	mov	sp, r7
20000c20:	b002      	add	sp, #8
20000c22:	bd80      	pop	{r7, pc}
20000c24:	40020c00 	andmi	r0, r2, r0, lsl #24

20000c28 <keyb>:

/*
 * Main Function
 */
unsigned char keyb(void)
{
20000c28:	b590      	push	{r4, r7, lr}
20000c2a:	b087      	sub	sp, #28
20000c2c:	af00      	add	r7, sp, #0
	unsigned char key[]=
20000c2e:	003b      	movs	r3, r7
20000c30:	4a16      	ldr	r2, [pc, #88]	; (20000c8c <keyb+0x64>)
20000c32:	ca13      	ldmia	r2!, {r0, r1, r4}
20000c34:	c313      	stmia	r3!, {r0, r1, r4}
20000c36:	6812      	ldr	r2, [r2, #0]
20000c38:	601a      	str	r2, [r3, #0]
	{1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE,0,0xF,0xD};
	int row, col;
	for(row = 1; row <= 4; row++){
20000c3a:	2301      	movs	r3, #1
20000c3c:	617b      	str	r3, [r7, #20]
20000c3e:	e019      	b.n	20000c74 <keyb+0x4c>
		activateRow(row);
20000c40:	697b      	ldr	r3, [r7, #20]
20000c42:	0018      	movs	r0, r3
20000c44:	f7ff ff94 	bl	20000b70 <activateRow>
		if(col=readCol()){
20000c48:	f7ff ffc4 	bl	20000bd4 <readCol>
20000c4c:	0003      	movs	r3, r0
20000c4e:	613b      	str	r3, [r7, #16]
20000c50:	693b      	ldr	r3, [r7, #16]
20000c52:	2b00      	cmp	r3, #0
20000c54:	d00b      	beq.n	20000c6e <keyb+0x46>
			activateRow(0);
20000c56:	2000      	movs	r0, #0
20000c58:	f7ff ff8a 	bl	20000b70 <activateRow>
			return key[4*(row-1)+(col-1)];
20000c5c:	697b      	ldr	r3, [r7, #20]
20000c5e:	3b01      	subs	r3, #1
20000c60:	009a      	lsls	r2, r3, #2
20000c62:	693b      	ldr	r3, [r7, #16]
20000c64:	3b01      	subs	r3, #1
20000c66:	18d3      	adds	r3, r2, r3
20000c68:	003a      	movs	r2, r7
20000c6a:	5cd3      	ldrb	r3, [r2, r3]
20000c6c:	e009      	b.n	20000c82 <keyb+0x5a>
	for(row = 1; row <= 4; row++){
20000c6e:	697b      	ldr	r3, [r7, #20]
20000c70:	3301      	adds	r3, #1
20000c72:	617b      	str	r3, [r7, #20]
20000c74:	697b      	ldr	r3, [r7, #20]
20000c76:	2b04      	cmp	r3, #4
20000c78:	dde2      	ble.n	20000c40 <keyb+0x18>
		}
	}
	activateRow(0);
20000c7a:	2000      	movs	r0, #0
20000c7c:	f7ff ff78 	bl	20000b70 <activateRow>
	return(0xFF);
20000c80:	23ff      	movs	r3, #255	; 0xff
20000c82:	0018      	movs	r0, r3
20000c84:	46bd      	mov	sp, r7
20000c86:	b007      	add	sp, #28
20000c88:	bd90      	pop	{r4, r7, pc}
20000c8a:	46c0      	nop			; (mov r8, r8)
20000c8c:	2000a120 	andcs	sl, r0, r0, lsr #2

20000c90 <init_keypad>:
#include "declarations.h"

// starta klockorna
//	*((unsigned long *) 0x40023830) = 0x18;
 void init_keypad() 
 {
20000c90:	b580      	push	{r7, lr}
20000c92:	af00      	add	r7, sp, #0
	GPIO_D.moder = 0x55000000;
20000c94:	4b08      	ldr	r3, [pc, #32]	; (20000cb8 <init_keypad+0x28>)
20000c96:	22aa      	movs	r2, #170	; 0xaa
20000c98:	05d2      	lsls	r2, r2, #23
20000c9a:	601a      	str	r2, [r3, #0]
	GPIO_D.otyper = 0;
20000c9c:	4b06      	ldr	r3, [pc, #24]	; (20000cb8 <init_keypad+0x28>)
20000c9e:	2200      	movs	r2, #0
20000ca0:	809a      	strh	r2, [r3, #4]
	GPIO_D.pupdr = 0xAA0000;
20000ca2:	4b05      	ldr	r3, [pc, #20]	; (20000cb8 <init_keypad+0x28>)
20000ca4:	22aa      	movs	r2, #170	; 0xaa
20000ca6:	0412      	lsls	r2, r2, #16
20000ca8:	60da      	str	r2, [r3, #12]
	GPIO_D.ospeedr = 0xFF000000;
20000caa:	4b03      	ldr	r3, [pc, #12]	; (20000cb8 <init_keypad+0x28>)
20000cac:	22ff      	movs	r2, #255	; 0xff
20000cae:	0612      	lsls	r2, r2, #24
20000cb0:	609a      	str	r2, [r3, #8]
}
20000cb2:	46c0      	nop			; (mov r8, r8)
20000cb4:	46bd      	mov	sp, r7
20000cb6:	bd80      	pop	{r7, pc}
20000cb8:	40020c00 	andmi	r0, r2, r0, lsl #24

20000cbc <init_ascii>:

void init_ascii()
{
20000cbc:	b580      	push	{r7, lr}
20000cbe:	af00      	add	r7, sp, #0
	GPIO_E.moder = 0x55555555;
20000cc0:	4b05      	ldr	r3, [pc, #20]	; (20000cd8 <init_ascii+0x1c>)
20000cc2:	4a06      	ldr	r2, [pc, #24]	; (20000cdc <init_ascii+0x20>)
20000cc4:	601a      	str	r2, [r3, #0]
	GPIO_E.pupdr = 0x55550000;
20000cc6:	4b04      	ldr	r3, [pc, #16]	; (20000cd8 <init_ascii+0x1c>)
20000cc8:	4a05      	ldr	r2, [pc, #20]	; (20000ce0 <init_ascii+0x24>)
20000cca:	60da      	str	r2, [r3, #12]
	GPIO_E.otyper = 0;
20000ccc:	4b02      	ldr	r3, [pc, #8]	; (20000cd8 <init_ascii+0x1c>)
20000cce:	2200      	movs	r2, #0
20000cd0:	809a      	strh	r2, [r3, #4]
}
20000cd2:	46c0      	nop			; (mov r8, r8)
20000cd4:	46bd      	mov	sp, r7
20000cd6:	bd80      	pop	{r7, pc}
20000cd8:	40021000 	andmi	r1, r2, r0
20000cdc:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
20000ce0:	55550000 	ldrbpl	r0, [r5, #-0]

20000ce4 <init_timer6>:

void init_timer6()
{
20000ce4:	b580      	push	{r7, lr}
20000ce6:	af00      	add	r7, sp, #0
	*TIM6_CR1 &= ~CEN; //stoppa r√§knarmodul
20000ce8:	4b0b      	ldr	r3, [pc, #44]	; (20000d18 <init_timer6+0x34>)
20000cea:	881b      	ldrh	r3, [r3, #0]
20000cec:	b29b      	uxth	r3, r3
20000cee:	4a0a      	ldr	r2, [pc, #40]	; (20000d18 <init_timer6+0x34>)
20000cf0:	2101      	movs	r1, #1
20000cf2:	438b      	bics	r3, r1
20000cf4:	b29b      	uxth	r3, r3
20000cf6:	8013      	strh	r3, [r2, #0]
	*TIM6_ARR = 0xFFFF; //s√§tt r√§knarreg. till maxv√§rde
20000cf8:	4b08      	ldr	r3, [pc, #32]	; (20000d1c <init_timer6+0x38>)
20000cfa:	2201      	movs	r2, #1
20000cfc:	4252      	negs	r2, r2
20000cfe:	801a      	strh	r2, [r3, #0]
	*TIM6_CR1 |= (CEN|UDIS); //inget update-event
20000d00:	4b05      	ldr	r3, [pc, #20]	; (20000d18 <init_timer6+0x34>)
20000d02:	881b      	ldrh	r3, [r3, #0]
20000d04:	b29b      	uxth	r3, r3
20000d06:	4a04      	ldr	r2, [pc, #16]	; (20000d18 <init_timer6+0x34>)
20000d08:	2103      	movs	r1, #3
20000d0a:	430b      	orrs	r3, r1
20000d0c:	b29b      	uxth	r3, r3
20000d0e:	8013      	strh	r3, [r2, #0]
	//starta r√§knarmodul
}
20000d10:	46c0      	nop			; (mov r8, r8)
20000d12:	46bd      	mov	sp, r7
20000d14:	bd80      	pop	{r7, pc}
20000d16:	46c0      	nop			; (mov r8, r8)
20000d18:	40001000 	andmi	r1, r0, r0
20000d1c:	4000102c 	andmi	r1, r0, ip, lsr #32

20000d20 <init_app>:

void init_app()
{
20000d20:	b580      	push	{r7, lr}
20000d22:	af00      	add	r7, sp, #0
	init_keypad();
20000d24:	f7ff ffb4 	bl	20000c90 <init_keypad>
	init_ascii();
20000d28:	f7ff ffc8 	bl	20000cbc <init_ascii>
	init_timer6();
20000d2c:	f7ff ffda 	bl	20000ce4 <init_timer6>
20000d30:	46c0      	nop			; (mov r8, r8)
20000d32:	46bd      	mov	sp, r7
20000d34:	bd80      	pop	{r7, pc}
20000d36:	46c0      	nop			; (mov r8, r8)

20000d38 <__udivsi3>:
20000d38:	2200      	movs	r2, #0
20000d3a:	0843      	lsrs	r3, r0, #1
20000d3c:	428b      	cmp	r3, r1
20000d3e:	d374      	bcc.n	20000e2a <__udivsi3+0xf2>
20000d40:	0903      	lsrs	r3, r0, #4
20000d42:	428b      	cmp	r3, r1
20000d44:	d35f      	bcc.n	20000e06 <__udivsi3+0xce>
20000d46:	0a03      	lsrs	r3, r0, #8
20000d48:	428b      	cmp	r3, r1
20000d4a:	d344      	bcc.n	20000dd6 <__udivsi3+0x9e>
20000d4c:	0b03      	lsrs	r3, r0, #12
20000d4e:	428b      	cmp	r3, r1
20000d50:	d328      	bcc.n	20000da4 <__udivsi3+0x6c>
20000d52:	0c03      	lsrs	r3, r0, #16
20000d54:	428b      	cmp	r3, r1
20000d56:	d30d      	bcc.n	20000d74 <__udivsi3+0x3c>
20000d58:	22ff      	movs	r2, #255	; 0xff
20000d5a:	0209      	lsls	r1, r1, #8
20000d5c:	ba12      	rev	r2, r2
20000d5e:	0c03      	lsrs	r3, r0, #16
20000d60:	428b      	cmp	r3, r1
20000d62:	d302      	bcc.n	20000d6a <__udivsi3+0x32>
20000d64:	1212      	asrs	r2, r2, #8
20000d66:	0209      	lsls	r1, r1, #8
20000d68:	d065      	beq.n	20000e36 <__udivsi3+0xfe>
20000d6a:	0b03      	lsrs	r3, r0, #12
20000d6c:	428b      	cmp	r3, r1
20000d6e:	d319      	bcc.n	20000da4 <__udivsi3+0x6c>
20000d70:	e000      	b.n	20000d74 <__udivsi3+0x3c>
20000d72:	0a09      	lsrs	r1, r1, #8
20000d74:	0bc3      	lsrs	r3, r0, #15
20000d76:	428b      	cmp	r3, r1
20000d78:	d301      	bcc.n	20000d7e <__udivsi3+0x46>
20000d7a:	03cb      	lsls	r3, r1, #15
20000d7c:	1ac0      	subs	r0, r0, r3
20000d7e:	4152      	adcs	r2, r2
20000d80:	0b83      	lsrs	r3, r0, #14
20000d82:	428b      	cmp	r3, r1
20000d84:	d301      	bcc.n	20000d8a <__udivsi3+0x52>
20000d86:	038b      	lsls	r3, r1, #14
20000d88:	1ac0      	subs	r0, r0, r3
20000d8a:	4152      	adcs	r2, r2
20000d8c:	0b43      	lsrs	r3, r0, #13
20000d8e:	428b      	cmp	r3, r1
20000d90:	d301      	bcc.n	20000d96 <__udivsi3+0x5e>
20000d92:	034b      	lsls	r3, r1, #13
20000d94:	1ac0      	subs	r0, r0, r3
20000d96:	4152      	adcs	r2, r2
20000d98:	0b03      	lsrs	r3, r0, #12
20000d9a:	428b      	cmp	r3, r1
20000d9c:	d301      	bcc.n	20000da2 <__udivsi3+0x6a>
20000d9e:	030b      	lsls	r3, r1, #12
20000da0:	1ac0      	subs	r0, r0, r3
20000da2:	4152      	adcs	r2, r2
20000da4:	0ac3      	lsrs	r3, r0, #11
20000da6:	428b      	cmp	r3, r1
20000da8:	d301      	bcc.n	20000dae <__udivsi3+0x76>
20000daa:	02cb      	lsls	r3, r1, #11
20000dac:	1ac0      	subs	r0, r0, r3
20000dae:	4152      	adcs	r2, r2
20000db0:	0a83      	lsrs	r3, r0, #10
20000db2:	428b      	cmp	r3, r1
20000db4:	d301      	bcc.n	20000dba <__udivsi3+0x82>
20000db6:	028b      	lsls	r3, r1, #10
20000db8:	1ac0      	subs	r0, r0, r3
20000dba:	4152      	adcs	r2, r2
20000dbc:	0a43      	lsrs	r3, r0, #9
20000dbe:	428b      	cmp	r3, r1
20000dc0:	d301      	bcc.n	20000dc6 <__udivsi3+0x8e>
20000dc2:	024b      	lsls	r3, r1, #9
20000dc4:	1ac0      	subs	r0, r0, r3
20000dc6:	4152      	adcs	r2, r2
20000dc8:	0a03      	lsrs	r3, r0, #8
20000dca:	428b      	cmp	r3, r1
20000dcc:	d301      	bcc.n	20000dd2 <__udivsi3+0x9a>
20000dce:	020b      	lsls	r3, r1, #8
20000dd0:	1ac0      	subs	r0, r0, r3
20000dd2:	4152      	adcs	r2, r2
20000dd4:	d2cd      	bcs.n	20000d72 <__udivsi3+0x3a>
20000dd6:	09c3      	lsrs	r3, r0, #7
20000dd8:	428b      	cmp	r3, r1
20000dda:	d301      	bcc.n	20000de0 <__udivsi3+0xa8>
20000ddc:	01cb      	lsls	r3, r1, #7
20000dde:	1ac0      	subs	r0, r0, r3
20000de0:	4152      	adcs	r2, r2
20000de2:	0983      	lsrs	r3, r0, #6
20000de4:	428b      	cmp	r3, r1
20000de6:	d301      	bcc.n	20000dec <__udivsi3+0xb4>
20000de8:	018b      	lsls	r3, r1, #6
20000dea:	1ac0      	subs	r0, r0, r3
20000dec:	4152      	adcs	r2, r2
20000dee:	0943      	lsrs	r3, r0, #5
20000df0:	428b      	cmp	r3, r1
20000df2:	d301      	bcc.n	20000df8 <__udivsi3+0xc0>
20000df4:	014b      	lsls	r3, r1, #5
20000df6:	1ac0      	subs	r0, r0, r3
20000df8:	4152      	adcs	r2, r2
20000dfa:	0903      	lsrs	r3, r0, #4
20000dfc:	428b      	cmp	r3, r1
20000dfe:	d301      	bcc.n	20000e04 <__udivsi3+0xcc>
20000e00:	010b      	lsls	r3, r1, #4
20000e02:	1ac0      	subs	r0, r0, r3
20000e04:	4152      	adcs	r2, r2
20000e06:	08c3      	lsrs	r3, r0, #3
20000e08:	428b      	cmp	r3, r1
20000e0a:	d301      	bcc.n	20000e10 <__udivsi3+0xd8>
20000e0c:	00cb      	lsls	r3, r1, #3
20000e0e:	1ac0      	subs	r0, r0, r3
20000e10:	4152      	adcs	r2, r2
20000e12:	0883      	lsrs	r3, r0, #2
20000e14:	428b      	cmp	r3, r1
20000e16:	d301      	bcc.n	20000e1c <__udivsi3+0xe4>
20000e18:	008b      	lsls	r3, r1, #2
20000e1a:	1ac0      	subs	r0, r0, r3
20000e1c:	4152      	adcs	r2, r2
20000e1e:	0843      	lsrs	r3, r0, #1
20000e20:	428b      	cmp	r3, r1
20000e22:	d301      	bcc.n	20000e28 <__udivsi3+0xf0>
20000e24:	004b      	lsls	r3, r1, #1
20000e26:	1ac0      	subs	r0, r0, r3
20000e28:	4152      	adcs	r2, r2
20000e2a:	1a41      	subs	r1, r0, r1
20000e2c:	d200      	bcs.n	20000e30 <__udivsi3+0xf8>
20000e2e:	4601      	mov	r1, r0
20000e30:	4152      	adcs	r2, r2
20000e32:	4610      	mov	r0, r2
20000e34:	4770      	bx	lr
20000e36:	e7ff      	b.n	20000e38 <__udivsi3+0x100>
20000e38:	b501      	push	{r0, lr}
20000e3a:	2000      	movs	r0, #0
20000e3c:	f000 f8f0 	bl	20001020 <__aeabi_idiv0>
20000e40:	bd02      	pop	{r1, pc}
20000e42:	46c0      	nop			; (mov r8, r8)

20000e44 <__aeabi_uidivmod>:
20000e44:	2900      	cmp	r1, #0
20000e46:	d0f7      	beq.n	20000e38 <__udivsi3+0x100>
20000e48:	e776      	b.n	20000d38 <__udivsi3>
20000e4a:	4770      	bx	lr

20000e4c <__divsi3>:
20000e4c:	4603      	mov	r3, r0
20000e4e:	430b      	orrs	r3, r1
20000e50:	d47f      	bmi.n	20000f52 <__divsi3+0x106>
20000e52:	2200      	movs	r2, #0
20000e54:	0843      	lsrs	r3, r0, #1
20000e56:	428b      	cmp	r3, r1
20000e58:	d374      	bcc.n	20000f44 <__divsi3+0xf8>
20000e5a:	0903      	lsrs	r3, r0, #4
20000e5c:	428b      	cmp	r3, r1
20000e5e:	d35f      	bcc.n	20000f20 <__divsi3+0xd4>
20000e60:	0a03      	lsrs	r3, r0, #8
20000e62:	428b      	cmp	r3, r1
20000e64:	d344      	bcc.n	20000ef0 <__divsi3+0xa4>
20000e66:	0b03      	lsrs	r3, r0, #12
20000e68:	428b      	cmp	r3, r1
20000e6a:	d328      	bcc.n	20000ebe <__divsi3+0x72>
20000e6c:	0c03      	lsrs	r3, r0, #16
20000e6e:	428b      	cmp	r3, r1
20000e70:	d30d      	bcc.n	20000e8e <__divsi3+0x42>
20000e72:	22ff      	movs	r2, #255	; 0xff
20000e74:	0209      	lsls	r1, r1, #8
20000e76:	ba12      	rev	r2, r2
20000e78:	0c03      	lsrs	r3, r0, #16
20000e7a:	428b      	cmp	r3, r1
20000e7c:	d302      	bcc.n	20000e84 <__divsi3+0x38>
20000e7e:	1212      	asrs	r2, r2, #8
20000e80:	0209      	lsls	r1, r1, #8
20000e82:	d065      	beq.n	20000f50 <__divsi3+0x104>
20000e84:	0b03      	lsrs	r3, r0, #12
20000e86:	428b      	cmp	r3, r1
20000e88:	d319      	bcc.n	20000ebe <__divsi3+0x72>
20000e8a:	e000      	b.n	20000e8e <__divsi3+0x42>
20000e8c:	0a09      	lsrs	r1, r1, #8
20000e8e:	0bc3      	lsrs	r3, r0, #15
20000e90:	428b      	cmp	r3, r1
20000e92:	d301      	bcc.n	20000e98 <__divsi3+0x4c>
20000e94:	03cb      	lsls	r3, r1, #15
20000e96:	1ac0      	subs	r0, r0, r3
20000e98:	4152      	adcs	r2, r2
20000e9a:	0b83      	lsrs	r3, r0, #14
20000e9c:	428b      	cmp	r3, r1
20000e9e:	d301      	bcc.n	20000ea4 <__divsi3+0x58>
20000ea0:	038b      	lsls	r3, r1, #14
20000ea2:	1ac0      	subs	r0, r0, r3
20000ea4:	4152      	adcs	r2, r2
20000ea6:	0b43      	lsrs	r3, r0, #13
20000ea8:	428b      	cmp	r3, r1
20000eaa:	d301      	bcc.n	20000eb0 <__divsi3+0x64>
20000eac:	034b      	lsls	r3, r1, #13
20000eae:	1ac0      	subs	r0, r0, r3
20000eb0:	4152      	adcs	r2, r2
20000eb2:	0b03      	lsrs	r3, r0, #12
20000eb4:	428b      	cmp	r3, r1
20000eb6:	d301      	bcc.n	20000ebc <__divsi3+0x70>
20000eb8:	030b      	lsls	r3, r1, #12
20000eba:	1ac0      	subs	r0, r0, r3
20000ebc:	4152      	adcs	r2, r2
20000ebe:	0ac3      	lsrs	r3, r0, #11
20000ec0:	428b      	cmp	r3, r1
20000ec2:	d301      	bcc.n	20000ec8 <__divsi3+0x7c>
20000ec4:	02cb      	lsls	r3, r1, #11
20000ec6:	1ac0      	subs	r0, r0, r3
20000ec8:	4152      	adcs	r2, r2
20000eca:	0a83      	lsrs	r3, r0, #10
20000ecc:	428b      	cmp	r3, r1
20000ece:	d301      	bcc.n	20000ed4 <__divsi3+0x88>
20000ed0:	028b      	lsls	r3, r1, #10
20000ed2:	1ac0      	subs	r0, r0, r3
20000ed4:	4152      	adcs	r2, r2
20000ed6:	0a43      	lsrs	r3, r0, #9
20000ed8:	428b      	cmp	r3, r1
20000eda:	d301      	bcc.n	20000ee0 <__divsi3+0x94>
20000edc:	024b      	lsls	r3, r1, #9
20000ede:	1ac0      	subs	r0, r0, r3
20000ee0:	4152      	adcs	r2, r2
20000ee2:	0a03      	lsrs	r3, r0, #8
20000ee4:	428b      	cmp	r3, r1
20000ee6:	d301      	bcc.n	20000eec <__divsi3+0xa0>
20000ee8:	020b      	lsls	r3, r1, #8
20000eea:	1ac0      	subs	r0, r0, r3
20000eec:	4152      	adcs	r2, r2
20000eee:	d2cd      	bcs.n	20000e8c <__divsi3+0x40>
20000ef0:	09c3      	lsrs	r3, r0, #7
20000ef2:	428b      	cmp	r3, r1
20000ef4:	d301      	bcc.n	20000efa <__divsi3+0xae>
20000ef6:	01cb      	lsls	r3, r1, #7
20000ef8:	1ac0      	subs	r0, r0, r3
20000efa:	4152      	adcs	r2, r2
20000efc:	0983      	lsrs	r3, r0, #6
20000efe:	428b      	cmp	r3, r1
20000f00:	d301      	bcc.n	20000f06 <__divsi3+0xba>
20000f02:	018b      	lsls	r3, r1, #6
20000f04:	1ac0      	subs	r0, r0, r3
20000f06:	4152      	adcs	r2, r2
20000f08:	0943      	lsrs	r3, r0, #5
20000f0a:	428b      	cmp	r3, r1
20000f0c:	d301      	bcc.n	20000f12 <__divsi3+0xc6>
20000f0e:	014b      	lsls	r3, r1, #5
20000f10:	1ac0      	subs	r0, r0, r3
20000f12:	4152      	adcs	r2, r2
20000f14:	0903      	lsrs	r3, r0, #4
20000f16:	428b      	cmp	r3, r1
20000f18:	d301      	bcc.n	20000f1e <__divsi3+0xd2>
20000f1a:	010b      	lsls	r3, r1, #4
20000f1c:	1ac0      	subs	r0, r0, r3
20000f1e:	4152      	adcs	r2, r2
20000f20:	08c3      	lsrs	r3, r0, #3
20000f22:	428b      	cmp	r3, r1
20000f24:	d301      	bcc.n	20000f2a <__divsi3+0xde>
20000f26:	00cb      	lsls	r3, r1, #3
20000f28:	1ac0      	subs	r0, r0, r3
20000f2a:	4152      	adcs	r2, r2
20000f2c:	0883      	lsrs	r3, r0, #2
20000f2e:	428b      	cmp	r3, r1
20000f30:	d301      	bcc.n	20000f36 <__divsi3+0xea>
20000f32:	008b      	lsls	r3, r1, #2
20000f34:	1ac0      	subs	r0, r0, r3
20000f36:	4152      	adcs	r2, r2
20000f38:	0843      	lsrs	r3, r0, #1
20000f3a:	428b      	cmp	r3, r1
20000f3c:	d301      	bcc.n	20000f42 <__divsi3+0xf6>
20000f3e:	004b      	lsls	r3, r1, #1
20000f40:	1ac0      	subs	r0, r0, r3
20000f42:	4152      	adcs	r2, r2
20000f44:	1a41      	subs	r1, r0, r1
20000f46:	d200      	bcs.n	20000f4a <__divsi3+0xfe>
20000f48:	4601      	mov	r1, r0
20000f4a:	4152      	adcs	r2, r2
20000f4c:	4610      	mov	r0, r2
20000f4e:	4770      	bx	lr
20000f50:	e05d      	b.n	2000100e <__divsi3+0x1c2>
20000f52:	0fca      	lsrs	r2, r1, #31
20000f54:	d000      	beq.n	20000f58 <__divsi3+0x10c>
20000f56:	4249      	negs	r1, r1
20000f58:	1003      	asrs	r3, r0, #32
20000f5a:	d300      	bcc.n	20000f5e <__divsi3+0x112>
20000f5c:	4240      	negs	r0, r0
20000f5e:	4053      	eors	r3, r2
20000f60:	2200      	movs	r2, #0
20000f62:	469c      	mov	ip, r3
20000f64:	0903      	lsrs	r3, r0, #4
20000f66:	428b      	cmp	r3, r1
20000f68:	d32d      	bcc.n	20000fc6 <__divsi3+0x17a>
20000f6a:	0a03      	lsrs	r3, r0, #8
20000f6c:	428b      	cmp	r3, r1
20000f6e:	d312      	bcc.n	20000f96 <__divsi3+0x14a>
20000f70:	22fc      	movs	r2, #252	; 0xfc
20000f72:	0189      	lsls	r1, r1, #6
20000f74:	ba12      	rev	r2, r2
20000f76:	0a03      	lsrs	r3, r0, #8
20000f78:	428b      	cmp	r3, r1
20000f7a:	d30c      	bcc.n	20000f96 <__divsi3+0x14a>
20000f7c:	0189      	lsls	r1, r1, #6
20000f7e:	1192      	asrs	r2, r2, #6
20000f80:	428b      	cmp	r3, r1
20000f82:	d308      	bcc.n	20000f96 <__divsi3+0x14a>
20000f84:	0189      	lsls	r1, r1, #6
20000f86:	1192      	asrs	r2, r2, #6
20000f88:	428b      	cmp	r3, r1
20000f8a:	d304      	bcc.n	20000f96 <__divsi3+0x14a>
20000f8c:	0189      	lsls	r1, r1, #6
20000f8e:	d03a      	beq.n	20001006 <__divsi3+0x1ba>
20000f90:	1192      	asrs	r2, r2, #6
20000f92:	e000      	b.n	20000f96 <__divsi3+0x14a>
20000f94:	0989      	lsrs	r1, r1, #6
20000f96:	09c3      	lsrs	r3, r0, #7
20000f98:	428b      	cmp	r3, r1
20000f9a:	d301      	bcc.n	20000fa0 <__divsi3+0x154>
20000f9c:	01cb      	lsls	r3, r1, #7
20000f9e:	1ac0      	subs	r0, r0, r3
20000fa0:	4152      	adcs	r2, r2
20000fa2:	0983      	lsrs	r3, r0, #6
20000fa4:	428b      	cmp	r3, r1
20000fa6:	d301      	bcc.n	20000fac <__divsi3+0x160>
20000fa8:	018b      	lsls	r3, r1, #6
20000faa:	1ac0      	subs	r0, r0, r3
20000fac:	4152      	adcs	r2, r2
20000fae:	0943      	lsrs	r3, r0, #5
20000fb0:	428b      	cmp	r3, r1
20000fb2:	d301      	bcc.n	20000fb8 <__divsi3+0x16c>
20000fb4:	014b      	lsls	r3, r1, #5
20000fb6:	1ac0      	subs	r0, r0, r3
20000fb8:	4152      	adcs	r2, r2
20000fba:	0903      	lsrs	r3, r0, #4
20000fbc:	428b      	cmp	r3, r1
20000fbe:	d301      	bcc.n	20000fc4 <__divsi3+0x178>
20000fc0:	010b      	lsls	r3, r1, #4
20000fc2:	1ac0      	subs	r0, r0, r3
20000fc4:	4152      	adcs	r2, r2
20000fc6:	08c3      	lsrs	r3, r0, #3
20000fc8:	428b      	cmp	r3, r1
20000fca:	d301      	bcc.n	20000fd0 <__divsi3+0x184>
20000fcc:	00cb      	lsls	r3, r1, #3
20000fce:	1ac0      	subs	r0, r0, r3
20000fd0:	4152      	adcs	r2, r2
20000fd2:	0883      	lsrs	r3, r0, #2
20000fd4:	428b      	cmp	r3, r1
20000fd6:	d301      	bcc.n	20000fdc <__divsi3+0x190>
20000fd8:	008b      	lsls	r3, r1, #2
20000fda:	1ac0      	subs	r0, r0, r3
20000fdc:	4152      	adcs	r2, r2
20000fde:	d2d9      	bcs.n	20000f94 <__divsi3+0x148>
20000fe0:	0843      	lsrs	r3, r0, #1
20000fe2:	428b      	cmp	r3, r1
20000fe4:	d301      	bcc.n	20000fea <__divsi3+0x19e>
20000fe6:	004b      	lsls	r3, r1, #1
20000fe8:	1ac0      	subs	r0, r0, r3
20000fea:	4152      	adcs	r2, r2
20000fec:	1a41      	subs	r1, r0, r1
20000fee:	d200      	bcs.n	20000ff2 <__divsi3+0x1a6>
20000ff0:	4601      	mov	r1, r0
20000ff2:	4663      	mov	r3, ip
20000ff4:	4152      	adcs	r2, r2
20000ff6:	105b      	asrs	r3, r3, #1
20000ff8:	4610      	mov	r0, r2
20000ffa:	d301      	bcc.n	20001000 <__divsi3+0x1b4>
20000ffc:	4240      	negs	r0, r0
20000ffe:	2b00      	cmp	r3, #0
20001000:	d500      	bpl.n	20001004 <__divsi3+0x1b8>
20001002:	4249      	negs	r1, r1
20001004:	4770      	bx	lr
20001006:	4663      	mov	r3, ip
20001008:	105b      	asrs	r3, r3, #1
2000100a:	d300      	bcc.n	2000100e <__divsi3+0x1c2>
2000100c:	4240      	negs	r0, r0
2000100e:	b501      	push	{r0, lr}
20001010:	2000      	movs	r0, #0
20001012:	f000 f805 	bl	20001020 <__aeabi_idiv0>
20001016:	bd02      	pop	{r1, pc}

20001018 <__aeabi_idivmod>:
20001018:	2900      	cmp	r1, #0
2000101a:	d0f8      	beq.n	2000100e <__divsi3+0x1c2>
2000101c:	e716      	b.n	20000e4c <__divsi3>
2000101e:	4770      	bx	lr

20001020 <__aeabi_idiv0>:
20001020:	4770      	bx	lr
20001022:	46c0      	nop			; (mov r8, r8)

20001024 <snake_geometry>:
20001024:	00000010 	andeq	r0, r0, r0, lsl r0
20001028:	00000001 	andeq	r0, r0, r1
2000102c:	00000001 	andeq	r0, r0, r1
20001030:	00010000 	andeq	r0, r1, r0
20001034:	00030002 	andeq	r0, r3, r2
20001038:	01010100 	mrseq	r0, (UNDEF: 17)
2000103c:	01030102 	tsteq	r3, r2, lsl #2
20001040:	02010200 	andeq	r0, r1, #0, 4
20001044:	02030202 	andeq	r0, r3, #536870912	; 0x20000000
20001048:	03010300 	movweq	r0, #4864	; 0x1300
2000104c:	03030302 	movweq	r0, #13058	; 0x3302
	...

20004030 <apple_geometry>:
20004030:	0000000c 	andeq	r0, r0, ip
20004034:	00000001 	andeq	r0, r0, r1
20004038:	00000001 	andeq	r0, r0, r1
2000403c:	02000100 	andeq	r0, r0, #0, 2
20004040:	01010001 	tsteq	r1, r1
20004044:	03010201 	movweq	r0, #4609	; 0x1201
20004048:	01020002 	tsteq	r2, r2
2000404c:	03020202 	movweq	r0, #8706	; 0x2202
20004050:	02030103 	andeq	r0, r3, #-1073741824	; 0xc0000000
	...

2000703c <tail_geometry>:
2000703c:	0000000c 	andeq	r0, r0, ip
20007040:	00000001 	andeq	r0, r0, r1
20007044:	00000001 	andeq	r0, r0, r1
20007048:	00010000 	andeq	r0, r1, r0
2000704c:	00030002 	andeq	r0, r3, r2
20007050:	01030100 	mrseq	r0, (UNDEF: 19)
20007054:	02030200 	andeq	r0, r3, #0, 4
20007058:	03010300 	movweq	r0, #4864	; 0x1300
2000705c:	03030302 	movweq	r0, #13058	; 0x3302
	...

2000a048 <high_score>:
2000a048:	00000023 	andeq	r0, r0, r3, lsr #32

2000a04c <snake>:
2000a04c:	20001024 	andcs	r1, r0, r4, lsr #32
2000a050:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000a054:	00000000 	andeq	r0, r0, r0
2000a058:	00000018 	andeq	r0, r0, r8, lsl r0
2000a05c:	00000008 	andeq	r0, r0, r8
2000a060:	200004ed 	andcs	r0, r0, sp, ror #9
2000a064:	2000056f 	andcs	r0, r0, pc, ror #10
2000a068:	20000631 	andcs	r0, r0, r1, lsr r6
2000a06c:	20000611 	andcs	r0, r0, r1, lsl r6

2000a070 <apple>:
2000a070:	20004030 	andcs	r4, r0, r0, lsr r0
	...
2000a07c:	00000008 	andeq	r0, r0, r8
2000a080:	00000008 	andeq	r0, r0, r8
2000a084:	200004ed 	andcs	r0, r0, sp, ror #9
2000a088:	2000056f 	andcs	r0, r0, pc, ror #10
2000a08c:	2000065d 	andcs	r0, r0, sp, asr r6
2000a090:	20000611 	andcs	r0, r0, r1, lsl r6
2000a094:	7778797a 			; <UNDEFINED> instruction: 0x7778797a
2000a098:	73747576 	cmnvc	r4, #494927872	; 0x1d800000
2000a09c:	6f707172 	svcvs	0x00707172
2000a0a0:	6b6c6d6e 	blvs	21b25660 <points+0x1b1b530>
2000a0a4:	6768696a 	strbvs	r6, [r8, -sl, ror #18]!
2000a0a8:	63646566 	cmnvs	r4, #427819008	; 0x19800000
2000a0ac:	38396162 	ldmdacc	r9!, {r1, r5, r6, r8, sp, lr}
2000a0b0:	34353637 	ldrtcc	r3, [r5], #-1591	; 0xfffff9c9
2000a0b4:	30313233 	eorscc	r3, r1, r3, lsr r2
2000a0b8:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
2000a0bc:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
2000a0c0:	63626139 	cmnvs	r2, #1073741838	; 0x4000000e
2000a0c4:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
2000a0c8:	6b6a6968 	blvs	21aa4670 <points+0x1a9a540>
2000a0cc:	6f6e6d6c 	svcvs	0x006e6d6c
2000a0d0:	73727170 	cmnvc	r2, #112, 2
2000a0d4:	77767574 			; <UNDEFINED> instruction: 0x77767574
2000a0d8:	007a7978 	rsbseq	r7, sl, r8, ror r9
2000a0dc:	73657250 	cmnvc	r5, #80, 4
2000a0e0:	6e612073 	mcrvs	0, 3, r2, cr1, cr3, {3}
2000a0e4:	656b2079 	strbvs	r2, [fp, #-121]!	; 0xffffff87
2000a0e8:	00003a79 	andeq	r3, r0, r9, ror sl
2000a0ec:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
2000a0f0:	6f637320 	svcvs	0x00637320
2000a0f4:	203a6572 	eorscs	r6, sl, r2, ror r5
2000a0f8:	20202020 	eorcs	r2, r0, r0, lsr #32
2000a0fc:	20202020 	eorcs	r2, r0, r0, lsr #32
2000a100:	20202020 	eorcs	r2, r0, r0, lsr #32
2000a104:	00000020 	andeq	r0, r0, r0, lsr #32
2000a108:	00000000 	andeq	r0, r0, r0
2000a10c:	726f6353 	rsbvc	r6, pc, #1275068417	; 0x4c000001
2000a110:	00203a65 	eoreq	r3, r0, r5, ror #20
2000a114:	656d6147 	strbvs	r6, [sp, #-327]!	; 0xfffffeb9
2000a118:	65766f20 	ldrbvs	r6, [r6, #-3872]!	; 0xfffff0e0
2000a11c:	00202172 	eoreq	r2, r0, r2, ror r1
2000a120:	0a030201 	beq	200ca92c <points+0xc07fc>
2000a124:	0b060504 	bleq	2018b53c <points+0x18140c>
2000a128:	0c090807 	stceq	8, cr0, [r9], {7}
2000a12c:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 2000a0fc <apple+0x8c>

2000a130 <points>:
2000a130:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	000000f3 	strdeq	r0, [r0], -r3
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	000000c0 	andeq	r0, r0, r0, asr #1
      10:	00006e0c 	andeq	r6, r0, ip, lsl #28
	...
      1c:	07040200 	streq	r0, [r4, -r0, lsl #4]
      20:	00000053 	andeq	r0, r0, r3, asr r0
      24:	4d070202 	sfmmi	f0, 4, [r7, #-8]
      28:	02000000 	andeq	r0, r0, #0
      2c:	003f0801 	eorseq	r0, pc, r1, lsl #16
      30:	02030000 	andeq	r0, r3, #0
      34:	52093401 	andpl	r3, r9, #16777216	; 0x1000000
      38:	04000000 	streq	r0, [r0], #-0
      3c:	36010078 			; <UNDEFINED> instruction: 0x36010078
      40:	00002b10 	andeq	r2, r0, r0, lsl fp
      44:	79040000 	stmdbvc	r4, {}	; <UNPREDICTABLE>
      48:	13360100 	teqne	r6, #0, 2
      4c:	0000002b 	andeq	r0, r0, fp, lsr #32
      50:	39050001 	stmdbcc	r5, {r0}
      54:	01000000 	mrseq	r0, (UNDEF: 0)
      58:	00320337 	eorseq	r0, r2, r7, lsr r3
      5c:	0c060000 	stceq	0, cr0, [r6], {-0}
      60:	093b0130 	ldmdbeq	fp!, {r4, r5, r8}
      64:	0000009c 	muleq	r0, ip, r0
      68:	00015a07 	andeq	r5, r1, r7, lsl #20
      6c:	063d0100 	ldrteq	r0, [sp], -r0, lsl #2
      70:	0000009c 	muleq	r0, ip, r0
      74:	00b40700 	adcseq	r0, r4, r0, lsl #14
      78:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
      7c:	00009c06 	andeq	r9, r0, r6, lsl #24
      80:	ba070400 	blt	1c1088 <startup-0x1fe3ef78>
      84:	01000000 	mrseq	r0, (UNDEF: 0)
      88:	009c063f 	addseq	r0, ip, pc, lsr r6
      8c:	04080000 	streq	r0, [r8], #-0
      90:	01007870 	tsteq	r0, r0, ror r8
      94:	00a30840 	adceq	r0, r3, r0, asr #16
      98:	000c0000 	andeq	r0, ip, r0
      9c:	69050408 	stmdbvs	r5, {r3, sl}
      a0:	0900746e 	stmdbeq	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
      a4:	00000052 	andeq	r0, r0, r2, asr r0
      a8:	000000b4 	strheq	r0, [r0], -r4
      ac:	00001d0a 	andeq	r1, r0, sl, lsl #26
      b0:	0017ff00 	andseq	pc, r7, r0, lsl #30
      b4:	0003cf05 	andeq	ip, r3, r5, lsl #30
      b8:	03410100 	movteq	r0, #4352	; 0x1100
      bc:	0000005e 	andeq	r0, r0, lr, asr r0
      c0:	00014b0b 	andeq	r4, r1, fp, lsl #22
      c4:	0a5e0100 	beq	17804cc <startup-0x1e87fb34>
      c8:	000000b4 	strheq	r0, [r0], -r4
      cc:	10240305 	eorne	r0, r4, r5, lsl #6
      d0:	3c0b2000 	stccc	0, cr2, [fp], {-0}
      d4:	01000001 	tsteq	r0, r1
      d8:	00b40a5f 	adcseq	r0, r4, pc, asr sl
      dc:	03050000 	movweq	r0, #20480	; 0x5000
      e0:	20004030 	andcs	r4, r0, r0, lsr r0
      e4:	0000600b 	andeq	r6, r0, fp
      e8:	0a600100 	beq	18004f0 <startup-0x1e7ffb10>
      ec:	000000b4 	strheq	r0, [r0], -r4
      f0:	703c0305 	eorsvc	r0, ip, r5, lsl #6
      f4:	ca002000 	bgt	80fc <startup-0x1fff7f04>
      f8:	04000001 	streq	r0, [r0], #-1
      fc:	00009a00 	andeq	r9, r0, r0, lsl #20
     100:	c0010400 	andgt	r0, r1, r0, lsl #8
     104:	0c000000 	stceq	0, cr0, [r0], {-0}
     108:	0000016b 	andeq	r0, r0, fp, ror #2
     10c:	00000000 	andeq	r0, r0, r0
     110:	20000010 	andcs	r0, r0, r0, lsl r0
     114:	00000104 	andeq	r0, r0, r4, lsl #2
     118:	00000068 	andeq	r0, r0, r8, rrx
     11c:	53070402 	movwpl	r0, #29698	; 0x7402
     120:	02000000 	andeq	r0, r0, #0
     124:	004d0702 	subeq	r0, sp, r2, lsl #14
     128:	01020000 	mrseq	r0, (UNDEF: 2)
     12c:	00003f08 	andeq	r3, r0, r8, lsl #30
     130:	02020300 	andeq	r0, r2, #0, 6
     134:	005a0934 	subseq	r0, sl, r4, lsr r9
     138:	78040000 	stmdavc	r4, {}	; <UNPREDICTABLE>
     13c:	10360200 	eorsne	r0, r6, r0, lsl #4
     140:	00000033 	andeq	r0, r0, r3, lsr r0
     144:	00790400 	rsbseq	r0, r9, r0, lsl #8
     148:	33133602 	tstcc	r3, #2097152	; 0x200000
     14c:	01000000 	mrseq	r0, (UNDEF: 0)
     150:	00390500 	eorseq	r0, r9, r0, lsl #10
     154:	37020000 	strcc	r0, [r2, -r0]
     158:	00003a03 	andeq	r3, r0, r3, lsl #20
     15c:	300c0600 	andcc	r0, ip, r0, lsl #12
     160:	a4093b02 	strge	r3, [r9], #-2818	; 0xfffff4fe
     164:	07000000 	streq	r0, [r0, -r0]
     168:	0000015a 	andeq	r0, r0, sl, asr r1
     16c:	a4063d02 	strge	r3, [r6], #-3330	; 0xfffff2fe
     170:	00000000 	andeq	r0, r0, r0
     174:	0000b407 	andeq	fp, r0, r7, lsl #8
     178:	063e0200 	ldrteq	r0, [lr], -r0, lsl #4
     17c:	000000a4 	andeq	r0, r0, r4, lsr #1
     180:	00ba0704 	adcseq	r0, sl, r4, lsl #14
     184:	3f020000 	svccc	0x00020000
     188:	0000a406 	andeq	sl, r0, r6, lsl #8
     18c:	70040800 	andvc	r0, r4, r0, lsl #16
     190:	40020078 	andmi	r0, r2, r8, ror r0
     194:	0000ab08 	andeq	sl, r0, r8, lsl #22
     198:	08000c00 	stmdaeq	r0, {sl, fp}
     19c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     1a0:	5a090074 	bpl	240378 <startup-0x1fdbfc88>
     1a4:	bc000000 	stclt	0, cr0, [r0], {-0}
     1a8:	0a000000 	beq	1b0 <startup-0x1ffffe50>
     1ac:	00000025 	andeq	r0, r0, r5, lsr #32
     1b0:	050017ff 	streq	r1, [r0, #-2047]	; 0xfffff801
     1b4:	000003cf 	andeq	r0, r0, pc, asr #7
     1b8:	66034102 	strvs	r4, [r3], -r2, lsl #2
     1bc:	0b000000 	bleq	1c4 <startup-0x1ffffe3c>
     1c0:	0000014b 	andeq	r0, r0, fp, asr #2
     1c4:	bc0a5e02 	stclt	14, cr5, [sl], {2}
     1c8:	05000000 	streq	r0, [r0, #-0]
     1cc:	00102403 	andseq	r2, r0, r3, lsl #8
     1d0:	013c0b20 	teqeq	ip, r0, lsr #22
     1d4:	5f020000 	svcpl	0x00020000
     1d8:	0000bc0a 	andeq	fp, r0, sl, lsl #24
     1dc:	30030500 	andcc	r0, r3, r0, lsl #10
     1e0:	0b200040 	bleq	8002e8 <startup-0x1f7ffd18>
     1e4:	00000060 	andeq	r0, r0, r0, rrx
     1e8:	bc0a6002 	stclt	0, cr6, [sl], {2}
     1ec:	05000000 	streq	r0, [r0, #-0]
     1f0:	00703c03 	rsbseq	r3, r0, r3, lsl #24
     1f4:	01b80c20 			; <UNDEFINED> instruction: 0x01b80c20
     1f8:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
     1fc:	0000a406 	andeq	sl, r0, r6, lsl #8
     200:	0000c600 	andeq	ip, r0, r0, lsl #12
     204:	00004e20 	andeq	r4, r0, r0, lsr #28
     208:	539c0100 	orrspl	r0, ip, #0, 2
     20c:	0d000001 	stceq	0, cr0, [r0, #-4]
     210:	006e696d 	rsbeq	r6, lr, sp, ror #18
     214:	a4182801 	ldrge	r2, [r8], #-2049	; 0xfffff7ff
     218:	02000000 	andeq	r0, r0, #0
     21c:	6d0d6c91 	stcvs	12, cr6, [sp, #-580]	; 0xfffffdbc
     220:	01007861 	tsteq	r0, r1, ror #16
     224:	00a42128 	adceq	r2, r4, r8, lsr #2
     228:	91020000 	mrsls	r0, (UNDEF: 2)
     22c:	01640e68 	cmneq	r4, r8, ror #28
     230:	2a010000 	bcs	40238 <startup-0x1ffbfdc8>
     234:	00015308 	andeq	r5, r1, r8, lsl #6
     238:	76910200 	ldrvc	r0, [r1], r0, lsl #4
     23c:	0100630f 	tsteq	r0, pc, lsl #6
     240:	0033102b 	eorseq	r1, r3, fp, lsr #32
     244:	91020000 	mrsls	r0, (UNDEF: 2)
     248:	02020075 	andeq	r0, r2, #117	; 0x75
     24c:	0001de05 	andeq	sp, r1, r5, lsl #28
     250:	01d21000 	bicseq	r1, r2, r0
     254:	1d010000 	stcne	0, cr0, [r1, #-0]
     258:	0000a006 	andeq	sl, r0, r6
     25c:	00002620 	andeq	r2, r0, r0, lsr #12
     260:	7f9c0100 	svcvc	0x009c0100
     264:	0d000001 	stceq	0, cr0, [r0, #-4]
     268:	0100736d 	tsteq	r0, sp, ror #6
     26c:	00251f1d 	eoreq	r1, r5, sp, lsl pc
     270:	91020000 	mrsls	r0, (UNDEF: 2)
     274:	e8100074 	ldmda	r0, {r2, r4, r5, r6}
     278:	01000001 	tsteq	r0, r1
     27c:	00540610 	subseq	r0, r4, r0, lsl r6
     280:	004c2000 	subeq	r2, ip, r0
     284:	9c010000 	stcls	0, cr0, [r1], {-0}
     288:	000001bb 			; <UNDEFINED> instruction: 0x000001bb
     28c:	0073750d 	rsbseq	r7, r3, sp, lsl #10
     290:	251f1001 	ldrcs	r1, [pc, #-1]	; 297 <startup-0x1ffffd69>
     294:	02000000 	andeq	r0, r0, #0
     298:	74116c91 	ldrvc	r6, [r1], #-3217	; 0xfffff36f
     29c:	16200000 	strtne	r0, [r0], -r0
     2a0:	0f000000 	svceq	0x00000000
     2a4:	18010069 	stmdane	r1, {r0, r3, r5, r6}
     2a8:	0000a40b 	andeq	sl, r0, fp, lsl #8
     2ac:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     2b0:	c6120000 	ldrgt	r0, [r2], -r0
     2b4:	01000001 	tsteq	r0, r1
     2b8:	00100605 	andseq	r0, r0, r5, lsl #12
     2bc:	00442000 	subeq	r2, r4, r0
     2c0:	9c010000 	stcls	0, cr0, [r1], {-0}
     2c4:	0004a500 	andeq	sl, r4, r0, lsl #10
     2c8:	c8000400 	stmdagt	r0, {sl}
     2cc:	04000001 	streq	r0, [r0], #-1
     2d0:	0000c001 	andeq	ip, r0, r1
     2d4:	03540c00 	cmpeq	r4, #0, 24
     2d8:	00000000 	andeq	r0, r0, r0
     2dc:	01140000 	tsteq	r4, r0
     2e0:	03c02000 	biceq	r2, r0, #0
     2e4:	01930000 	orrseq	r0, r3, r0
     2e8:	28020000 	stmdacs	r2, {}	; <UNPREDICTABLE>
     2ec:	ff122002 			; <UNDEFINED> instruction: 0xff122002
     2f0:	03000000 	movweq	r0, #0
     2f4:	0000039d 	muleq	r0, sp, r3
     2f8:	040e2102 	streq	r2, [lr], #-258	; 0xfffffefe
     2fc:	00000001 	andeq	r0, r0, r1
     300:	00022703 	andeq	r2, r2, r3, lsl #14
     304:	14220200 	strtne	r0, [r2], #-512	; 0xfffffe00
     308:	0000010b 	andeq	r0, r0, fp, lsl #2
     30c:	02da0304 	sbcseq	r0, sl, #4, 6	; 0x10000000
     310:	23020000 	movwcs	r0, #8192	; 0x2000
     314:	00010b14 	andeq	r0, r1, r4, lsl fp
     318:	29030600 	stmdbcs	r3, {r9, sl}
     31c:	02000003 	andeq	r0, r0, #3
     320:	01040e24 	tsteq	r4, r4, lsr #28
     324:	03080000 	movweq	r0, #32768	; 0x8000
     328:	000002d4 	ldrdeq	r0, [r0], -r4
     32c:	040e2502 	streq	r2, [lr], #-1282	; 0xfffffafe
     330:	0c000001 	stceq	0, cr0, [r0], {1}
     334:	00033103 	andeq	r3, r3, r3, lsl #2
     338:	0f260200 	svceq	0x00260200
     33c:	00000112 	andeq	r0, r0, r2, lsl r1
     340:	03210310 			; <UNDEFINED> instruction: 0x03210310
     344:	27020000 	strcs	r0, [r2, -r0]
     348:	0001120f 	andeq	r1, r1, pc, lsl #4
     34c:	e4031100 	str	r1, [r3], #-256	; 0xffffff00
     350:	02000002 	andeq	r0, r0, #2
     354:	010b1428 	tsteq	fp, r8, lsr #8
     358:	03120000 	tsteq	r2, #0
     35c:	00000309 	andeq	r0, r0, r9, lsl #6
     360:	120f2902 	andne	r2, pc, #32768	; 0x8000
     364:	14000001 	strne	r0, [r0], #-1
     368:	00023a03 	andeq	r3, r2, r3, lsl #20
     36c:	0f2a0200 	svceq	0x002a0200
     370:	00000112 	andeq	r0, r0, r2, lsl r1
     374:	02ee0315 	rsceq	r0, lr, #1409286144	; 0x54000000
     378:	2b020000 	blcs	80380 <startup-0x1ff7fc80>
     37c:	00010b14 	andeq	r0, r1, r4, lsl fp
     380:	17031600 	strne	r1, [r3, -r0, lsl #12]
     384:	02000002 	andeq	r0, r0, #2
     388:	01040e2c 	tsteq	r4, ip, lsr #28
     38c:	03180000 	tsteq	r8, #0
     390:	000003a3 	andeq	r0, r0, r3, lsr #7
     394:	0b142d02 	bleq	50b7a4 <startup-0x1faf485c>
     398:	1c000001 	stcne	0, cr0, [r0], {1}
     39c:	0002f803 	andeq	pc, r2, r3, lsl #16
     3a0:	142e0200 	strtne	r0, [lr], #-512	; 0xfffffe00
     3a4:	0000010b 	andeq	r0, r0, fp, lsl #2
     3a8:	0282031e 	addeq	r0, r2, #2013265920	; 0x78000000
     3ac:	2f020000 	svccs	0x00020000
     3b0:	0001040e 	andeq	r0, r1, lr, lsl #8
     3b4:	7d032000 	stcvc	0, cr2, [r3, #-0]
     3b8:	02000002 	andeq	r0, r0, #2
     3bc:	01040e30 	tsteq	r4, r0, lsr lr
     3c0:	00240000 	eoreq	r0, r4, r0
     3c4:	00002504 	andeq	r2, r0, r4, lsl #10
     3c8:	07040500 	streq	r0, [r4, -r0, lsl #10]
     3cc:	00000053 	andeq	r0, r0, r3, asr r0
     3d0:	4d070205 	sfmmi	f0, 4, [r7, #-20]	; 0xffffffec
     3d4:	05000000 	streq	r0, [r0, #-0]
     3d8:	003f0801 	eorseq	r0, pc, r1, lsl #16
     3dc:	68060000 	stmdavs	r6, {}	; <UNPREDICTABLE>
     3e0:	02000002 	andeq	r0, r0, #2
     3e4:	01250a31 			; <UNDEFINED> instruction: 0x01250a31
     3e8:	04070000 	streq	r0, [r7], #-0
     3ec:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     3f0:	34020202 	strcc	r0, [r2], #-514	; 0xfffffdfe
     3f4:	00014b09 	andeq	r4, r1, r9, lsl #22
     3f8:	00780800 	rsbseq	r0, r8, r0, lsl #16
     3fc:	12103602 	andsne	r3, r0, #2097152	; 0x200000
     400:	00000001 	andeq	r0, r0, r1
     404:	02007908 	andeq	r7, r0, #8, 18	; 0x20000
     408:	01121336 	tsteq	r2, r6, lsr r3
     40c:	00010000 	andeq	r0, r1, r0
     410:	00003906 	andeq	r3, r0, r6, lsl #18
     414:	03370200 	teqeq	r7, #0, 4
     418:	0000012b 	andeq	r0, r0, fp, lsr #2
     41c:	02300c09 	eorseq	r0, r0, #2304	; 0x900
     420:	0195093b 	orrseq	r0, r5, fp, lsr r9
     424:	5a030000 	bpl	c042c <startup-0x1ff3fbd4>
     428:	02000001 	andeq	r0, r0, #1
     42c:	0195063d 	orrseq	r0, r5, sp, lsr r6
     430:	03000000 	movweq	r0, #0
     434:	000000b4 	strheq	r0, [r0], -r4
     438:	95063e02 	strls	r3, [r6, #-3586]	; 0xfffff1fe
     43c:	04000001 	streq	r0, [r0], #-1
     440:	0000ba03 	andeq	fp, r0, r3, lsl #20
     444:	063f0200 	ldrteq	r0, [pc], -r0, lsl #4
     448:	00000195 	muleq	r0, r5, r1
     44c:	78700808 	ldmdavc	r0!, {r3, fp}^
     450:	08400200 	stmdaeq	r0, {r9}^
     454:	0000019c 	muleq	r0, ip, r1
     458:	040a000c 	streq	r0, [sl], #-12
     45c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     460:	014b0b00 	cmpeq	fp, r0, lsl #22
     464:	01ad0000 			; <UNDEFINED> instruction: 0x01ad0000
     468:	040c0000 	streq	r0, [ip], #-0
     46c:	ff000001 			; <UNDEFINED> instruction: 0xff000001
     470:	cf060017 	svcgt	0x00060017
     474:	02000003 	andeq	r0, r0, #3
     478:	01570341 	cmpeq	r7, r1, asr #6
     47c:	4b0d0000 	blmi	340484 <startup-0x1fcbfb7c>
     480:	02000001 	andeq	r0, r0, #1
     484:	01ad0a5e 			; <UNDEFINED> instruction: 0x01ad0a5e
     488:	03050000 	movweq	r0, #20480	; 0x5000
     48c:	20001024 	andcs	r1, r0, r4, lsr #32
     490:	00013c0d 	andeq	r3, r1, sp, lsl #24
     494:	0a5f0200 	beq	17c0c9c <startup-0x1e83f364>
     498:	000001ad 	andeq	r0, r0, sp, lsr #3
     49c:	40300305 	eorsmi	r0, r0, r5, lsl #6
     4a0:	600d2000 	andvs	r2, sp, r0
     4a4:	02000000 	andeq	r0, r0, #0
     4a8:	01ad0a60 			; <UNDEFINED> instruction: 0x01ad0a60
     4ac:	03050000 	movweq	r0, #20480	; 0x5000
     4b0:	2000703c 	andcs	r7, r0, ip, lsr r0
     4b4:	00020b0e 	andeq	r0, r2, lr, lsl #22
     4b8:	05960100 	ldreq	r0, [r6, #256]	; 0x100
     4bc:	00000195 	muleq	r0, r5, r1
     4c0:	20000474 	andcs	r0, r0, r4, ror r4
     4c4:	00000060 	andeq	r0, r0, r0, rrx
     4c8:	02359c01 	eorseq	r9, r5, #256	; 0x100
     4cc:	620f0000 	andvs	r0, pc, #0
     4d0:	01000002 	tsteq	r0, r2
     4d4:	02351696 	eorseq	r1, r5, #157286400	; 0x9600000
     4d8:	91020000 	mrsls	r0, (UNDEF: 2)
     4dc:	02950f6c 	addseq	r0, r5, #108, 30	; 0x1b0
     4e0:	96010000 	strls	r0, [r1], -r0
     4e4:	00023524 	andeq	r3, r2, r4, lsr #10
     4e8:	68910200 	ldmvs	r1, {r9}
     4ec:	01007310 	tsteq	r0, r0, lsl r3
     4f0:	02350898 	eorseq	r0, r5, #152, 16	; 0x980000
     4f4:	91020000 	mrsls	r0, (UNDEF: 2)
     4f8:	04070074 	streq	r0, [r7], #-116	; 0xffffff8c
     4fc:	0000023b 	andeq	r0, r0, fp, lsr r2
     500:	48080105 	stmdami	r8, {r0, r2, r8}
     504:	11000000 	mrsne	r0, (UNDEF: 0)
     508:	0000022e 	andeq	r0, r0, lr, lsr #4
     50c:	28068d01 	stmdacs	r6, {r0, r8, sl, fp, pc}
     510:	4c200004 	stcmi	0, cr0, [r0], #-16
     514:	01000000 	mrseq	r0, (UNDEF: 0)
     518:	0002869c 	muleq	r2, ip, r6
     51c:	6f721200 	svcvs	0x00721200
     520:	8d010077 	stchi	0, cr0, [r1, #-476]	; 0xfffffe24
     524:	00011220 	andeq	r1, r1, r0, lsr #4
     528:	6f910200 	svcvs	0x00910200
     52c:	00034d0f 	andeq	r4, r3, pc, lsl #26
     530:	338d0100 	orrcc	r0, sp, #0, 2
     534:	00000112 	andeq	r0, r0, r2, lsl r1
     538:	106e9102 	rsbne	r9, lr, r2, lsl #2
     53c:	00726461 	rsbseq	r6, r2, r1, ror #8
     540:	3b078f01 	blcc	1e414c <startup-0x1fe1beb4>
     544:	02000002 	andeq	r0, r0, #2
     548:	11007791 			; <UNDEFINED> instruction: 0x11007791
     54c:	000003b8 			; <UNDEFINED> instruction: 0x000003b8
     550:	ec068501 	cfstr32	mvfx8, [r6], {1}
     554:	3c200003 	stccc	0, cr0, [r0], #-12
     558:	01000000 	mrseq	r0, (UNDEF: 0)
     55c:	0002aa9c 	muleq	r2, ip, sl
     560:	00631200 	rsbeq	r1, r3, r0, lsl #4
     564:	3b1c8501 	blcc	721970 <startup-0x1f8de690>
     568:	02000002 	andeq	r0, r0, #2
     56c:	13007791 	movwne	r7, #1937	; 0x791
     570:	0000021c 	andeq	r0, r0, ip, lsl r2
     574:	b2067601 	andlt	r7, r6, #1048576	; 0x100000
     578:	3a200003 	bcc	80058c <startup-0x1f7ffa74>
     57c:	01000000 	mrseq	r0, (UNDEF: 0)
     580:	0287119c 	addeq	r1, r7, #156, 2	; 0x27
     584:	6f010000 	svcvs	0x00010000
     588:	00037c06 	andeq	r7, r3, r6, lsl #24
     58c:	00003620 	andeq	r3, r0, r0, lsr #12
     590:	e29c0100 	adds	r0, ip, #0, 2
     594:	0f000002 	svceq	0x00000002
     598:	0000028d 	andeq	r0, r0, sp, lsl #5
     59c:	12236f01 	eorne	r6, r3, #1, 30
     5a0:	02000001 	andeq	r0, r0, #1
     5a4:	0e007791 	mcreq	7, 0, r7, cr0, cr1, {4}
     5a8:	000003a8 	andeq	r0, r0, r8, lsr #7
     5ac:	120f6501 	andne	r6, pc, #4194304	; 0x400000
     5b0:	34000001 	strcc	r0, [r0], #-1
     5b4:	48200003 	stmdami	r0!, {r0, r1}
     5b8:	01000000 	mrseq	r0, (UNDEF: 0)
     5bc:	00030a9c 	muleq	r3, ip, sl
     5c0:	00631000 	rsbeq	r1, r3, r0
     5c4:	3b076a01 	blcc	1dadd0 <startup-0x1fe25230>
     5c8:	02000002 	andeq	r0, r0, #2
     5cc:	0e006f91 	mcreq	15, 0, r6, cr0, cr1, {4}
     5d0:	00000247 	andeq	r0, r0, r7, asr #4
     5d4:	120f5901 	andne	r5, pc, #16384	; 0x4000
     5d8:	f4000001 	vst4.8	{d0-d3}, [r0], r1
     5dc:	40200002 	eormi	r0, r0, r2
     5e0:	01000000 	mrseq	r0, (UNDEF: 0)
     5e4:	0003329c 	muleq	r3, ip, r2
     5e8:	00631000 	rsbeq	r1, r3, r0
     5ec:	3b075b01 	blcc	1d71f8 <startup-0x1fe28e08>
     5f0:	02000002 	andeq	r0, r0, #2
     5f4:	11006f91 			; <UNDEFINED> instruction: 0x11006f91
     5f8:	00000310 	andeq	r0, r0, r0, lsl r3
     5fc:	ca065201 	bgt	194e08 <startup-0x1fe6b1f8>
     600:	2a200002 	bcs	800610 <startup-0x1f7ff9f0>
     604:	01000000 	mrseq	r0, (UNDEF: 0)
     608:	0003569c 	muleq	r3, ip, r6
     60c:	00631200 	rsbeq	r1, r3, r0, lsl #4
     610:	12265201 	eorne	r5, r6, #268435456	; 0x10000000
     614:	02000001 	andeq	r0, r0, #1
     618:	11007791 			; <UNDEFINED> instruction: 0x11007791
     61c:	000002c4 	andeq	r0, r0, r4, asr #5
     620:	a0064b01 	andge	r4, r6, r1, lsl #22
     624:	2a200002 	bcs	800634 <startup-0x1f7ff9cc>
     628:	01000000 	mrseq	r0, (UNDEF: 0)
     62c:	00037a9c 	muleq	r3, ip, sl
     630:	00631200 	rsbeq	r1, r3, r0, lsl #4
     634:	12254b01 	eorne	r4, r5, #1024	; 0x400
     638:	02000001 	andeq	r0, r0, #1
     63c:	0e007791 	mcreq	7, 0, r7, cr0, cr1, {4}
     640:	0000029b 	muleq	r0, fp, r2
     644:	3b064001 	blcc	190650 <startup-0x1fe6f9b0>
     648:	74000002 	strvc	r0, [r0], #-2
     64c:	2c200002 	stccs	0, cr0, [r0], #-8
     650:	01000000 	mrseq	r0, (UNDEF: 0)
     654:	0003a29c 	muleq	r3, ip, r2
     658:	00631000 	rsbeq	r1, r3, r0
     65c:	3b074201 	blcc	1d0e68 <startup-0x1fe2f198>
     660:	02000002 	andeq	r0, r0, #2
     664:	11007791 			; <UNDEFINED> instruction: 0x11007791
     668:	000001f4 	strdeq	r0, [r0], -r4
     66c:	44063601 	strmi	r3, [r6], #-1537	; 0xfffff9ff
     670:	30200002 	eorcc	r0, r0, r2
     674:	01000000 	mrseq	r0, (UNDEF: 0)
     678:	0003c69c 	muleq	r3, ip, r6
     67c:	00631200 	rsbeq	r1, r3, r0, lsl #4
     680:	122d3601 	eorne	r3, sp, #1048576	; 0x100000
     684:	02000001 	andeq	r0, r0, #1
     688:	14007791 	strne	r7, [r0], #-1937	; 0xfffff86f
     68c:	00000338 	andeq	r0, r0, r8, lsr r3
     690:	fc062e01 	stc2	14, cr2, [r6], {1}
     694:	48200001 	stmdami	r0!, {r0}
     698:	01000000 	mrseq	r0, (UNDEF: 0)
     69c:	0003f79c 	muleq	r3, ip, r7
     6a0:	00781200 	rsbseq	r1, r8, r0, lsl #4
     6a4:	3b222e01 	blcc	88beb0 <startup-0x1f774150>
     6a8:	02000002 	andeq	r0, r0, #2
     6ac:	63106f91 	tstvs	r0, #580	; 0x244
     6b0:	07300100 	ldreq	r0, [r0, -r0, lsl #2]!
     6b4:	0000023b 	andeq	r0, r0, fp, lsr r2
     6b8:	00779102 	rsbseq	r9, r7, r2, lsl #2
     6bc:	0002b114 	andeq	fp, r2, r4, lsl r1
     6c0:	06270100 	strteq	r0, [r7], -r0, lsl #2
     6c4:	200001c4 	andcs	r0, r0, r4, asr #3
     6c8:	00000038 	andeq	r0, r0, r8, lsr r0
     6cc:	04289c01 	strteq	r9, [r8], #-3073	; 0xfffff3ff
     6d0:	78120000 	ldmdavc	r2, {}	; <UNPREDICTABLE>
     6d4:	20270100 	eorcs	r0, r7, r0, lsl #2
     6d8:	0000023b 	andeq	r0, r0, fp, lsr r2
     6dc:	106f9102 	rsbne	r9, pc, r2, lsl #2
     6e0:	29010063 	stmdbcs	r1, {r0, r1, r5, r6}
     6e4:	00023b07 	andeq	r3, r2, r7, lsl #22
     6e8:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
     6ec:	02421500 	subeq	r1, r2, #0, 10
     6f0:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
     6f4:	00023507 	andeq	r3, r2, r7, lsl #10
     6f8:	00011400 	andeq	r1, r1, r0, lsl #8
     6fc:	0000b020 	andeq	fp, r0, r0, lsr #32
     700:	0f9c0100 	svceq	0x009c0100
     704:	00000277 	andeq	r0, r0, r7, ror r2
     708:	95100e01 	ldrls	r0, [r0, #-3585]	; 0xfffff1ff
     70c:	02000001 	andeq	r0, r0, #1
     710:	020f6491 	andeq	r6, pc, #-1862270976	; 0x91000000
     714:	01000003 	tsteq	r0, r3
     718:	02351d0e 	eorseq	r1, r5, #896	; 0x380
     71c:	91020000 	mrsls	r0, (UNDEF: 2)
     720:	026e0f60 	rsbeq	r0, lr, #96, 30	; 0x180
     724:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
     728:	00019529 	andeq	r9, r1, r9, lsr #10
     72c:	5c910200 	lfmpl	f0, 4, [r1], {0}
     730:	72747010 	rsbsvc	r7, r4, #16
     734:	0b130100 	bleq	4c0b3c <startup-0x1fb3f4c4>
     738:	00000235 	andeq	r0, r0, r5, lsr r2
     73c:	16749102 	ldrbtne	r9, [r4], -r2, lsl #2
     740:	000003c9 	andeq	r0, r0, r9, asr #7
     744:	351a1301 	ldrcc	r1, [sl, #-769]	; 0xfffffcff
     748:	02000002 	andeq	r0, r0, #2
     74c:	59167091 	ldmdbpl	r6, {r0, r4, r7, ip, sp, lr}
     750:	01000002 	tsteq	r0, r2
     754:	023b2913 	eorseq	r2, fp, #311296	; 0x4c000
     758:	91020000 	mrsls	r0, (UNDEF: 2)
     75c:	0273166b 	rsbseq	r1, r3, #112197632	; 0x6b00000
     760:	14010000 	strne	r0, [r1], #-0
     764:	00019509 	andeq	r9, r1, r9, lsl #10
     768:	6c910200 	lfmvs	f0, 4, [r1], {0}
     76c:	06900000 	ldreq	r0, [r0], r0
     770:	00040000 	andeq	r0, r4, r0
     774:	00000346 	andeq	r0, r0, r6, asr #6
     778:	00c00104 	sbceq	r0, r0, r4, lsl #2
     77c:	930c0000 	movwls	r0, #49152	; 0xc000
     780:	00000004 	andeq	r0, r0, r4
	...
     78c:	d3000000 	movwle	r0, #0
     790:	02000003 	andeq	r0, r0, #3
     794:	00530704 	subseq	r0, r3, r4, lsl #14
     798:	02020000 	andeq	r0, r2, #0
     79c:	00004d07 	andeq	r4, r0, r7, lsl #26
     7a0:	08010200 	stmdaeq	r1, {r9}
     7a4:	0000003f 	andeq	r0, r0, pc, lsr r0
     7a8:	34020203 	strcc	r0, [r2], #-515	; 0xfffffdfd
     7ac:	00005a09 	andeq	r5, r0, r9, lsl #20
     7b0:	00780400 	rsbseq	r0, r8, r0, lsl #8
     7b4:	33103602 	tstcc	r0, #2097152	; 0x200000
     7b8:	00000000 	andeq	r0, r0, r0
     7bc:	02007904 	andeq	r7, r0, #4, 18	; 0x10000
     7c0:	00331336 	eorseq	r1, r3, r6, lsr r3
     7c4:	00010000 	andeq	r0, r1, r0
     7c8:	00003905 	andeq	r3, r0, r5, lsl #18
     7cc:	03370200 	teqeq	r7, #0, 4
     7d0:	0000003a 	andeq	r0, r0, sl, lsr r0
     7d4:	02300c06 	eorseq	r0, r0, #1536	; 0x600
     7d8:	00a4093b 	adceq	r0, r4, fp, lsr r9
     7dc:	5a070000 	bpl	1c07e4 <startup-0x1fe3f81c>
     7e0:	02000001 	andeq	r0, r0, #1
     7e4:	00a4063d 	adceq	r0, r4, sp, lsr r6
     7e8:	07000000 	streq	r0, [r0, -r0]
     7ec:	000000b4 	strheq	r0, [r0], -r4
     7f0:	a4063e02 	strge	r3, [r6], #-3586	; 0xfffff1fe
     7f4:	04000000 	streq	r0, [r0], #-0
     7f8:	0000ba07 	andeq	fp, r0, r7, lsl #20
     7fc:	063f0200 	ldrteq	r0, [pc], -r0, lsl #4
     800:	000000a4 	andeq	r0, r0, r4, lsr #1
     804:	78700408 	ldmdavc	r0!, {r3, sl}^
     808:	08400200 	stmdaeq	r0, {r9}^
     80c:	000000ab 	andeq	r0, r0, fp, lsr #1
     810:	0408000c 	streq	r0, [r8], #-12
     814:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     818:	005a0900 	subseq	r0, sl, r0, lsl #18
     81c:	00bc0000 	adcseq	r0, ip, r0
     820:	250a0000 	strcs	r0, [sl, #-0]
     824:	ff000000 			; <UNDEFINED> instruction: 0xff000000
     828:	cf050017 	svcgt	0x00050017
     82c:	02000003 	andeq	r0, r0, #3
     830:	00660341 	rsbeq	r0, r6, r1, asr #6
     834:	ce050000 	cdpgt	0, 0, cr0, cr5, cr0, {0}
     838:	02000003 	andeq	r0, r0, #3
     83c:	00d40e41 	sbcseq	r0, r4, r1, asr #28
     840:	040b0000 	streq	r0, [fp], #-0
     844:	00000066 	andeq	r0, r0, r6, rrx
     848:	0005470c 	andeq	r4, r5, ip, lsl #14
     84c:	43022400 	movwmi	r2, #9216	; 0x2400
     850:	00015d10 	andeq	r5, r1, r0, lsl sp
     854:	65670400 	strbvs	r0, [r7, #-1024]!	; 0xfffffc00
     858:	4502006f 	strmi	r0, [r2, #-111]	; 0xffffff91
     85c:	0000c80c 	andeq	ip, r0, ip, lsl #16
     860:	f5070000 			; <UNDEFINED> instruction: 0xf5070000
     864:	02000003 	andeq	r0, r0, #3
     868:	00a40646 	adceq	r0, r4, r6, asr #12
     86c:	07040000 	streq	r0, [r4, -r0]
     870:	000003fa 	strdeq	r0, [r0], -sl
     874:	a40c4602 	strge	r4, [ip], #-1538	; 0xfffff9fe
     878:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     87c:	00042b07 	andeq	r2, r4, r7, lsl #22
     880:	06470200 	strbeq	r0, [r7], -r0, lsl #4
     884:	000000a4 	andeq	r0, r0, r4, lsr #1
     888:	0430070c 	ldrteq	r0, [r0], #-1804	; 0xfffff8f4
     88c:	47020000 	strmi	r0, [r2, -r0]
     890:	0000a40c 	andeq	sl, r0, ip, lsl #8
     894:	8e071000 	cdphi	0, 0, cr1, cr7, cr0, {0}
     898:	02000004 	andeq	r0, r0, #4
     89c:	016e0a48 	cmneq	lr, r8, asr #20
     8a0:	07140000 	ldreq	r0, [r4, -r0]
     8a4:	00000509 	andeq	r0, r0, r9, lsl #10
     8a8:	6e0a4902 	vmlavs.f16	s8, s20, s4	; <UNPREDICTABLE>
     8ac:	18000001 	stmdane	r0, {r0}
     8b0:	0003eb07 	andeq	lr, r3, r7, lsl #22
     8b4:	0a4a0200 	beq	12810bc <startup-0x1ed7ef44>
     8b8:	0000016e 	andeq	r0, r0, lr, ror #2
     8bc:	0421071c 	strteq	r0, [r1], #-1820	; 0xfffff8e4
     8c0:	4b020000 	blmi	808c8 <startup-0x1ff7f738>
     8c4:	0001890a 	andeq	r8, r1, sl, lsl #18
     8c8:	0d002000 	stceq	0, cr2, [r0, #-0]
     8cc:	00000168 	andeq	r0, r0, r8, ror #2
     8d0:	0001680e 	andeq	r6, r1, lr, lsl #16
     8d4:	040b0000 	streq	r0, [fp], #-0
     8d8:	000000da 	ldrdeq	r0, [r0], -sl
     8dc:	015d040b 	cmpeq	sp, fp, lsl #8
     8e0:	890d0000 	stmdbhi	sp, {}	; <UNPREDICTABLE>
     8e4:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     8e8:	00000168 	andeq	r0, r0, r8, ror #2
     8ec:	0000a40e 	andeq	sl, r0, lr, lsl #8
     8f0:	00a40e00 	adceq	r0, r4, r0, lsl #28
     8f4:	0b000000 	bleq	8fc <startup-0x1ffff704>
     8f8:	00017404 	andeq	r7, r1, r4, lsl #8
     8fc:	05730500 	ldrbeq	r0, [r3, #-1280]!	; 0xfffffb00
     900:	4c020000 	stcmi	0, cr0, [r2], {-0}
     904:	0000da03 	andeq	sp, r0, r3, lsl #20
     908:	05720500 	ldrbeq	r0, [r2, #-1280]!	; 0xfffffb00
     90c:	4c020000 	stcmi	0, cr0, [r2], {-0}
     910:	0001680c 	andeq	r6, r1, ip, lsl #16
     914:	014b0f00 	cmpeq	fp, r0, lsl #30
     918:	5e020000 	cdppl	0, 0, cr0, cr2, cr0, {0}
     91c:	0000bc0a 	andeq	fp, r0, sl, lsl #24
     920:	24030500 	strcs	r0, [r3], #-1280	; 0xfffffb00
     924:	0f200010 	svceq	0x00200010
     928:	0000013c 	andeq	r0, r0, ip, lsr r1
     92c:	bc0a5f02 	stclt	15, cr5, [sl], {2}
     930:	05000000 	streq	r0, [r0, #-0]
     934:	00403003 	subeq	r3, r0, r3
     938:	00600f20 	rsbeq	r0, r0, r0, lsr #30
     93c:	60020000 	andvs	r0, r2, r0
     940:	0000bc0a 	andeq	fp, r0, sl, lsl #24
     944:	3c030500 	cfstr32cc	mvfx0, [r3], {-0}
     948:	0f200070 	svceq	0x00200070
     94c:	0000015d 	andeq	r0, r0, sp, asr r1
     950:	250e2d01 	strcs	r2, [lr, #-3329]	; 0xfffff2ff
     954:	05000000 	streq	r0, [r0, #-0]
     958:	00a13003 	adceq	r3, r1, r3
     95c:	054c0f20 	strbeq	r0, [ip, #-3872]	; 0xfffff0e0
     960:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     964:	0000250e 	andeq	r2, r0, lr, lsl #10
     968:	48030500 	stmdami	r3, {r8, sl}
     96c:	102000a0 	eorne	r0, r0, r0, lsr #1
     970:	00000033 	andeq	r0, r0, r3, lsr r0
     974:	8f0f6b01 	svchi	0x000f6b01
     978:	05000001 	streq	r0, [r0, #-1]
     97c:	00a04c03 	adceq	r4, r0, r3, lsl #24
     980:	043a1020 	ldrteq	r1, [sl], #-32	; 0xffffffe0
     984:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
     988:	00018f0f 	andeq	r8, r1, pc, lsl #30
     98c:	70030500 	andvc	r0, r3, r0, lsl #10
     990:	112000a0 	smulwbne	r0, r0, r0
     994:	00000456 	andeq	r0, r0, r6, asr r4
     998:	7806c901 	stmdavc	r6, {r0, r8, fp, lr, pc}
     99c:	f8200008 			; <UNDEFINED> instruction: 0xf8200008
     9a0:	01000002 	tsteq	r0, r2
     9a4:	0002af9c 	muleq	r2, ip, pc	; <UNPREDICTABLE>
     9a8:	047d1200 	ldrbteq	r1, [sp], #-512	; 0xfffffe00
     9ac:	cc010000 	stcgt	0, cr0, [r1], {-0}
     9b0:	0000a402 	andeq	sl, r0, r2, lsl #8
     9b4:	00024d00 	andeq	r4, r2, r0, lsl #26
     9b8:	10001300 	andne	r1, r0, r0, lsl #6
     9bc:	0000041a 	andeq	r0, r0, sl, lsl r4
     9c0:	9b0ad201 	blls	2b51cc <startup-0x1fd4ae34>
     9c4:	02000001 	andeq	r0, r0, #1
     9c8:	7a105c91 	bvc	417c14 <startup-0x1fbe83ec>
     9cc:	01000005 	tsteq	r0, r5
     9d0:	019b0ad3 			; <UNDEFINED> instruction: 0x019b0ad3
     9d4:	91020000 	mrsls	r0, (UNDEF: 2)
     9d8:	05201058 	streq	r1, [r0, #-88]!	; 0xffffffa8
     9dc:	d4010000 	strle	r0, [r1], #-0
     9e0:	0002af09 	andeq	sl, r2, r9, lsl #30
     9e4:	d8910400 	ldmle	r1, {sl}
     9e8:	e8147eef 	ldmda	r4, {r0, r1, r2, r3, r5, r6, r7, r9, sl, fp, ip, sp, lr}
     9ec:	6c200008 	stcvs	0, cr0, [r0], #-32	; 0xffffffe0
     9f0:	97000000 	strls	r0, [r0, -r0]
     9f4:	15000002 	strne	r0, [r0, #-2]
     9f8:	e3010069 	movw	r0, #4201	; 0x1069
     9fc:	0000a40d 	andeq	sl, r0, sp, lsl #8
     a00:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     a04:	09aa1600 	stmibeq	sl!, {r9, sl, ip}
     a08:	008c2000 	addeq	r2, ip, r0
     a0c:	69150000 	ldmdbvs	r5, {}	; <UNPREDICTABLE>
     a10:	0df00100 	ldfeqe	f0, [r0]
     a14:	000000a4 	andeq	r0, r0, r4, lsr #1
     a18:	00609102 	rsbeq	r9, r0, r2, lsl #2
     a1c:	018f0900 	orreq	r0, pc, r0, lsl #18
     a20:	02c00000 	sbceq	r0, r0, #0
     a24:	250a0000 	strcs	r0, [sl, #-0]
     a28:	ff000000 			; <UNDEFINED> instruction: 0xff000000
     a2c:	68170001 	ldmdavs	r7, {r0}
     a30:	01000005 	tsteq	r0, r5
     a34:	07ee06b9 			; <UNDEFINED> instruction: 0x07ee06b9
     a38:	008a2000 	addeq	r2, sl, r0
     a3c:	9c010000 	stcls	0, cr0, [r1], {-0}
     a40:	00000319 	andeq	r0, r0, r9, lsl r3
     a44:	0003f010 	andeq	pc, r3, r0, lsl r0	; <UNPREDICTABLE>
     a48:	07bb0100 	ldreq	r0, [fp, r0, lsl #2]!
     a4c:	00000319 	andeq	r0, r0, r9, lsl r3
     a50:	104c9102 	subne	r9, ip, r2, lsl #2
     a54:	0000045b 	andeq	r0, r0, fp, asr r4
     a58:	3007bc01 	andcc	fp, r7, r1, lsl #24
     a5c:	02000003 	andeq	r0, r0, #3
     a60:	6a154091 	bvs	550cac <startup-0x1faaf354>
     a64:	06be0100 	ldrteq	r0, [lr], r0, lsl #2
     a68:	000000a4 	andeq	r0, r0, r4, lsr #1
     a6c:	166c9102 	strbtne	r9, [ip], -r2, lsl #2
     a70:	2000081a 	andcs	r0, r0, sl, lsl r8
     a74:	0000002c 	andeq	r0, r0, ip, lsr #32
     a78:	01006915 	tsteq	r0, r5, lsl r9
     a7c:	00a40bc0 	adceq	r0, r4, r0, asr #23
     a80:	91020000 	mrsls	r0, (UNDEF: 2)
     a84:	09000068 	stmdbeq	r0, {r3, r5, r6}
     a88:	00000329 	andeq	r0, r0, r9, lsr #6
     a8c:	00000329 	andeq	r0, r0, r9, lsr #6
     a90:	00002518 	andeq	r2, r0, r8, lsl r5
     a94:	02001900 	andeq	r1, r0, #0, 18
     a98:	00480801 	subeq	r0, r8, r1, lsl #16
     a9c:	29090000 	stmdbcs	r9, {}	; <UNPREDICTABLE>
     aa0:	40000003 	andmi	r0, r0, r3
     aa4:	18000003 	stmdane	r0, {r0, r1}
     aa8:	00000025 	andeq	r0, r0, r5, lsr #32
     aac:	d319000b 	tstle	r9, #11
     ab0:	01000004 	tsteq	r0, r4
     ab4:	032906a5 			; <UNDEFINED> instruction: 0x032906a5
     ab8:	07680000 	strbeq	r0, [r8, -r0]!
     abc:	00862000 	addeq	r2, r6, r0
     ac0:	9c010000 	stcls	0, cr0, [r1], {-0}
     ac4:	0000039f 	muleq	r0, pc, r3	; <UNPREDICTABLE>
     ac8:	00057a1a 	andeq	r7, r5, sl, lsl sl
     acc:	18a50100 	stmiane	r5!, {r8}
     ad0:	0000019b 	muleq	r0, fp, r1
     ad4:	1a6c9102 	bne	1b24ee4 <startup-0x1e4db11c>
     ad8:	00000520 	andeq	r0, r0, r0, lsr #10
     adc:	9f2ba501 	svcls	0x002ba501
     ae0:	02000003 	andeq	r0, r0, #3
     ae4:	5d1a6891 	ldcpl	8, cr6, [sl, #-580]	; 0xfffffdbc
     ae8:	01000001 	tsteq	r0, r1
     aec:	00a43da5 	adceq	r3, r4, r5, lsr #27
     af0:	91020000 	mrsls	r0, (UNDEF: 2)
     af4:	07981664 	ldreq	r1, [r8, r4, ror #12]
     af8:	004c2000 	subeq	r2, ip, r0
     afc:	69150000 	ldmdbvs	r5, {}	; <UNPREDICTABLE>
     b00:	0baf0100 	bleq	febc0f08 <points+0xdebb6dd8>
     b04:	000000a4 	andeq	r0, r0, r4, lsr #1
     b08:	00749102 	rsbseq	r9, r4, r2, lsl #2
     b0c:	8f040b00 	svchi	0x00040b00
     b10:	19000001 	stmdbne	r0, {r0}
     b14:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     b18:	29069f01 	stmdbcs	r6, {r0, r8, r9, sl, fp, ip, pc}
     b1c:	36000003 	strcc	r0, [r0], -r3
     b20:	32200007 	eorcc	r0, r0, #7
     b24:	01000000 	mrseq	r0, (UNDEF: 0)
     b28:	0003dc9c 	muleq	r3, ip, ip
     b2c:	316f1b00 	cmncc	pc, r0, lsl #22
     b30:	1e9f0100 	fmlnee	f0, f7, f0
     b34:	0000019b 	muleq	r0, fp, r1
     b38:	1b749102 	blne	1d24f48 <startup-0x1e2db0b8>
     b3c:	0100326f 	tsteq	r0, pc, ror #4
     b40:	019b2a9f 			; <UNDEFINED> instruction: 0x019b2a9f
     b44:	91020000 	mrsls	r0, (UNDEF: 2)
     b48:	ef110070 	svc	0x00110070
     b4c:	01000004 	tsteq	r0, r4
     b50:	06f80693 	usateq	r0, #24, r3, lsl #13
     b54:	003e2000 	eorseq	r2, lr, r0
     b58:	9c010000 	stcls	0, cr0, [r1], {-0}
     b5c:	00000428 	andeq	r0, r0, r8, lsr #8
     b60:	6a626f1b 	bvs	189c7d4 <startup-0x1e76382c>
     b64:	19930100 	ldmibne	r3, {r8}
     b68:	0000039f 	muleq	r0, pc, r3	; <UNPREDICTABLE>
     b6c:	1a6c9102 	bne	1b24f7c <startup-0x1e4db084>
     b70:	000003d8 	ldrdeq	r0, [r0], -r8
     b74:	a4249301 	strtge	r9, [r4], #-769	; 0xfffffcff
     b78:	02000000 	andeq	r0, r0, #0
     b7c:	02166891 	andseq	r6, r6, #9502720	; 0x910000
     b80:	2a200007 	bcs	800ba4 <startup-0x1f7ff45c>
     b84:	15000000 	strne	r0, [r0, #-0]
     b88:	95010069 	strls	r0, [r1, #-105]	; 0xffffff97
     b8c:	0000a40b 	andeq	sl, r0, fp, lsl #8
     b90:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     b94:	4a190000 	bmi	640b9c <startup-0x1f9bf464>
     b98:	01000004 	tsteq	r0, r4
     b9c:	018f0886 	orreq	r0, pc, r6, lsl #17
     ba0:	06880000 	streq	r0, [r8], r0
     ba4:	00702000 	rsbseq	r2, r0, r0
     ba8:	9c010000 	stcls	0, cr0, [r1], {-0}
     bac:	0000046d 	andeq	r0, r0, sp, ror #8
     bb0:	0100781b 	tsteq	r0, fp, lsl r8
     bb4:	00a41986 	adceq	r1, r4, r6, lsl #19
     bb8:	91020000 	mrsls	r0, (UNDEF: 2)
     bbc:	00791b40 	rsbseq	r1, r9, r0, asr #22
     bc0:	a4208601 	strtge	r8, [r0], #-1537	; 0xfffff9ff
     bc4:	03000000 	movweq	r0, #0
     bc8:	157fbc91 	ldrbne	fp, [pc, #-3217]!	; ffffff3f <points+0xdfff5e0f>
     bcc:	006a626f 	rsbeq	r6, sl, pc, ror #4
     bd0:	8f098701 	svchi	0x00098701
     bd4:	02000001 	andeq	r0, r0, #1
     bd8:	11004c91 			; <UNDEFINED> instruction: 0x11004c91
     bdc:	00000435 	andeq	r0, r0, r5, lsr r4
     be0:	5c066101 	stfpls	f6, [r6], {1}
     be4:	2c200006 	stccs	0, cr0, [r0], #-24	; 0xffffffe8
     be8:	01000000 	mrseq	r0, (UNDEF: 0)
     bec:	0004939c 	muleq	r4, ip, r3
     bf0:	041a1a00 	ldreq	r1, [sl], #-2560	; 0xfffff600
     bf4:	61010000 	mrsvs	r0, (UNDEF: 1)
     bf8:	00019b19 	andeq	r9, r1, r9, lsl fp
     bfc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     c00:	040f1c00 	streq	r1, [pc], #-3072	; c08 <startup-0x1ffff3f8>
     c04:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
     c08:	00063006 	andeq	r3, r6, r6
     c0c:	00002c20 	andeq	r2, r0, r0, lsr #24
     c10:	b99c0100 	ldmiblt	ip, {r8}
     c14:	1a000004 	bne	c2c <startup-0x1ffff3d4>
     c18:	00000540 	andeq	r0, r0, r0, asr #10
     c1c:	9b195901 	blls	657028 <startup-0x1f9a8fd8>
     c20:	02000001 	andeq	r0, r0, #1
     c24:	1c007491 	cfstrsne	mvf7, [r0], {145}	; 0x91
     c28:	0000050f 	andeq	r0, r0, pc, lsl #10
     c2c:	10065201 	andne	r5, r6, r1, lsl #4
     c30:	20200006 	eorcs	r0, r0, r6
     c34:	01000000 	mrseq	r0, (UNDEF: 0)
     c38:	0004f99c 	muleq	r4, ip, r9
     c3c:	626f1b00 	rsbvs	r1, pc, #0, 22
     c40:	5201006a 	andpl	r0, r1, #106	; 0x6a
     c44:	00019b1f 	andeq	r9, r1, pc, lsl fp
     c48:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     c4c:	0100781b 	tsteq	r0, fp, lsl r8
     c50:	00a42852 	adceq	r2, r4, r2, asr r8
     c54:	91020000 	mrsls	r0, (UNDEF: 2)
     c58:	00791b70 	rsbseq	r1, r9, r0, ror fp
     c5c:	a42f5201 	strtge	r5, [pc], #-513	; c64 <startup-0x1ffff39c>
     c60:	02000000 	andeq	r0, r0, #0
     c64:	11006c91 			; <UNDEFINED> instruction: 0x11006c91
     c68:	00000557 	andeq	r0, r0, r7, asr r5
     c6c:	f0064c01 			; <UNDEFINED> instruction: 0xf0064c01
     c70:	20200005 	eorcs	r0, r0, r5
     c74:	01000000 	mrseq	r0, (UNDEF: 0)
     c78:	00051f9c 	muleq	r5, ip, pc	; <UNPREDICTABLE>
     c7c:	626f1b00 	rsbvs	r1, pc, #0, 22
     c80:	4c01006a 	stcmi	0, cr0, [r1], {106}	; 0x6a
     c84:	00019b1f 	andeq	r9, r1, pc, lsl fp
     c88:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     c8c:	055b1100 	ldrbeq	r1, [fp, #-256]	; 0xffffff00
     c90:	41010000 	mrsmi	r0, (UNDEF: 1)
     c94:	00056e06 	andeq	r6, r5, r6, lsl #28
     c98:	00008220 	andeq	r8, r0, r0, lsr #4
     c9c:	8f9c0100 	svchi	0x009c0100
     ca0:	1b000005 	blne	cbc <startup-0x1ffff344>
     ca4:	006a626f 	rsbeq	r6, sl, pc, ror #4
     ca8:	9b1b4101 	blls	6d10b4 <startup-0x1f92ef4c>
     cac:	02000001 	andeq	r0, r0, #1
     cb0:	40105c91 	mulsmi	r0, r1, ip
     cb4:	01000004 	tsteq	r0, r4
     cb8:	00a40643 	adceq	r0, r4, r3, asr #12
     cbc:	91020000 	mrsls	r0, (UNDEF: 2)
     cc0:	057e1668 	ldrbeq	r1, [lr, #-1640]!	; 0xfffff998
     cc4:	00682000 	rsbeq	r2, r8, r0
     cc8:	69150000 	ldmdbvs	r5, {}	; <UNPREDICTABLE>
     ccc:	0a440100 	beq	11010d4 <startup-0x1eefef2c>
     cd0:	000000a4 	andeq	r0, r0, r4, lsr #1
     cd4:	166c9102 	strbtne	r9, [ip], -r2, lsl #2
     cd8:	20000584 	andcs	r0, r0, r4, lsl #11
     cdc:	00000054 	andeq	r0, r0, r4, asr r0
     ce0:	01007815 	tsteq	r0, r5, lsl r8
     ce4:	00331146 	eorseq	r1, r3, r6, asr #2
     ce8:	91020000 	mrsls	r0, (UNDEF: 2)
     cec:	00791567 	rsbseq	r1, r9, r7, ror #10
     cf0:	33114701 	tstcc	r1, #262144	; 0x40000
     cf4:	02000000 	andeq	r0, r0, #0
     cf8:	00006691 	muleq	r0, r1, r6
     cfc:	03df1100 	bicseq	r1, pc, #0, 2
     d00:	36010000 	strcc	r0, [r1], -r0
     d04:	0004ec06 	andeq	lr, r4, r6, lsl #24
     d08:	00008220 	andeq	r8, r0, r0, lsr #4
     d0c:	ff9c0100 			; <UNDEFINED> instruction: 0xff9c0100
     d10:	1b000005 	blne	d2c <startup-0x1ffff2d4>
     d14:	006a626f 	rsbeq	r6, sl, pc, ror #4
     d18:	9b1a3601 	blls	68e524 <startup-0x1f971adc>
     d1c:	02000001 	andeq	r0, r0, #1
     d20:	40105c91 	mulsmi	r0, r1, ip
     d24:	01000004 	tsteq	r0, r4
     d28:	00a40638 	adceq	r0, r4, r8, lsr r6
     d2c:	91020000 	mrsls	r0, (UNDEF: 2)
     d30:	04fc1668 	ldrbteq	r1, [ip], #1640	; 0x668
     d34:	00682000 	rsbeq	r2, r8, r0
     d38:	69150000 	ldmdbvs	r5, {}	; <UNPREDICTABLE>
     d3c:	0a390100 	beq	e41144 <startup-0x1f1beebc>
     d40:	000000a4 	andeq	r0, r0, r4, lsr #1
     d44:	166c9102 	strbtne	r9, [ip], -r2, lsl #2
     d48:	20000502 	andcs	r0, r0, r2, lsl #10
     d4c:	00000054 	andeq	r0, r0, r4, asr r0
     d50:	01007815 	tsteq	r0, r5, lsl r8
     d54:	0033113b 	eorseq	r1, r3, fp, lsr r1
     d58:	91020000 	mrsls	r0, (UNDEF: 2)
     d5c:	00791567 	rsbseq	r1, r9, r7, ror #10
     d60:	33113c01 	tstcc	r1, #256	; 0x100
     d64:	02000000 	andeq	r0, r0, #0
     d68:	00006691 	muleq	r0, r1, r6
     d6c:	04fb1c00 	ldrbteq	r1, [fp], #3072	; 0xc00
     d70:	27010000 	strcs	r0, [r1, -r0]
     d74:	0004e606 	andeq	lr, r4, r6, lsl #12
     d78:	00000620 	andeq	r0, r0, r0, lsr #12
     d7c:	2e9c0100 	fmlcse	f0, f4, f0
     d80:	1b000006 	blne	da0 <startup-0x1ffff260>
     d84:	27010078 	smlsdxcs	r1, r8, r0, r0
     d88:	0000a41e 	andeq	sl, r0, lr, lsl r4
     d8c:	1b500100 	blne	1401194 <startup-0x1ebfee6c>
     d90:	27010079 	smlsdxcs	r1, r9, r0, r0
     d94:	0000a425 	andeq	sl, r0, r5, lsr #8
     d98:	00510100 	subseq	r0, r1, r0, lsl #2
     d9c:	00052b1d 	andeq	r2, r5, sp, lsl fp
     da0:	06200100 	strteq	r0, [r0], -r0, lsl #2
     da4:	200004e0 	andcs	r0, r0, r0, ror #9
     da8:	00000006 	andeq	r0, r0, r6
     dac:	6b1c9c01 	blvs	727db8 <startup-0x1f8d8248>
     db0:	01000004 	tsteq	r0, r4
     db4:	04da0619 	ldrbeq	r0, [sl], #1561	; 0x619
     db8:	00062000 	andeq	r2, r6, r0
     dbc:	9c010000 	stcls	0, cr0, [r1], {-0}
     dc0:	0000066f 	andeq	r0, r0, pc, ror #12
     dc4:	0100781b 	tsteq	r0, fp, lsl r8
     dc8:	00a41c19 	adceq	r1, r4, r9, lsl ip
     dcc:	50010000 	andpl	r0, r1, r0
     dd0:	0100791b 	tsteq	r0, fp, lsl r9
     dd4:	00a42319 	adceq	r2, r4, r9, lsl r3
     dd8:	51010000 	mrspl	r0, (UNDEF: 1)
     ddc:	04dd1d00 	ldrbeq	r1, [sp], #3328	; 0xd00
     de0:	12010000 	andne	r0, r1, #0
     de4:	0004d406 	andeq	sp, r4, r6, lsl #8
     de8:	00000620 	andeq	r0, r0, r0, lsr #12
     dec:	1d9c0100 	ldfnes	f0, [ip]
     df0:	00000486 	andeq	r0, r0, r6, lsl #9
     df4:	00060701 	andeq	r0, r6, r1, lsl #14
     df8:	0c200000 	stceq	0, cr0, [r0], #-0
     dfc:	01000000 	mrseq	r0, (UNDEF: 0)
     e00:	028e009c 	addeq	r0, lr, #156	; 0x9c
     e04:	00040000 	andeq	r0, r4, r0
     e08:	00000513 	andeq	r0, r0, r3, lsl r5
     e0c:	00c00104 	sbceq	r0, r0, r4, lsl #2
     e10:	960c0000 	strls	r0, [ip], -r0
     e14:	00000005 	andeq	r0, r0, r5
     e18:	70000000 	andvc	r0, r0, r0
     e1c:	2020000b 	eorcs	r0, r0, fp
     e20:	d6000001 	strle	r0, [r0], -r1
     e24:	02000007 	andeq	r0, r0, #7
     e28:	12200228 	eorne	r0, r0, #40, 4	; 0x80000002
     e2c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     e30:	00039d03 	andeq	r9, r3, r3, lsl #26
     e34:	0e210200 	cdpeq	2, 2, cr0, cr1, cr0, {0}
     e38:	00000104 	andeq	r0, r0, r4, lsl #2
     e3c:	02270300 	eoreq	r0, r7, #0, 6
     e40:	22020000 	andcs	r0, r2, #0
     e44:	00010b14 	andeq	r0, r1, r4, lsl fp
     e48:	da030400 	ble	c1e50 <startup-0x1ff3e1b0>
     e4c:	02000002 	andeq	r0, r0, #2
     e50:	010b1423 	tsteq	fp, r3, lsr #8
     e54:	03060000 	movweq	r0, #24576	; 0x6000
     e58:	00000329 	andeq	r0, r0, r9, lsr #6
     e5c:	040e2402 	streq	r2, [lr], #-1026	; 0xfffffbfe
     e60:	08000001 	stmdaeq	r0, {r0}
     e64:	0002d403 	andeq	sp, r2, r3, lsl #8
     e68:	0e250200 	cdpeq	2, 2, cr0, cr5, cr0, {0}
     e6c:	00000104 	andeq	r0, r0, r4, lsl #2
     e70:	0331030c 	teqeq	r1, #12, 6	; 0x30000000
     e74:	26020000 	strcs	r0, [r2], -r0
     e78:	0001120f 	andeq	r1, r1, pc, lsl #4
     e7c:	21031000 	mrscs	r1, (UNDEF: 3)
     e80:	02000003 	andeq	r0, r0, #3
     e84:	01120f27 	tsteq	r2, r7, lsr #30
     e88:	03110000 	tsteq	r1, #0
     e8c:	000002e4 	andeq	r0, r0, r4, ror #5
     e90:	0b142802 	bleq	50aea0 <startup-0x1faf5160>
     e94:	12000001 	andne	r0, r0, #1
     e98:	00030903 	andeq	r0, r3, r3, lsl #18
     e9c:	0f290200 	svceq	0x00290200
     ea0:	00000112 	andeq	r0, r0, r2, lsl r1
     ea4:	023a0314 	eorseq	r0, sl, #20, 6	; 0x50000000
     ea8:	2a020000 	bcs	80eb0 <startup-0x1ff7f150>
     eac:	0001120f 	andeq	r1, r1, pc, lsl #4
     eb0:	ee031500 	cfsh32	mvfx1, mvfx3, #0
     eb4:	02000002 	andeq	r0, r0, #2
     eb8:	010b142b 	tsteq	fp, fp, lsr #8
     ebc:	03160000 	tsteq	r6, #0
     ec0:	00000217 	andeq	r0, r0, r7, lsl r2
     ec4:	040e2c02 	streq	r2, [lr], #-3074	; 0xfffff3fe
     ec8:	18000001 	stmdane	r0, {r0}
     ecc:	0003a303 	andeq	sl, r3, r3, lsl #6
     ed0:	142d0200 	strtne	r0, [sp], #-512	; 0xfffffe00
     ed4:	0000010b 	andeq	r0, r0, fp, lsl #2
     ed8:	02f8031c 	rscseq	r0, r8, #28, 6	; 0x70000000
     edc:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
     ee0:	00010b14 	andeq	r0, r1, r4, lsl fp
     ee4:	82031e00 	andhi	r1, r3, #0, 28
     ee8:	02000002 	andeq	r0, r0, #2
     eec:	01040e2f 	tsteq	r4, pc, lsr #28
     ef0:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
     ef4:	0000027d 	andeq	r0, r0, sp, ror r2
     ef8:	040e3002 	streq	r3, [lr], #-2
     efc:	24000001 	strcs	r0, [r0], #-1
     f00:	00250400 	eoreq	r0, r5, r0, lsl #8
     f04:	04050000 	streq	r0, [r5], #-0
     f08:	00005307 	andeq	r5, r0, r7, lsl #6
     f0c:	07020500 	streq	r0, [r2, -r0, lsl #10]
     f10:	0000004d 	andeq	r0, r0, sp, asr #32
     f14:	3f080105 	svccc	0x00080105
     f18:	06000000 	streq	r0, [r0], -r0
     f1c:	00000268 	andeq	r0, r0, r8, ror #4
     f20:	250a3102 	strcs	r3, [sl, #-258]	; 0xfffffefe
     f24:	07000001 	streq	r0, [r0, -r1]
     f28:	0000ff04 	andeq	pc, r0, r4, lsl #30
     f2c:	02020200 	andeq	r0, r2, #0, 4
     f30:	014b0934 	cmpeq	fp, r4, lsr r9
     f34:	78080000 	stmdavc	r8, {}	; <UNPREDICTABLE>
     f38:	10360200 	eorsne	r0, r6, r0, lsl #4
     f3c:	00000112 	andeq	r0, r0, r2, lsl r1
     f40:	00790800 	rsbseq	r0, r9, r0, lsl #16
     f44:	12133602 	andsne	r3, r3, #2097152	; 0x200000
     f48:	01000001 	tsteq	r0, r1
     f4c:	00390600 	eorseq	r0, r9, r0, lsl #12
     f50:	37020000 	strcc	r0, [r2, -r0]
     f54:	00012b03 	andeq	r2, r1, r3, lsl #22
     f58:	300c0900 	andcc	r0, ip, r0, lsl #18
     f5c:	95093b02 	strls	r3, [r9, #-2818]	; 0xfffff4fe
     f60:	03000001 	movweq	r0, #1
     f64:	0000015a 	andeq	r0, r0, sl, asr r1
     f68:	95063d02 	strls	r3, [r6, #-3330]	; 0xfffff2fe
     f6c:	00000001 	andeq	r0, r0, r1
     f70:	0000b403 	andeq	fp, r0, r3, lsl #8
     f74:	063e0200 	ldrteq	r0, [lr], -r0, lsl #4
     f78:	00000195 	muleq	r0, r5, r1
     f7c:	00ba0304 	adcseq	r0, sl, r4, lsl #6
     f80:	3f020000 	svccc	0x00020000
     f84:	00019506 	andeq	r9, r1, r6, lsl #10
     f88:	70080800 	andvc	r0, r8, r0, lsl #16
     f8c:	40020078 	andmi	r0, r2, r8, ror r0
     f90:	00019c08 	andeq	r9, r1, r8, lsl #24
     f94:	0a000c00 	beq	3f9c <startup-0x1fffc064>
     f98:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     f9c:	4b0b0074 	blmi	2c1174 <startup-0x1fd3ee8c>
     fa0:	ad000001 	stcge	0, cr0, [r0, #-4]
     fa4:	0c000001 	stceq	0, cr0, [r0], {1}
     fa8:	00000104 	andeq	r0, r0, r4, lsl #2
     fac:	060017ff 			; <UNDEFINED> instruction: 0x060017ff
     fb0:	000003cf 	andeq	r0, r0, pc, asr #7
     fb4:	57034102 	strpl	r4, [r3, -r2, lsl #2]
     fb8:	0d000001 	stceq	0, cr0, [r0, #-4]
     fbc:	0000014b 	andeq	r0, r0, fp, asr #2
     fc0:	ad0a5e02 	stcge	14, cr5, [sl, #-8]
     fc4:	05000001 	streq	r0, [r0, #-1]
     fc8:	00102403 	andseq	r2, r0, r3, lsl #8
     fcc:	013c0d20 	teqeq	ip, r0, lsr #26
     fd0:	5f020000 	svcpl	0x00020000
     fd4:	0001ad0a 	andeq	sl, r1, sl, lsl #26
     fd8:	30030500 	andcc	r0, r3, r0, lsl #10
     fdc:	0d200040 	stceq	0, cr0, [r0, #-256]!	; 0xffffff00
     fe0:	00000060 	andeq	r0, r0, r0, rrx
     fe4:	ad0a6002 	stcge	0, cr6, [sl, #-8]
     fe8:	05000001 	streq	r0, [r0, #-1]
     fec:	00703c03 	rsbseq	r3, r0, r3, lsl #24
     ff0:	05910e20 	ldreq	r0, [r1, #3616]	; 0xe20
     ff4:	20010000 	andcs	r0, r1, r0
     ff8:	0001120f 	andeq	r1, r1, pc, lsl #4
     ffc:	000c2800 	andeq	r2, ip, r0, lsl #16
    1000:	00006820 	andeq	r6, r0, r0, lsr #16
    1004:	379c0100 	ldrcc	r0, [ip, r0, lsl #2]
    1008:	0f000002 	svceq	0x00000002
    100c:	0079656b 	rsbseq	r6, r9, fp, ror #10
    1010:	37102201 	ldrcc	r2, [r0, -r1, lsl #4]
    1014:	02000002 	andeq	r0, r0, #2
    1018:	720f5891 	andvc	r5, pc, #9502720	; 0x910000
    101c:	0100776f 	tsteq	r0, pc, ror #14
    1020:	01950624 	orrseq	r0, r5, r4, lsr #12
    1024:	91020000 	mrsls	r0, (UNDEF: 2)
    1028:	6f630f6c 	svcvs	0x00630f6c
    102c:	2401006c 	strcs	r0, [r1], #-108	; 0xffffff94
    1030:	0001950b 	andeq	r9, r1, fp, lsl #10
    1034:	68910200 	ldmvs	r1, {r9}
    1038:	01120b00 	tsteq	r2, r0, lsl #22
    103c:	02470000 	subeq	r0, r7, #0
    1040:	04100000 	ldreq	r0, [r0], #-0
    1044:	0f000001 	svceq	0x00000001
    1048:	05d81100 	ldrbeq	r1, [r8, #256]	; 0x100
    104c:	12010000 	andne	r0, r1, #0
    1050:	00019505 	andeq	r9, r1, r5, lsl #10
    1054:	000bd400 	andeq	sp, fp, r0, lsl #8
    1058:	00005420 	andeq	r5, r0, r0, lsr #8
    105c:	6f9c0100 	svcvs	0x009c0100
    1060:	0f000002 	svceq	0x00000002
    1064:	14010063 	strne	r0, [r1], #-99	; 0xffffff9d
    1068:	00011210 	andeq	r1, r1, r0, lsl r2
    106c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1070:	05851200 	streq	r1, [r5, #512]	; 0x200
    1074:	06010000 	streq	r0, [r1], -r0
    1078:	000b7006 	andeq	r7, fp, r6
    107c:	00006420 	andeq	r6, r0, r0, lsr #8
    1080:	139c0100 	orrsne	r0, ip, #0, 2
    1084:	00776f72 	rsbseq	r6, r7, r2, ror pc
    1088:	041f0601 	ldreq	r0, [pc], #-1537	; 1090 <startup-0x1fffef70>
    108c:	02000001 	andeq	r0, r0, #1
    1090:	00007491 	muleq	r0, r1, r4
    1094:	00000234 	andeq	r0, r0, r4, lsr r2
    1098:	06420004 	strbeq	r0, [r2], -r4
    109c:	01040000 	mrseq	r0, (UNDEF: 4)
    10a0:	000000c0 	andeq	r0, r0, r0, asr #1
    10a4:	0005f70c 	andeq	pc, r5, ip, lsl #14
    10a8:	00000000 	andeq	r0, r0, r0
    10ac:	000c9000 	andeq	r9, ip, r0
    10b0:	0000a620 	andeq	sl, r0, r0, lsr #12
    10b4:	00090900 	andeq	r0, r9, r0, lsl #18
    10b8:	02280200 	eoreq	r0, r8, #0, 4
    10bc:	00ff1220 	rscseq	r1, pc, r0, lsr #4
    10c0:	9d030000 	stcls	0, cr0, [r3, #-0]
    10c4:	02000003 	andeq	r0, r0, #3
    10c8:	01040e21 	tsteq	r4, r1, lsr #28
    10cc:	03000000 	movweq	r0, #0
    10d0:	00000227 	andeq	r0, r0, r7, lsr #4
    10d4:	0b142202 	bleq	5098e4 <startup-0x1faf671c>
    10d8:	04000001 	streq	r0, [r0], #-1
    10dc:	0002da03 	andeq	sp, r2, r3, lsl #20
    10e0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    10e4:	0000010b 	andeq	r0, r0, fp, lsl #2
    10e8:	03290306 			; <UNDEFINED> instruction: 0x03290306
    10ec:	24020000 	strcs	r0, [r2], #-0
    10f0:	0001040e 	andeq	r0, r1, lr, lsl #8
    10f4:	d4030800 	strle	r0, [r3], #-2048	; 0xfffff800
    10f8:	02000002 	andeq	r0, r0, #2
    10fc:	01040e25 	tsteq	r4, r5, lsr #28
    1100:	030c0000 	movweq	r0, #49152	; 0xc000
    1104:	00000331 	andeq	r0, r0, r1, lsr r3
    1108:	120f2602 	andne	r2, pc, #2097152	; 0x200000
    110c:	10000001 	andne	r0, r0, r1
    1110:	00032103 	andeq	r2, r3, r3, lsl #2
    1114:	0f270200 	svceq	0x00270200
    1118:	00000112 	andeq	r0, r0, r2, lsl r1
    111c:	02e40311 	rsceq	r0, r4, #1140850688	; 0x44000000
    1120:	28020000 	stmdacs	r2, {}	; <UNPREDICTABLE>
    1124:	00010b14 	andeq	r0, r1, r4, lsl fp
    1128:	09031200 	stmdbeq	r3, {r9, ip}
    112c:	02000003 	andeq	r0, r0, #3
    1130:	01120f29 	tsteq	r2, r9, lsr #30
    1134:	03140000 	tsteq	r4, #0
    1138:	0000023a 	andeq	r0, r0, sl, lsr r2
    113c:	120f2a02 	andne	r2, pc, #8192	; 0x2000
    1140:	15000001 	strne	r0, [r0, #-1]
    1144:	0002ee03 	andeq	lr, r2, r3, lsl #28
    1148:	142b0200 	strtne	r0, [fp], #-512	; 0xfffffe00
    114c:	0000010b 	andeq	r0, r0, fp, lsl #2
    1150:	02170316 	andseq	r0, r7, #1476395008	; 0x58000000
    1154:	2c020000 	stccs	0, cr0, [r2], {-0}
    1158:	0001040e 	andeq	r0, r1, lr, lsl #8
    115c:	a3031800 	movwge	r1, #14336	; 0x3800
    1160:	02000003 	andeq	r0, r0, #3
    1164:	010b142d 	tsteq	fp, sp, lsr #8
    1168:	031c0000 	tsteq	ip, #0
    116c:	000002f8 	strdeq	r0, [r0], -r8
    1170:	0b142e02 	bleq	50c980 <startup-0x1faf3680>
    1174:	1e000001 	cdpne	0, 0, cr0, cr0, cr1, {0}
    1178:	00028203 	andeq	r8, r2, r3, lsl #4
    117c:	0e2f0200 	cdpeq	2, 2, cr0, cr15, cr0, {0}
    1180:	00000104 	andeq	r0, r0, r4, lsl #2
    1184:	027d0320 	rsbseq	r0, sp, #32, 6	; 0x80000000
    1188:	30020000 	andcc	r0, r2, r0
    118c:	0001040e 	andeq	r0, r1, lr, lsl #8
    1190:	04002400 	streq	r2, [r0], #-1024	; 0xfffffc00
    1194:	00000025 	andeq	r0, r0, r5, lsr #32
    1198:	53070405 	movwpl	r0, #29701	; 0x7405
    119c:	05000000 	streq	r0, [r0, #-0]
    11a0:	004d0702 	subeq	r0, sp, r2, lsl #14
    11a4:	01050000 	mrseq	r0, (UNDEF: 5)
    11a8:	00003f08 	andeq	r3, r0, r8, lsl #30
    11ac:	02680600 	rsbeq	r0, r8, #0, 12
    11b0:	31020000 	mrscc	r0, (UNDEF: 2)
    11b4:	0001250a 	andeq	r2, r1, sl, lsl #10
    11b8:	ff040700 			; <UNDEFINED> instruction: 0xff040700
    11bc:	02000000 	andeq	r0, r0, #0
    11c0:	09340202 	ldmdbeq	r4!, {r1, r9}
    11c4:	0000014b 	andeq	r0, r0, fp, asr #2
    11c8:	02007808 	andeq	r7, r0, #8, 16	; 0x80000
    11cc:	01121036 	tsteq	r2, r6, lsr r0
    11d0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    11d4:	36020079 			; <UNDEFINED> instruction: 0x36020079
    11d8:	00011213 	andeq	r1, r1, r3, lsl r2
    11dc:	06000100 	streq	r0, [r0], -r0, lsl #2
    11e0:	00000039 	andeq	r0, r0, r9, lsr r0
    11e4:	2b033702 	blcs	cedf4 <startup-0x1ff3120c>
    11e8:	09000001 	stmdbeq	r0, {r0}
    11ec:	3b02300c 	blcc	8d224 <startup-0x1ff72ddc>
    11f0:	00019509 	andeq	r9, r1, r9, lsl #10
    11f4:	015a0300 	cmpeq	sl, r0, lsl #6
    11f8:	3d020000 	stccc	0, cr0, [r2, #-0]
    11fc:	00019506 	andeq	r9, r1, r6, lsl #10
    1200:	b4030000 	strlt	r0, [r3], #-0
    1204:	02000000 	andeq	r0, r0, #0
    1208:	0195063e 	orrseq	r0, r5, lr, lsr r6
    120c:	03040000 	movweq	r0, #16384	; 0x4000
    1210:	000000ba 	strheq	r0, [r0], -sl
    1214:	95063f02 	strls	r3, [r6, #-3842]	; 0xfffff0fe
    1218:	08000001 	stmdaeq	r0, {r0}
    121c:	00787008 	rsbseq	r7, r8, r8
    1220:	9c084002 	stcls	0, cr4, [r8], {2}
    1224:	0c000001 	stceq	0, cr0, [r0], {1}
    1228:	05040a00 	streq	r0, [r4, #-2560]	; 0xfffff600
    122c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1230:	00014b0b 	andeq	r4, r1, fp, lsl #22
    1234:	0001ad00 	andeq	sl, r1, r0, lsl #26
    1238:	01040c00 	tsteq	r4, r0, lsl #24
    123c:	17ff0000 	ldrbne	r0, [pc, r0]!
    1240:	03cf0600 	biceq	r0, pc, #0, 12
    1244:	41020000 	mrsmi	r0, (UNDEF: 2)
    1248:	00015703 	andeq	r5, r1, r3, lsl #14
    124c:	014b0d00 	cmpeq	fp, r0, lsl #26
    1250:	5e020000 	cdppl	0, 0, cr0, cr2, cr0, {0}
    1254:	0001ad0a 	andeq	sl, r1, sl, lsl #26
    1258:	24030500 	strcs	r0, [r3], #-1280	; 0xfffffb00
    125c:	0d200010 	stceq	0, cr0, [r0, #-64]!	; 0xffffffc0
    1260:	0000013c 	andeq	r0, r0, ip, lsr r1
    1264:	ad0a5f02 	stcge	15, cr5, [sl, #-8]
    1268:	05000001 	streq	r0, [r0, #-1]
    126c:	00403003 	subeq	r3, r0, r3
    1270:	00600d20 	rsbeq	r0, r0, r0, lsr #26
    1274:	60020000 	andvs	r0, r2, r0
    1278:	0001ad0a 	andeq	sl, r1, sl, lsl #26
    127c:	3c030500 	cfstr32cc	mvfx0, [r3], {-0}
    1280:	0e200070 	mcreq	0, 1, r0, cr0, cr0, {3}
    1284:	0000047d 	andeq	r0, r0, sp, ror r4
    1288:	20061c01 	andcs	r1, r6, r1, lsl #24
    128c:	1620000d 	strtne	r0, [r0], -sp
    1290:	01000000 	mrseq	r0, (UNDEF: 0)
    1294:	06370f9c 	shadd8eq	r0, r7, ip
    1298:	14010000 	strne	r0, [r1], #-0
    129c:	000ce406 	andeq	lr, ip, r6, lsl #8
    12a0:	00003c20 	andeq	r3, r0, r0, lsr #24
    12a4:	0f9c0100 	svceq	0x009c0100
    12a8:	000005ec 	andeq	r0, r0, ip, ror #11
    12ac:	bc060d01 	stclt	13, cr0, [r6], {1}
    12b0:	2820000c 	stmdacs	r0!, {r2, r3}
    12b4:	01000000 	mrseq	r0, (UNDEF: 0)
    12b8:	05e00f9c 	strbeq	r0, [r0, #3996]!	; 0xf9c
    12bc:	05010000 	streq	r0, [r1, #-0]
    12c0:	000c9007 	andeq	r9, ip, r7
    12c4:	00002c20 	andeq	r2, r0, r0, lsr #24
    12c8:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	100e1b0e 	andne	r1, lr, lr, lsl #22
   c:	02000017 	andeq	r0, r0, #23
  10:	0b0b0024 	bleq	2c00a8 <startup-0x1fd3ff58>
  14:	0e030b3e 	vmoveq.16	d3[0], r0
  18:	13030000 	movwne	r0, #12288	; 0x3000
  1c:	3a0b0b01 	bcc	2c2c28 <startup-0x1fd3d3d8>
  20:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  24:	0013010b 	andseq	r0, r3, fp, lsl #2
  28:	000d0400 	andeq	r0, sp, r0, lsl #8
  2c:	0b3a0803 	bleq	e82040 <startup-0x1f17dfc0>
  30:	0b390b3b 	bleq	e42d24 <startup-0x1f1bd2dc>
  34:	0b381349 	bleq	e04d60 <startup-0x1f1fb2a0>
  38:	16050000 	strne	r0, [r5], -r0
  3c:	3a0e0300 	bcc	380c44 <startup-0x1fc7f3bc>
  40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  44:	0013490b 	andseq	r4, r3, fp, lsl #18
  48:	01130600 	tsteq	r3, r0, lsl #12
  4c:	0b3a050b 	bleq	e81480 <startup-0x1f17eb80>
  50:	0b390b3b 	bleq	e42d44 <startup-0x1f1bd2bc>
  54:	00001301 	andeq	r1, r0, r1, lsl #6
  58:	03000d07 	movweq	r0, #3335	; 0xd07
  5c:	3b0b3a0e 	blcc	2ce89c <startup-0x1fd31764>
  60:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  64:	000b3813 	andeq	r3, fp, r3, lsl r8
  68:	00240800 	eoreq	r0, r4, r0, lsl #16
  6c:	0b3e0b0b 	bleq	f82ca0 <startup-0x1f07d360>
  70:	00000803 	andeq	r0, r0, r3, lsl #16
  74:	49010109 	stmdbmi	r1, {r0, r3, r8}
  78:	00130113 	andseq	r0, r3, r3, lsl r1
  7c:	00210a00 	eoreq	r0, r1, r0, lsl #20
  80:	052f1349 	streq	r1, [pc, #-841]!	; fffffd3f <points+0xdfff5c0f>
  84:	340b0000 	strcc	r0, [fp], #-0
  88:	3a0e0300 	bcc	380c90 <startup-0x1fc7f370>
  8c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  90:	3f13490b 	svccc	0x0013490b
  94:	00180219 	andseq	r0, r8, r9, lsl r2
  98:	11010000 	mrsne	r0, (UNDEF: 1)
  9c:	130e2501 	movwne	r2, #58625	; 0xe501
  a0:	1b0e030b 	blne	380cd4 <startup-0x1fc7f32c>
  a4:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
  a8:	00171006 	andseq	r1, r7, r6
  ac:	00240200 	eoreq	r0, r4, r0, lsl #4
  b0:	0b3e0b0b 	bleq	f82ce4 <startup-0x1f07d31c>
  b4:	00000e03 	andeq	r0, r0, r3, lsl #28
  b8:	0b011303 	bleq	44ccc <startup-0x1ffbb334>
  bc:	3b0b3a0b 	blcc	2ce8f0 <startup-0x1fd31710>
  c0:	010b390b 	tsteq	fp, fp, lsl #18
  c4:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
  c8:	0803000d 	stmdaeq	r3, {r0, r2, r3}
  cc:	0b3b0b3a 	bleq	ec2dbc <startup-0x1f13d244>
  d0:	13490b39 	movtne	r0, #39737	; 0x9b39
  d4:	00000b38 	andeq	r0, r0, r8, lsr fp
  d8:	03001605 	movweq	r1, #1541	; 0x605
  dc:	3b0b3a0e 	blcc	2ce91c <startup-0x1fd316e4>
  e0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  e4:	06000013 			; <UNDEFINED> instruction: 0x06000013
  e8:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
  ec:	0b3b0b3a 	bleq	ec2ddc <startup-0x1f13d224>
  f0:	13010b39 	movwne	r0, #6969	; 0x1b39
  f4:	0d070000 	stceq	0, cr0, [r7, #-0]
  f8:	3a0e0300 	bcc	380d00 <startup-0x1fc7f300>
  fc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 100:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 104:	0800000b 	stmdaeq	r0, {r0, r1, r3}
 108:	0b0b0024 	bleq	2c01a0 <startup-0x1fd3fe60>
 10c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 110:	01090000 	mrseq	r0, (UNDEF: 9)
 114:	01134901 	tsteq	r3, r1, lsl #18
 118:	0a000013 	beq	16c <startup-0x1ffffe94>
 11c:	13490021 	movtne	r0, #36897	; 0x9021
 120:	0000052f 	andeq	r0, r0, pc, lsr #10
 124:	0300340b 	movweq	r3, #1035	; 0x40b
 128:	3b0b3a0e 	blcc	2ce968 <startup-0x1fd31698>
 12c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 130:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
 134:	0c000018 	stceq	0, cr0, [r0], {24}
 138:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 13c:	0b3a0e03 	bleq	e83950 <startup-0x1f17c6b0>
 140:	0b390b3b 	bleq	e42e34 <startup-0x1f1bd1cc>
 144:	13491927 	movtne	r1, #39207	; 0x9927
 148:	06120111 			; <UNDEFINED> instruction: 0x06120111
 14c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 150:	00130119 	andseq	r0, r3, r9, lsl r1
 154:	00050d00 	andeq	r0, r5, r0, lsl #26
 158:	0b3a0803 	bleq	e8216c <startup-0x1f17de94>
 15c:	0b390b3b 	bleq	e42e50 <startup-0x1f1bd1b0>
 160:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 164:	340e0000 	strcc	r0, [lr], #-0
 168:	3a0e0300 	bcc	380d70 <startup-0x1fc7f290>
 16c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 170:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 174:	0f000018 	svceq	0x00000018
 178:	08030034 	stmdaeq	r3, {r2, r4, r5}
 17c:	0b3b0b3a 	bleq	ec2e6c <startup-0x1f13d194>
 180:	13490b39 	movtne	r0, #39737	; 0x9b39
 184:	00001802 	andeq	r1, r0, r2, lsl #16
 188:	3f012e10 	svccc	0x00012e10
 18c:	3a0e0319 	bcc	380df8 <startup-0x1fc7f208>
 190:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 194:	1119270b 	tstne	r9, fp, lsl #14
 198:	40061201 	andmi	r1, r6, r1, lsl #4
 19c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 1a0:	00001301 	andeq	r1, r0, r1, lsl #6
 1a4:	11010b11 	tstne	r1, r1, lsl fp
 1a8:	00061201 	andeq	r1, r6, r1, lsl #4
 1ac:	002e1200 	eoreq	r1, lr, r0, lsl #4
 1b0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 1b4:	0b3b0b3a 	bleq	ec2ea4 <startup-0x1f13d15c>
 1b8:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 1bc:	06120111 			; <UNDEFINED> instruction: 0x06120111
 1c0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 1c4:	00000019 	andeq	r0, r0, r9, lsl r0
 1c8:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 1cc:	030b130e 	movweq	r1, #45838	; 0xb30e
 1d0:	110e1b0e 	tstne	lr, lr, lsl #22
 1d4:	10061201 	andne	r1, r6, r1, lsl #4
 1d8:	02000017 	andeq	r0, r0, #23
 1dc:	0b0b0113 	bleq	2c0630 <startup-0x1fd3f9d0>
 1e0:	0b3b0b3a 	bleq	ec2ed0 <startup-0x1f13d130>
 1e4:	13010b39 	movwne	r0, #6969	; 0x1b39
 1e8:	0d030000 	stceq	0, cr0, [r3, #-0]
 1ec:	3a0e0300 	bcc	380df4 <startup-0x1fc7f20c>
 1f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1f4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 1f8:	0400000b 	streq	r0, [r0], #-11
 1fc:	13490035 	movtne	r0, #36917	; 0x9035
 200:	24050000 	strcs	r0, [r5], #-0
 204:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 208:	000e030b 	andeq	r0, lr, fp, lsl #6
 20c:	00160600 	andseq	r0, r6, r0, lsl #12
 210:	0b3a0e03 	bleq	e83a24 <startup-0x1f17c5dc>
 214:	0b390b3b 	bleq	e42f08 <startup-0x1f1bd0f8>
 218:	00001349 	andeq	r1, r0, r9, asr #6
 21c:	0b000f07 	bleq	3e40 <startup-0x1fffc1c0>
 220:	0013490b 	andseq	r4, r3, fp, lsl #18
 224:	000d0800 	andeq	r0, sp, r0, lsl #16
 228:	0b3a0803 	bleq	e8223c <startup-0x1f17ddc4>
 22c:	0b390b3b 	bleq	e42f20 <startup-0x1f1bd0e0>
 230:	0b381349 	bleq	e04f5c <startup-0x1f1fb0a4>
 234:	13090000 	movwne	r0, #36864	; 0x9000
 238:	3a050b01 	bcc	142e44 <startup-0x1febd1bc>
 23c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 240:	0013010b 	andseq	r0, r3, fp, lsl #2
 244:	00240a00 	eoreq	r0, r4, r0, lsl #20
 248:	0b3e0b0b 	bleq	f82e7c <startup-0x1f07d184>
 24c:	00000803 	andeq	r0, r0, r3, lsl #16
 250:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
 254:	00130113 	andseq	r0, r3, r3, lsl r1
 258:	00210c00 	eoreq	r0, r1, r0, lsl #24
 25c:	052f1349 	streq	r1, [pc, #-841]!	; ffffff1b <points+0xdfff5deb>
 260:	340d0000 	strcc	r0, [sp], #-0
 264:	3a0e0300 	bcc	380e6c <startup-0x1fc7f194>
 268:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 26c:	3f13490b 	svccc	0x0013490b
 270:	00180219 	andseq	r0, r8, r9, lsl r2
 274:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
 278:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 27c:	0b3b0b3a 	bleq	ec2f6c <startup-0x1f13d094>
 280:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 284:	01111349 	tsteq	r1, r9, asr #6
 288:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 28c:	01194296 			; <UNDEFINED> instruction: 0x01194296
 290:	0f000013 	svceq	0x00000013
 294:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 298:	0b3b0b3a 	bleq	ec2f88 <startup-0x1f13d078>
 29c:	13490b39 	movtne	r0, #39737	; 0x9b39
 2a0:	00001802 	andeq	r1, r0, r2, lsl #16
 2a4:	03003410 	movweq	r3, #1040	; 0x410
 2a8:	3b0b3a08 	blcc	2cead0 <startup-0x1fd31530>
 2ac:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 2b0:	00180213 	andseq	r0, r8, r3, lsl r2
 2b4:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
 2b8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 2bc:	0b3b0b3a 	bleq	ec2fac <startup-0x1f13d054>
 2c0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 2c4:	06120111 			; <UNDEFINED> instruction: 0x06120111
 2c8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 2cc:	00130119 	andseq	r0, r3, r9, lsl r1
 2d0:	00051200 	andeq	r1, r5, r0, lsl #4
 2d4:	0b3a0803 	bleq	e822e8 <startup-0x1f17dd18>
 2d8:	0b390b3b 	bleq	e42fcc <startup-0x1f1bd034>
 2dc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 2e0:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
 2e4:	03193f00 	tsteq	r9, #0, 30
 2e8:	3b0b3a0e 	blcc	2ceb28 <startup-0x1fd314d8>
 2ec:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 2f0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 2f4:	96184006 	ldrls	r4, [r8], -r6
 2f8:	00001942 	andeq	r1, r0, r2, asr #18
 2fc:	3f012e14 	svccc	0x00012e14
 300:	3a0e0319 	bcc	380f6c <startup-0x1fc7f094>
 304:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 308:	1119270b 	tstne	r9, fp, lsl #14
 30c:	40061201 	andmi	r1, r6, r1, lsl #4
 310:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 314:	00001301 	andeq	r1, r0, r1, lsl #6
 318:	3f012e15 	svccc	0x00012e15
 31c:	3a0e0319 	bcc	380f88 <startup-0x1fc7f078>
 320:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 324:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 328:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 32c:	96184006 	ldrls	r4, [r8], -r6
 330:	00001942 	andeq	r1, r0, r2, asr #18
 334:	03003416 	movweq	r3, #1046	; 0x416
 338:	3b0b3a0e 	blcc	2ceb78 <startup-0x1fd31488>
 33c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 340:	00180213 	andseq	r0, r8, r3, lsl r2
 344:	11010000 	mrsne	r0, (UNDEF: 1)
 348:	130e2501 	movwne	r2, #58625	; 0xe501
 34c:	1b0e030b 	blne	380f80 <startup-0x1fc7f080>
 350:	1117550e 	tstne	r7, lr, lsl #10
 354:	00171001 	andseq	r1, r7, r1
 358:	00240200 	eoreq	r0, r4, r0, lsl #4
 35c:	0b3e0b0b 	bleq	f82f90 <startup-0x1f07d070>
 360:	00000e03 	andeq	r0, r0, r3, lsl #28
 364:	0b011303 	bleq	44f78 <startup-0x1ffbb088>
 368:	3b0b3a0b 	blcc	2ceb9c <startup-0x1fd31464>
 36c:	010b390b 	tsteq	fp, fp, lsl #18
 370:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
 374:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 378:	0b3b0b3a 	bleq	ec3068 <startup-0x1f13cf98>
 37c:	13490b39 	movtne	r0, #39737	; 0x9b39
 380:	00000b38 	andeq	r0, r0, r8, lsr fp
 384:	03001605 	movweq	r1, #1541	; 0x605
 388:	3b0b3a0e 	blcc	2cebc8 <startup-0x1fd31438>
 38c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 390:	06000013 			; <UNDEFINED> instruction: 0x06000013
 394:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
 398:	0b3b0b3a 	bleq	ec3088 <startup-0x1f13cf78>
 39c:	13010b39 	movwne	r0, #6969	; 0x1b39
 3a0:	0d070000 	stceq	0, cr0, [r7, #-0]
 3a4:	3a0e0300 	bcc	380fac <startup-0x1fc7f054>
 3a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 3ac:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 3b0:	0800000b 	stmdaeq	r0, {r0, r1, r3}
 3b4:	0b0b0024 	bleq	2c044c <startup-0x1fd3fbb4>
 3b8:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 3bc:	01090000 	mrseq	r0, (UNDEF: 9)
 3c0:	01134901 	tsteq	r3, r1, lsl #18
 3c4:	0a000013 	beq	418 <startup-0x1ffffbe8>
 3c8:	13490021 	movtne	r0, #36897	; 0x9021
 3cc:	0000052f 	andeq	r0, r0, pc, lsr #10
 3d0:	0b000f0b 	bleq	4004 <startup-0x1fffbffc>
 3d4:	0013490b 	andseq	r4, r3, fp, lsl #18
 3d8:	01130c00 	tsteq	r3, r0, lsl #24
 3dc:	0b0b0e03 	bleq	2c3bf0 <startup-0x1fd3c410>
 3e0:	0b3b0b3a 	bleq	ec30d0 <startup-0x1f13cf30>
 3e4:	13010b39 	movwne	r0, #6969	; 0x1b39
 3e8:	150d0000 	strne	r0, [sp, #-0]
 3ec:	01192701 	tsteq	r9, r1, lsl #14
 3f0:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
 3f4:	13490005 	movtne	r0, #36869	; 0x9005
 3f8:	340f0000 	strcc	r0, [pc], #-0	; 400 <startup-0x1ffffc00>
 3fc:	3a0e0300 	bcc	381004 <startup-0x1fc7effc>
 400:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 404:	3f13490b 	svccc	0x0013490b
 408:	00180219 	andseq	r0, r8, r9, lsl r2
 40c:	00341000 	eorseq	r1, r4, r0
 410:	0b3a0e03 	bleq	e83c24 <startup-0x1f17c3dc>
 414:	0b390b3b 	bleq	e43108 <startup-0x1f1bcef8>
 418:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 41c:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
 420:	03193f01 	tsteq	r9, #1, 30
 424:	3b0b3a0e 	blcc	2cec64 <startup-0x1fd3139c>
 428:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 42c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 430:	96184006 	ldrls	r4, [r8], -r6
 434:	13011942 	movwne	r1, #6466	; 0x1942
 438:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
 43c:	03193f01 	tsteq	r9, #1, 30
 440:	3b0b3a0e 	blcc	2cec80 <startup-0x1fd31380>
 444:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 448:	01193c13 	tsteq	r9, r3, lsl ip
 44c:	13000013 	movwne	r0, #19
 450:	00000018 	andeq	r0, r0, r8, lsl r0
 454:	11010b14 	tstne	r1, r4, lsl fp
 458:	01061201 	tsteq	r6, r1, lsl #4
 45c:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
 460:	08030034 	stmdaeq	r3, {r2, r4, r5}
 464:	0b3b0b3a 	bleq	ec3154 <startup-0x1f13ceac>
 468:	13490b39 	movtne	r0, #39737	; 0x9b39
 46c:	00001802 	andeq	r1, r0, r2, lsl #16
 470:	11010b16 	tstne	r1, r6, lsl fp
 474:	00061201 	andeq	r1, r6, r1, lsl #4
 478:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
 47c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 480:	0b3b0b3a 	bleq	ec3170 <startup-0x1f13ce90>
 484:	01110b39 	tsteq	r1, r9, lsr fp
 488:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 48c:	01194296 			; <UNDEFINED> instruction: 0x01194296
 490:	18000013 	stmdane	r0, {r0, r1, r4}
 494:	13490021 	movtne	r0, #36897	; 0x9021
 498:	00000b2f 	andeq	r0, r0, pc, lsr #22
 49c:	3f012e19 	svccc	0x00012e19
 4a0:	3a0e0319 	bcc	38110c <startup-0x1fc7eef4>
 4a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 4a8:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 4ac:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 4b0:	97184006 	ldrls	r4, [r8, -r6]
 4b4:	13011942 	movwne	r1, #6466	; 0x1942
 4b8:	051a0000 	ldreq	r0, [sl, #-0]
 4bc:	3a0e0300 	bcc	3810c4 <startup-0x1fc7ef3c>
 4c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 4c4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 4c8:	1b000018 	blne	530 <startup-0x1ffffad0>
 4cc:	08030005 	stmdaeq	r3, {r0, r2}
 4d0:	0b3b0b3a 	bleq	ec31c0 <startup-0x1f13ce40>
 4d4:	13490b39 	movtne	r0, #39737	; 0x9b39
 4d8:	00001802 	andeq	r1, r0, r2, lsl #16
 4dc:	3f012e1c 	svccc	0x00012e1c
 4e0:	3a0e0319 	bcc	38114c <startup-0x1fc7eeb4>
 4e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 4e8:	1119270b 	tstne	r9, fp, lsl #14
 4ec:	40061201 	andmi	r1, r6, r1, lsl #4
 4f0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 4f4:	00001301 	andeq	r1, r0, r1, lsl #6
 4f8:	3f002e1d 	svccc	0x00002e1d
 4fc:	3a0e0319 	bcc	381168 <startup-0x1fc7ee98>
 500:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 504:	1119270b 	tstne	r9, fp, lsl #14
 508:	40061201 	andmi	r1, r6, r1, lsl #4
 50c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 510:	01000000 	mrseq	r0, (UNDEF: 0)
 514:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 518:	0e030b13 	vmoveq.32	d3[0], r0
 51c:	01110e1b 	tsteq	r1, fp, lsl lr
 520:	17100612 			; <UNDEFINED> instruction: 0x17100612
 524:	13020000 	movwne	r0, #8192	; 0x2000
 528:	3a0b0b01 	bcc	2c3134 <startup-0x1fd3cecc>
 52c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 530:	0013010b 	andseq	r0, r3, fp, lsl #2
 534:	000d0300 	andeq	r0, sp, r0, lsl #6
 538:	0b3a0e03 	bleq	e83d4c <startup-0x1f17c2b4>
 53c:	0b390b3b 	bleq	e43230 <startup-0x1f1bcdd0>
 540:	0b381349 	bleq	e0526c <startup-0x1f1fad94>
 544:	35040000 	strcc	r0, [r4, #-0]
 548:	00134900 	andseq	r4, r3, r0, lsl #18
 54c:	00240500 	eoreq	r0, r4, r0, lsl #10
 550:	0b3e0b0b 	bleq	f83184 <startup-0x1f07ce7c>
 554:	00000e03 	andeq	r0, r0, r3, lsl #28
 558:	03001606 	movweq	r1, #1542	; 0x606
 55c:	3b0b3a0e 	blcc	2ced9c <startup-0x1fd31264>
 560:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 564:	07000013 	smladeq	r0, r3, r0, r0
 568:	0b0b000f 	bleq	2c05ac <startup-0x1fd3fa54>
 56c:	00001349 	andeq	r1, r0, r9, asr #6
 570:	03000d08 	movweq	r0, #3336	; 0xd08
 574:	3b0b3a08 	blcc	2ced9c <startup-0x1fd31264>
 578:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 57c:	000b3813 	andeq	r3, fp, r3, lsl r8
 580:	01130900 	tsteq	r3, r0, lsl #18
 584:	0b3a050b 	bleq	e819b8 <startup-0x1f17e648>
 588:	0b390b3b 	bleq	e4327c <startup-0x1f1bcd84>
 58c:	00001301 	andeq	r1, r0, r1, lsl #6
 590:	0b00240a 	bleq	95c0 <startup-0x1fff6a40>
 594:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 598:	0b000008 	bleq	5c0 <startup-0x1ffffa40>
 59c:	13490101 	movtne	r0, #37121	; 0x9101
 5a0:	00001301 	andeq	r1, r0, r1, lsl #6
 5a4:	4900210c 	stmdbmi	r0, {r2, r3, r8, sp}
 5a8:	00052f13 	andeq	r2, r5, r3, lsl pc
 5ac:	00340d00 	eorseq	r0, r4, r0, lsl #26
 5b0:	0b3a0e03 	bleq	e83dc4 <startup-0x1f17c23c>
 5b4:	0b390b3b 	bleq	e432a8 <startup-0x1f1bcd58>
 5b8:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 5bc:	00001802 	andeq	r1, r0, r2, lsl #16
 5c0:	3f012e0e 	svccc	0x00012e0e
 5c4:	3a0e0319 	bcc	381230 <startup-0x1fc7edd0>
 5c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5cc:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 5d0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 5d4:	96184006 	ldrls	r4, [r8], -r6
 5d8:	13011942 	movwne	r1, #6466	; 0x1942
 5dc:	340f0000 	strcc	r0, [pc], #-0	; 5e4 <startup-0x1ffffa1c>
 5e0:	3a080300 	bcc	2011e8 <startup-0x1fdfee18>
 5e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5e8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 5ec:	10000018 	andne	r0, r0, r8, lsl r0
 5f0:	13490021 	movtne	r0, #36897	; 0x9021
 5f4:	00000b2f 	andeq	r0, r0, pc, lsr #22
 5f8:	3f012e11 	svccc	0x00012e11
 5fc:	3a0e0319 	bcc	381268 <startup-0x1fc7ed98>
 600:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 604:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 608:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 60c:	97184006 	ldrls	r4, [r8, -r6]
 610:	13011942 	movwne	r1, #6466	; 0x1942
 614:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
 618:	03193f01 	tsteq	r9, #1, 30
 61c:	3b0b3a0e 	blcc	2cee5c <startup-0x1fd311a4>
 620:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 624:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 628:	97184006 	ldrls	r4, [r8, -r6]
 62c:	00001942 	andeq	r1, r0, r2, asr #18
 630:	03000513 	movweq	r0, #1299	; 0x513
 634:	3b0b3a08 	blcc	2cee5c <startup-0x1fd311a4>
 638:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 63c:	00180213 	andseq	r0, r8, r3, lsl r2
 640:	11010000 	mrsne	r0, (UNDEF: 1)
 644:	130e2501 	movwne	r2, #58625	; 0xe501
 648:	1b0e030b 	blne	38127c <startup-0x1fc7ed84>
 64c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 650:	00171006 	andseq	r1, r7, r6
 654:	01130200 	tsteq	r3, r0, lsl #4
 658:	0b3a0b0b 	bleq	e8328c <startup-0x1f17cd74>
 65c:	0b390b3b 	bleq	e43350 <startup-0x1f1bccb0>
 660:	00001301 	andeq	r1, r0, r1, lsl #6
 664:	03000d03 	movweq	r0, #3331	; 0xd03
 668:	3b0b3a0e 	blcc	2ceea8 <startup-0x1fd31158>
 66c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 670:	000b3813 	andeq	r3, fp, r3, lsl r8
 674:	00350400 	eorseq	r0, r5, r0, lsl #8
 678:	00001349 	andeq	r1, r0, r9, asr #6
 67c:	0b002405 	bleq	9698 <startup-0x1fff6968>
 680:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 684:	0600000e 	streq	r0, [r0], -lr
 688:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 68c:	0b3b0b3a 	bleq	ec337c <startup-0x1f13cc84>
 690:	13490b39 	movtne	r0, #39737	; 0x9b39
 694:	0f070000 	svceq	0x00070000
 698:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 69c:	08000013 	stmdaeq	r0, {r0, r1, r4}
 6a0:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 6a4:	0b3b0b3a 	bleq	ec3394 <startup-0x1f13cc6c>
 6a8:	13490b39 	movtne	r0, #39737	; 0x9b39
 6ac:	00000b38 	andeq	r0, r0, r8, lsr fp
 6b0:	0b011309 	bleq	452dc <startup-0x1ffbad24>
 6b4:	3b0b3a05 	blcc	2ceed0 <startup-0x1fd31130>
 6b8:	010b390b 	tsteq	fp, fp, lsl #18
 6bc:	0a000013 	beq	710 <startup-0x1ffff8f0>
 6c0:	0b0b0024 	bleq	2c0758 <startup-0x1fd3f8a8>
 6c4:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 6c8:	010b0000 	mrseq	r0, (UNDEF: 11)
 6cc:	01134901 	tsteq	r3, r1, lsl #18
 6d0:	0c000013 	stceq	0, cr0, [r0], {19}
 6d4:	13490021 	movtne	r0, #36897	; 0x9021
 6d8:	0000052f 	andeq	r0, r0, pc, lsr #10
 6dc:	0300340d 	movweq	r3, #1037	; 0x40d
 6e0:	3b0b3a0e 	blcc	2cef20 <startup-0x1fd310e0>
 6e4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 6e8:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
 6ec:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
 6f0:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 6f4:	0b3a0e03 	bleq	e83f08 <startup-0x1f17c0f8>
 6f8:	0b390b3b 	bleq	e433ec <startup-0x1f1bcc14>
 6fc:	06120111 			; <UNDEFINED> instruction: 0x06120111
 700:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 704:	0f000019 	svceq	0x00000019
 708:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 70c:	0b3a0e03 	bleq	e83f20 <startup-0x1f17c0e0>
 710:	0b390b3b 	bleq	e43404 <startup-0x1f1bcbfc>
 714:	06120111 			; <UNDEFINED> instruction: 0x06120111
 718:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 71c:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000014 	andeq	r0, r0, r4, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
	...
  18:	0000001c 	andeq	r0, r0, ip, lsl r0
  1c:	00f70002 	rscseq	r0, r7, r2
  20:	00040000 	andeq	r0, r4, r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000104 	andeq	r0, r0, r4, lsl #2
	...
  38:	0000001c 	andeq	r0, r0, ip, lsl r0
  3c:	02c50002 	sbceq	r0, r5, #2
  40:	00040000 	andeq	r0, r4, r0
  44:	00000000 	andeq	r0, r0, r0
  48:	20000114 	andcs	r0, r0, r4, lsl r1
  4c:	000003c0 	andeq	r0, r0, r0, asr #7
	...
  58:	00000024 	andeq	r0, r0, r4, lsr #32
  5c:	076e0002 	strbeq	r0, [lr, -r2]!
  60:	00040000 	andeq	r0, r4, r0
  64:	00000000 	andeq	r0, r0, r0
  68:	200004d4 	ldrdcs	r0, [r0], -r4
  6c:	0000069c 	muleq	r0, ip, r6
  70:	20000000 	andcs	r0, r0, r0
  74:	0000000c 	andeq	r0, r0, ip
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	0e020002 	cdpeq	0, 0, cr0, cr2, cr2, {0}
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	20000b70 	andcs	r0, r0, r0, ror fp
  94:	00000120 	andeq	r0, r0, r0, lsr #2
	...
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	10940002 	addsne	r0, r4, r2
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	20000c90 	mulcs	r0, r0, ip
  b4:	000000a6 	andeq	r0, r0, r6, lsr #1
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000064 	andeq	r0, r0, r4, rrx
   4:	005e0003 	subseq	r0, lr, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	726e6568 	rsbvc	r6, lr, #104, 10	; 0x1a000000
  28:	6e4f2f79 	mcrvs	15, 2, r2, cr15, cr9, {3}
  2c:	69724465 	ldmdbvs	r2!, {r0, r2, r5, r6, sl, lr}^
  30:	532f6576 			; <UNDEFINED> instruction: 0x532f6576
  34:	7669726b 	strbtvc	r7, [r9], -fp, ror #4
  38:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
  3c:	3254562f 	subscc	r5, r4, #49283072	; 0x2f00000
  40:	4f4d2f31 	svcmi	0x004d2f31
  44:	4f4d2f50 	svcmi	0x004d2f50
  48:	4f4d2f50 	svcmi	0x004d2f50
  4c:	6e732f50 	mrcvs	15, 3, r2, cr3, cr0, {2}
  50:	00656b61 	rsbeq	r6, r5, r1, ror #22
  54:	63656400 	cmnvs	r5, #0, 8
  58:	6172616c 	cmnvs	r2, ip, ror #2
  5c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  60:	00682e73 	rsbeq	r2, r8, r3, ror lr
  64:	00000001 	andeq	r0, r0, r1
  68:	00000127 	andeq	r0, r0, r7, lsr #2
  6c:	00750003 	rsbseq	r0, r5, r3
  70:	01020000 	mrseq	r0, (UNDEF: 2)
  74:	000d0efb 	strdeq	r0, [sp], -fp
  78:	01010101 	tsteq	r1, r1, lsl #2
  7c:	01000000 	mrseq	r0, (UNDEF: 0)
  80:	43010000 	movwmi	r0, #4096	; 0x1000
  84:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  88:	2f737265 	svccs	0x00737265
  8c:	726e6568 	rsbvc	r6, lr, #104, 10	; 0x1a000000
  90:	6e4f2f79 	mcrvs	15, 2, r2, cr15, cr9, {3}
  94:	69724465 	ldmdbvs	r2!, {r0, r2, r5, r6, sl, lr}^
  98:	532f6576 			; <UNDEFINED> instruction: 0x532f6576
  9c:	7669726b 	strbtvc	r7, [r9], -fp, ror #4
  a0:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
  a4:	3254562f 	subscc	r5, r4, #49283072	; 0x2f00000
  a8:	4f4d2f31 	svcmi	0x004d2f31
  ac:	4f4d2f50 	svcmi	0x004d2f50
  b0:	4f4d2f50 	svcmi	0x004d2f50
  b4:	6e732f50 	mrcvs	15, 3, r2, cr3, cr0, {2}
  b8:	00656b61 	rsbeq	r6, r5, r1, ror #22
  bc:	756f6300 	strbvc	r6, [pc, #-768]!	; fffffdc4 <points+0xdfff5c94>
  c0:	6e69746e 	cdpvs	4, 6, cr7, cr9, cr14, {3}
  c4:	69635f67 	stmdbvs	r3!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
  c8:	69756372 	ldmdbvs	r5!, {r1, r4, r5, r6, r8, r9, sp, lr}^
  cc:	632e7374 			; <UNDEFINED> instruction: 0x632e7374
  d0:	00000100 	andeq	r0, r0, r0, lsl #2
  d4:	6c636564 	cfstr64vs	mvdx6, [r3], #-400	; 0xfffffe70
  d8:	74617261 	strbtvc	r7, [r1], #-609	; 0xfffffd9f
  dc:	736e6f69 	cmnvc	lr, #420	; 0x1a4
  e0:	0100682e 	tsteq	r0, lr, lsr #16
  e4:	05000000 	streq	r0, [r0, #-0]
  e8:	02050001 	andeq	r0, r5, #1
  ec:	20000010 	andcs	r0, r0, r0, lsl r0
  f0:	30020517 	andcc	r0, r2, r7, lsl r5
  f4:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
  f8:	0c052f02 	stceq	15, cr2, [r5], {2}
  fc:	2f020520 	svccs	0x00020520
 100:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
 104:	0c052f02 	stceq	15, cr2, [r5], {2}
 108:	2f070520 	svccs	0x00070520
 10c:	02000a05 	andeq	r0, r0, #20480	; 0x5000
 110:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 114:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
 118:	07052e01 	streq	r2, [r5, -r1, lsl #28]
 11c:	01040200 	mrseq	r0, R12_usr
 120:	2102053c 	tstcs	r2, ip, lsr r5
 124:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
 128:	05a12f01 	streq	r2, [r1, #3841]!	; 0xf01
 12c:	04054c05 	streq	r4, [r5], #-3077	; 0xfffff3fb
 130:	3e070583 	cfsh32cc	mvfx0, mvfx7, #-61
 134:	05220b05 	streq	r0, [r2, #-2821]!	; 0xfffff4fb
 138:	1c052e03 	stcne	14, cr2, [r5], {3}
 13c:	03040200 	movweq	r0, #16896	; 0x4200
 140:	00180520 	andseq	r0, r8, r0, lsr #10
 144:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 148:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
 14c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 150:	07053d05 	streq	r3, [r5, -r5, lsl #26]
 154:	41010539 	tstmi	r1, r9, lsr r5
 158:	055a2305 	ldrbeq	r2, [sl, #-773]	; 0xfffffcfb
 15c:	03054b07 	movweq	r4, #23303	; 0x5b07
 160:	3d050522 	cfstr32cc	mvfx0, [r5, #-136]	; 0xffffff78
 164:	05390705 	ldreq	r0, [r9, #-1797]!	; 0xfffff8fb
 168:	02054101 	andeq	r4, r5, #1073741824	; 0x40000000
 16c:	5918055e 	ldmdbpl	r8, {r1, r2, r3, r4, r6, r8, sl}
 170:	053c1105 	ldreq	r1, [ip, #-261]!	; 0xfffffefb
 174:	1b052008 	blne	14819c <startup-0x1feb7e64>
 178:	3c21053d 	cfstr32cc	mvfx0, [r1], #-244	; 0xffffff0c
 17c:	053c2505 	ldreq	r2, [ip, #-1285]!	; 0xfffffafb
 180:	2905201b 	stmdbcs	r5, {r0, r1, r3, r4, sp}
 184:	3c10054a 	cfldr32cc	mvfx0, [r0], {74}	; 0x4a
 188:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
 18c:	07022f02 	streq	r2, [r2, -r2, lsl #30]
 190:	3c010100 	stfccs	f0, [r1], {-0}
 194:	03000002 	movweq	r0, #2
 198:	00007100 	andeq	r7, r0, r0, lsl #2
 19c:	fb010200 	blx	409a6 <startup-0x1ffbf65a>
 1a0:	01000d0e 	tsteq	r0, lr, lsl #26
 1a4:	00010101 	andeq	r0, r1, r1, lsl #2
 1a8:	00010000 	andeq	r0, r1, r0
 1ac:	3a430100 	bcc	10c05b4 <startup-0x1ef3fa4c>
 1b0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 1b4:	682f7372 	stmdavs	pc!, {r1, r4, r5, r6, r8, r9, ip, sp, lr}	; <UNPREDICTABLE>
 1b8:	79726e65 	ldmdbvc	r2!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 1bc:	656e4f2f 	strbvs	r4, [lr, #-3887]!	; 0xfffff0d1
 1c0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
 1c4:	6b532f65 	blvs	14cbf60 <startup-0x1eb340a0>
 1c8:	62766972 	rsbsvs	r6, r6, #1867776	; 0x1c8000
 1cc:	2f64726f 	svccs	0x0064726f
 1d0:	31325456 	teqcc	r2, r6, asr r4
 1d4:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 1d8:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 1dc:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 1e0:	616e732f 	cmnvs	lr, pc, lsr #6
 1e4:	0000656b 	andeq	r6, r0, fp, ror #10
 1e8:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 1ec:	69645f69 	stmdbvs	r4!, {r0, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 1f0:	616c7073 	smcvs	50947	; 0xc703
 1f4:	00632e79 	rsbeq	r2, r3, r9, ror lr
 1f8:	64000001 	strvs	r0, [r0], #-1
 1fc:	616c6365 	cmnvs	ip, r5, ror #6
 200:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 204:	2e736e6f 	cdpcs	14, 7, cr6, cr3, cr15, {3}
 208:	00010068 	andeq	r0, r1, r8, rrx
 20c:	2f050000 	svccs	0x00050000
 210:	14020500 	strne	r0, [r2], #-1280	; 0xfffffb00
 214:	03200001 			; <UNDEFINED> instruction: 0x03200001
 218:	0805010d 	stmdaeq	r5, {r0, r2, r3, r8}
 21c:	00120569 	andseq	r0, r2, r9, ror #10
 220:	3c020402 	cfstrscc	mvf0, [r2], {2}
 224:	02002a05 	andeq	r2, r0, #20480	; 0x5000
 228:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
 22c:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
 230:	0b053c03 	bleq	14f244 <startup-0x1feb0dbc>
 234:	2e1a0530 	cfmvr64hcs	r0, mvdx10
 238:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
 23c:	05320104 	ldreq	r0, [r2, #-260]!	; 0xfffffefc
 240:	0402000f 	streq	r0, [r2], #-15
 244:	75052f01 	strvc	r2, [r5, #-3841]	; 0xfffff0ff
 248:	01040200 	mrseq	r0, R12_usr
 24c:	006d0567 	rsbeq	r0, sp, r7, ror #10
 250:	3c010402 	cfstrscc	mvf0, [r1], {2}
 254:	02006005 	andeq	r6, r0, #5
 258:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
 25c:	0402000d 	streq	r0, [r2], #-13
 260:	5c052e01 	stcpl	14, cr2, [r5], {1}
 264:	01040200 	mrseq	r0, R12_usr
 268:	0010053c 	andseq	r0, r0, ip, lsr r5
 26c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 270:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
 274:	05210104 	streq	r0, [r1, #-260]!	; 0xfffffefc
 278:	1c053f08 	stcne	15, cr3, [r5], {8}
 27c:	01040200 	mrseq	r0, R12_usr
 280:	001f053c 	andseq	r0, pc, ip, lsr r5	; <UNPREDICTABLE>
 284:	3c010402 	cfstrscc	mvf0, [r1], {2}
 288:	052f0905 	streq	r0, [pc, #-2309]!	; fffff98b <points+0xdfff585b>
 28c:	0a053c0c 	beq	14f2c4 <startup-0x1feb0d3c>
 290:	2112052f 	tstcs	r2, pc, lsr #10
 294:	05590d05 	ldrbeq	r0, [r9, #-3333]	; 0xfffff2fb
 298:	0f053c11 	svceq	0x00053c11
 29c:	210e052e 	tstcs	lr, lr, lsr #10
 2a0:	053c1105 	ldreq	r1, [ip, #-261]!	; 0xfffffefb
 2a4:	0c05390a 			; <UNDEFINED> instruction: 0x0c05390a
 2a8:	2101054f 	tstcs	r1, pc, asr #10
 2ac:	68060577 	stmdavs	r6, {r0, r1, r2, r4, r5, r6, r8, sl}
 2b0:	05200405 	streq	r0, [r0, #-1029]!	; 0xfffffbfb
 2b4:	02054b10 	andeq	r4, r5, #16, 22	; 0x4000
 2b8:	20100566 	andscs	r0, r0, r6, ror #10
 2bc:	694b0105 	stmdbvs	fp, {r0, r2, r8}^
 2c0:	05680605 	strbeq	r0, [r8, #-1541]!	; 0xfffff9fb
 2c4:	08052004 	stmdaeq	r5, {r2, sp}
 2c8:	9e04054b 	cfsh32ls	mvfx0, mvfx4, #43
 2cc:	052f0205 	streq	r0, [pc, #-517]!	; cf <startup-0x1fffff31>
 2d0:	01052010 	tsteq	r5, r0, lsl r0
 2d4:	02056967 	andeq	r6, r5, #1687552	; 0x19c000
 2d8:	11053d68 	tstne	r5, r8, ror #26
 2dc:	3d020520 	cfstr32cc	mvfx0, [r2, #-128]	; 0xffffff80
 2e0:	3e01052f 	cfsh32cc	mvfx0, mvfx1, #31
 2e4:	3e020569 	cfsh32cc	mvfx0, mvfx2, #57
 2e8:	053f0405 	ldreq	r0, [pc, #-1029]!	; fffffeeb <points+0xdfff5dbb>
 2ec:	02052003 	andeq	r2, r5, #3
 2f0:	3d09053d 	cfstr32cc	mvfx0, [r9, #-244]	; 0xffffff0c
 2f4:	772f0105 	strvc	r0, [pc, -r5, lsl #2]!
 2f8:	3d670205 	sfmcc	f0, 2, [r7, #-20]!	; 0xffffffec
 2fc:	5901053d 	stmdbpl	r1, {r0, r2, r3, r4, r5, r8, sl}
 300:	6702054d 	strvs	r0, [r2, -sp, asr #10]
 304:	01053d3d 	tsteq	r5, sp, lsr sp
 308:	02054d59 	andeq	r4, r5, #5696	; 0x1640
 30c:	200f053e 	andcs	r0, pc, lr, lsr r5	; <UNPREDICTABLE>
 310:	3d2f0205 	sfmcc	f0, 4, [pc, #-20]!	; 304 <startup-0x1ffffcfc>
 314:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
 318:	0f055a02 	svceq	0x00055a02
 31c:	2f090520 	svccs	0x00090520
 320:	a12f0105 			; <UNDEFINED> instruction: 0xa12f0105
 324:	053d0f05 	ldreq	r0, [sp, #-3845]!	; 0xfffff0fb
 328:	053d6702 	ldreq	r6, [sp, #-1794]!	; 0xfffff8fe
 32c:	0f053d0b 	svceq	0x00053d0b
 330:	67090559 	smlsdvs	r9, r9, r5, r0
 334:	852f0105 	strhi	r0, [pc, #-261]!	; 237 <startup-0x1ffffdc9>
 338:	05670705 	strbeq	r0, [r7, #-1797]!	; 0xfffff8fb
 33c:	0402000a 	streq	r0, [r2], #-10
 340:	1e052001 	cdpne	0, 0, cr2, cr5, cr1, {0}
 344:	01040200 	mrseq	r0, R12_usr
 348:	0007053c 	andeq	r0, r7, ip, lsr r5
 34c:	3c010402 	cfstrscc	mvf0, [r1], {2}
 350:	3d2f0205 	sfmcc	f0, 4, [pc, #-20]!	; 344 <startup-0x1ffffcbc>
 354:	05590105 	ldrbeq	r0, [r9, #-261]	; 0xfffffefb
 358:	02054c18 	andeq	r4, r5, #24, 24	; 0x1800
 35c:	3d3e3d30 	ldccc	13, cr3, [lr, #-192]!	; 0xffffff40
 360:	3d3e3d3e 	ldccc	13, cr3, [lr, #-248]!	; 0xffffff08
 364:	3f3d0105 	svccc	0x003d0105
 368:	05670705 	strbeq	r0, [r7, #-1797]!	; 0xfffff8fb
 36c:	0402000a 	streq	r0, [r2], #-10
 370:	1e052001 	cdpne	0, 0, cr2, cr5, cr1, {0}
 374:	01040200 	mrseq	r0, R12_usr
 378:	0007053c 	andeq	r0, r7, ip, lsr r5
 37c:	3c010402 	cfstrscc	mvf0, [r1], {2}
 380:	3d2f0205 	sfmcc	f0, 4, [pc, #-20]!	; 374 <startup-0x1ffffc8c>
 384:	3d010559 	cfstr32cc	mvfx0, [r1, #-356]	; 0xfffffe9c
 388:	9107054d 	tstls	r7, sp, asr #10
 38c:	05670405 	strbeq	r0, [r7, #-1029]!	; 0xfffffbfb
 390:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
 394:	02054a01 	andeq	r4, r5, #4096	; 0x1000
 398:	9f010559 	svcls	0x00010559
 39c:	5a02054f 	bpl	818e0 <startup-0x1ff7e720>
 3a0:	4b04052f 	blmi	101864 <startup-0x1fefe79c>
 3a4:	052f0705 	streq	r0, [pc, #-1797]!	; fffffca7 <points+0xdfff5b77>
 3a8:	03052116 	movweq	r2, #20758	; 0x5116
 3ac:	4909053c 	stmdbmi	r9, {r2, r3, r4, r5, r8, sl}
 3b0:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
 3b4:	04053102 	streq	r3, [r5], #-258	; 0xfffffefe
 3b8:	2f07054b 	svccs	0x0007054b
 3bc:	05211605 	streq	r1, [r1, #-1541]!	; 0xfffff9fb
 3c0:	09053c03 	stmdbeq	r5, {r0, r1, sl, fp, ip, sp}
 3c4:	2e070549 	cfsh32cs	mvfx0, mvfx7, #41
 3c8:	05310905 	ldreq	r0, [r1, #-2309]!	; 0xfffff6fb
 3cc:	04022101 	streq	r2, [r2], #-257	; 0xfffffeff
 3d0:	ff010100 			; <UNDEFINED> instruction: 0xff010100
 3d4:	03000003 	movweq	r0, #3
 3d8:	00006800 	andeq	r6, r0, r0, lsl #16
 3dc:	fb010200 	blx	40be6 <startup-0x1ffbf41a>
 3e0:	01000d0e 	tsteq	r0, lr, lsl #26
 3e4:	00010101 	andeq	r0, r1, r1, lsl #2
 3e8:	00010000 	andeq	r0, r1, r0
 3ec:	3a430100 	bcc	10c07f4 <startup-0x1ef3f80c>
 3f0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 3f4:	682f7372 	stmdavs	pc!, {r1, r4, r5, r6, r8, r9, ip, sp, lr}	; <UNPREDICTABLE>
 3f8:	79726e65 	ldmdbvc	r2!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 3fc:	656e4f2f 	strbvs	r4, [lr, #-3887]!	; 0xfffff0d1
 400:	76697244 	strbtvc	r7, [r9], -r4, asr #4
 404:	6b532f65 	blvs	14cc1a0 <startup-0x1eb33e60>
 408:	62766972 	rsbsvs	r6, r6, #1867776	; 0x1c8000
 40c:	2f64726f 	svccs	0x0064726f
 410:	31325456 	teqcc	r2, r6, asr r4
 414:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 418:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 41c:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 420:	616e732f 	cmnvs	lr, pc, lsr #6
 424:	0000656b 	andeq	r6, r0, fp, ror #10
 428:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
 42c:	0100632e 	tsteq	r0, lr, lsr #6
 430:	65640000 	strbvs	r0, [r4, #-0]!
 434:	72616c63 	rsbvc	r6, r1, #25344	; 0x6300
 438:	6f697461 	svcvs	0x00697461
 43c:	682e736e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}
 440:	00000100 	andeq	r0, r0, r0, lsl #2
 444:	00010500 	andeq	r0, r1, r0, lsl #10
 448:	00000205 	andeq	r0, r0, r5, lsl #4
 44c:	13192000 	tstne	r9, #0
 450:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
 454:	01000302 	tsteq	r0, r2, lsl #6
 458:	00010501 	andeq	r0, r1, r1, lsl #10
 45c:	04d40205 	ldrbeq	r0, [r4], #517	; 0x205
 460:	12032000 	andne	r2, r3, #0
 464:	21020501 	tstcs	r2, r1, lsl #10
 468:	21010513 	tstcs	r1, r3, lsl r5
 46c:	21020524 	tstcs	r2, r4, lsr #10
 470:	21010513 	tstcs	r1, r3, lsl r5
 474:	21020524 	tstcs	r2, r4, lsr #10
 478:	21010513 	tstcs	r1, r3, lsl r5
 47c:	21020524 	tstcs	r2, r4, lsr #10
 480:	21010513 	tstcs	r1, r3, lsl r5
 484:	05200c03 	streq	r0, [r0, #-3075]!	; 0xfffff3fd
 488:	06054b16 			; <UNDEFINED> instruction: 0x06054b16
 48c:	2f0a052e 	svccs	0x000a052e
 490:	052e0205 	streq	r0, [lr, #-517]!	; 0xfffffdfb
 494:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
 498:	28052203 	stmdacs	r5, {r0, r1, r9, sp}
 49c:	03040200 	movweq	r0, #16896	; 0x4200
 4a0:	0032052e 	eorseq	r0, r2, lr, lsr #10
 4a4:	66030402 	strvs	r0, [r3], -r2, lsl #8
 4a8:	02002b05 	andeq	r2, r0, #5120	; 0x1400
 4ac:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
 4b0:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
 4b4:	19053c03 	stmdbne	r5, {r0, r1, sl, fp, ip, sp}
 4b8:	03040200 	movweq	r0, #16896	; 0x4200
 4bc:	0028054b 	eoreq	r0, r8, fp, asr #10
 4c0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 4c4:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
 4c8:	05660304 	strbeq	r0, [r6, #-772]!	; 0xfffffcfc
 4cc:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
 4d0:	11052e03 	tstne	r5, r3, lsl #28
 4d4:	03040200 	movweq	r0, #16896	; 0x4200
 4d8:	0003053c 	andeq	r0, r3, ip, lsr r5
 4dc:	4b030402 	blmi	c14ec <startup-0x1ff3eb14>
 4e0:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
 4e4:	057e0304 	ldrbeq	r0, [lr, #-772]!	; 0xfffffcfc
 4e8:	04020002 	streq	r0, [r2], #-2
 4ec:	01053c01 	tsteq	r5, r1, lsl #24
 4f0:	16055b50 			; <UNDEFINED> instruction: 0x16055b50
 4f4:	2e06054b 	cfsh32cs	mvfx0, mvfx6, #43
 4f8:	052f0a05 	streq	r0, [pc, #-2565]!	; fffffafb <points+0xdfff59cb>
 4fc:	19052e02 	stmdbne	r5, {r1, r9, sl, fp, sp}
 500:	03040200 	movweq	r0, #16896	; 0x4200
 504:	00280522 	eoreq	r0, r8, r2, lsr #10
 508:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 50c:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
 510:	05660304 	strbeq	r0, [r6, #-772]!	; 0xfffffcfc
 514:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
 518:	11052e03 	tstne	r5, r3, lsl #28
 51c:	03040200 	movweq	r0, #16896	; 0x4200
 520:	0019053c 	andseq	r0, r9, ip, lsr r5
 524:	4b030402 	blmi	c1534 <startup-0x1ff3eacc>
 528:	02002805 	andeq	r2, r0, #327680	; 0x50000
 52c:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
 530:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
 534:	2b056603 	blcs	159d48 <startup-0x1fea62b8>
 538:	03040200 	movweq	r0, #16896	; 0x4200
 53c:	0011052e 	andseq	r0, r1, lr, lsr #10
 540:	3c030402 	cfstrscc	mvf0, [r3], {2}
 544:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
 548:	054b0304 	strbeq	r0, [fp, #-772]	; 0xfffffcfc
 54c:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
 550:	02057e03 	andeq	r7, r5, #3, 28	; 0x30
 554:	01040200 	mrseq	r0, R12_usr
 558:	5001053c 	andpl	r0, r1, ip, lsr r5
 55c:	055a2405 	ldrbeq	r2, [sl, #-1029]	; 0xfffffbfb
 560:	054b4c02 	strbeq	r4, [fp, #-3074]	; 0xfffff3fe
 564:	054d4b01 	strbeq	r4, [sp, #-2817]	; 0xfffff4ff
 568:	053d670e 	ldreq	r6, [sp, #-1806]!	; 0xfffff8f2
 56c:	054e3d01 	strbeq	r3, [lr, #-3329]	; 0xfffff2ff
 570:	19054c10 	stmdbne	r5, {r4, sl, fp, lr}
 574:	2e10052e 	cfmul64cs	mvdx0, mvdx0, mvdx14
 578:	2e19053d 	mrccs	5, 0, r0, cr9, cr13, {1}
 57c:	052e1005 	streq	r1, [lr, #-5]!
 580:	054e3d01 	strbeq	r3, [lr, #-3329]	; 0xfffff2ff
 584:	11054b13 	tstne	r5, r3, lsl fp
 588:	2f130558 	svccs	0x00130558
 58c:	05581105 	ldrbeq	r1, [r8, #-261]	; 0xfffffefb
 590:	23052f01 	movwcs	r2, #24321	; 0x5f01
 594:	054a2103 	strbeq	r2, [sl, #-259]	; 0xfffffefd
 598:	09036709 	stmdbeq	r3, {r0, r3, r8, r9, sl, sp, lr}
 59c:	0105ac08 	tsteq	r5, r8, lsl #24
 5a0:	d82c0583 	stmdale	ip!, {r0, r1, r7, r8, sl}
 5a4:	055a0b05 	ldrbeq	r0, [sl, #-2821]	; 0xfffff4fb
 5a8:	13052e02 	movwne	r2, #24066	; 0x5e02
 5ac:	03040200 	movweq	r0, #16896	; 0x4200
 5b0:	000f0521 	andeq	r0, pc, r1, lsr #10
 5b4:	66030402 	strvs	r0, [r3], -r2, lsl #8
 5b8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
 5bc:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
 5c0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
 5c4:	02053b03 	andeq	r3, r5, #3072	; 0xc00
 5c8:	01040200 	mrseq	r0, R12_usr
 5cc:	4d01053c 	cfstr32mi	mvfx0, [r1, #-240]	; 0xffffff10
 5d0:	5a0d0560 	bpl	341b58 <startup-0x1fcbe4a8>
 5d4:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
 5d8:	28052e23 	stmdacs	r5, {r0, r1, r5, r9, sl, fp, sp}
 5dc:	01040200 	mrseq	r0, R12_usr
 5e0:	0034052e 	eorseq	r0, r4, lr, lsr #10
 5e4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 5e8:	02002305 	andeq	r2, r0, #335544320	; 0x14000000
 5ec:	002e0104 	eoreq	r0, lr, r4, lsl #2
 5f0:	06030402 	streq	r0, [r3], -r2, lsl #8
 5f4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
 5f8:	02002e04 	andeq	r2, r0, #4, 28	; 0x40
 5fc:	05200604 	streq	r0, [r0, #-1540]!	; 0xfffff9fc
 600:	04020001 	streq	r0, [r2], #-1
 604:	4d210606 	stcmi	6, cr0, [r1, #-24]!	; 0xffffffe8
 608:	05681005 	strbeq	r1, [r8, #-5]!
 60c:	0d052e05 	stceq	14, cr2, [r5, #-20]	; 0xffffffec
 610:	01040200 	mrseq	r0, R12_usr
 614:	001b052f 	andseq	r0, fp, pc, lsr #10
 618:	2d010402 	cfstrscs	mvf0, [r1, #-8]
 61c:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
 620:	0d052d23 	stceq	13, cr2, [r5, #-140]	; 0xffffff74
 624:	2d180530 	cfldr32cs	mvfx0, [r8, #-192]	; 0xffffff40
 628:	05300a05 	ldreq	r0, [r0, #-2565]!	; 0xfffff5fb
 62c:	0205310b 	andeq	r3, r5, #-1073741822	; 0xc0000002
 630:	2111052e 	tstcs	r1, lr, lsr #10
 634:	05821405 	streq	r1, [r2, #1029]	; 0x405
 638:	06052027 	streq	r2, [r5], -r7, lsr #32
 63c:	000e052e 	andeq	r0, lr, lr, lsr #10
 640:	2f010402 	svccs	0x00010402
 644:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
 648:	05820104 	streq	r0, [r2, #260]	; 0x104
 64c:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
 650:	2e052001 	cdpcs	0, 0, cr2, cr5, cr1, {0}
 654:	01040200 	mrseq	r0, R12_usr
 658:	300b052d 	andcc	r0, fp, sp, lsr #10
 65c:	02001b05 	andeq	r1, r0, #5120	; 0x1400
 660:	052b0204 	streq	r0, [fp, #-516]!	; 0xfffffdfc
 664:	04020002 	streq	r0, [r2], #-2
 668:	09053c01 	stmdbeq	r5, {r0, sl, fp, ip, sp}
 66c:	21010550 	tstcs	r1, r0, asr r5
 670:	054d1205 	strbeq	r1, [sp, #-517]	; 0xfffffdfb
 674:	02053e07 	andeq	r3, r5, #7, 28	; 0x70
 678:	83060592 	movwhi	r0, #26002	; 0x6592
 67c:	05300b05 	ldreq	r0, [r0, #-2821]!	; 0xfffff4fb
 680:	1c052e02 	stcne	14, cr2, [r5], {2}
 684:	03040200 	movweq	r0, #16896	; 0x4200
 688:	000b0521 	andeq	r0, fp, r1, lsr #10
 68c:	4a030402 	bmi	c169c <startup-0x1ff3e964>
 690:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
 694:	05670304 	strbeq	r0, [r7, #-772]!	; 0xfffffcfc
 698:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
 69c:	02053a03 	andeq	r3, r5, #12288	; 0x3000
 6a0:	01040200 	mrseq	r0, R12_usr
 6a4:	0805413c 	stmdaeq	r5, {r2, r3, r4, r5, r8, lr}
 6a8:	00090575 	andeq	r0, r9, r5, ror r5
 6ac:	20010402 	andcs	r0, r1, r2, lsl #8
 6b0:	02000805 	andeq	r0, r0, #327680	; 0x50000
 6b4:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 6b8:	05bd2f01 	ldreq	r2, [sp, #3841]!	; 0xf01
 6bc:	2f2f4c02 	svccs	0x002f4c02
 6c0:	2f0a0531 	svccs	0x000a0531
 6c4:	4c09054b 	cfstr32mi	mvfx0, [r9], {75}	; 0x4b
 6c8:	053c0205 	ldreq	r0, [ip, #-517]!	; 0xfffffdfb
 6cc:	06054d08 	streq	r4, [r5], -r8, lsl #26
 6d0:	ac050523 	cfstr32ge	mvfx0, [r5], {35}	; 0x23
 6d4:	68230405 	stmdavs	r3!, {r0, r2, sl}
 6d8:	5a0d0559 	bpl	341c44 <startup-0x1fcbe3bc>
 6dc:	054a0405 	strbeq	r0, [sl, #-1029]	; 0xfffffbfb
 6e0:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
 6e4:	0f052103 	svceq	0x00052103
 6e8:	03040200 	movweq	r0, #16896	; 0x4200
 6ec:	001a0574 	andseq	r0, sl, r4, ror r5
 6f0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 6f4:	02000b05 	andeq	r0, r0, #5120	; 0x1400
 6f8:	68080304 	stmdavs	r8, {r2, r8, r9}
 6fc:	02002905 	andeq	r2, r0, #81920	; 0x14000
 700:	05550304 	ldrbeq	r0, [r5, #-772]	; 0xfffffcfc
 704:	04020004 	streq	r0, [r2], #-4
 708:	14056601 	strne	r6, [r5], #-1537	; 0xfffff9ff
 70c:	2e0d056c 	cfsh32cs	mvfx0, mvfx13, #60
 710:	05300405 	ldreq	r0, [r0, #-1029]!	; 0xfffffbfb
 714:	2a055a15 	bcs	156f70 <startup-0x1fea9090>
 718:	4a1e053c 	bmi	781c10 <startup-0x1f87e3f0>
 71c:	05ad1505 	streq	r1, [sp, #1285]!	; 0x505
 720:	1e053c2a 	cdpne	12, 0, cr3, cr5, cr10, {1}
 724:	a00d053c 	andge	r0, sp, ip, lsr r5
 728:	054a0405 	strbeq	r0, [sl, #-1029]	; 0xfffffbfb
 72c:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
 730:	29052203 	stmdbcs	r5, {r0, r1, r9, sp}
 734:	03040200 	movweq	r0, #16896	; 0x4200
 738:	0018054a 	andseq	r0, r8, sl, asr #10
 73c:	ac030402 	cfstrsge	mvf0, [r3], {2}
 740:	02002605 	andeq	r2, r0, #5242880	; 0x500000
 744:	05bb0304 	ldreq	r0, [fp, #772]!	; 0x304
 748:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
 74c:	18053c03 	stmdane	r5, {r0, r1, sl, fp, ip, sp}
 750:	03040200 	movweq	r0, #16896	; 0x4200
 754:	001f059e 	mulseq	pc, lr, r5	; <UNPREDICTABLE>
 758:	b7030402 	strlt	r0, [r3, -r2, lsl #8]
 75c:	02001a05 	andeq	r1, r0, #20480	; 0x5000
 760:	05580104 	ldrbeq	r0, [r8, #-260]	; 0xfffffefc
 764:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
 768:	04053c01 	streq	r3, [r5], #-3073	; 0xfffff3ff
 76c:	01040200 	mrseq	r0, R12_usr
 770:	0305343c 	movweq	r3, #21564	; 0x543c
 774:	0559685a 	ldrbeq	r6, [r9, #-2138]	; 0xfffff7a6
 778:	0605590d 	streq	r5, [r5], -sp, lsl #18
 77c:	0034052e 	eorseq	r0, r4, lr, lsr #10
 780:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 784:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
 788:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 78c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
 790:	0b057401 	bleq	15d79c <startup-0x1fea2864>
 794:	3c03053f 	cfstr32cc	mvfx0, [r3], {63}	; 0x3f
 798:	05ae1705 	streq	r1, [lr, #1797]!	; 0x705
 79c:	04054a0c 	streq	r4, [r5], #-2572	; 0xfffff5f4
 7a0:	22170558 	andscs	r0, r7, #88, 10	; 0x16000000
 7a4:	054a0c05 	strbeq	r0, [sl, #-3077]	; 0xfffff3fb
 7a8:	17056604 	strne	r6, [r5, -r4, lsl #12]
 7ac:	4a0c0522 	bmi	301c3c <startup-0x1fcfe3c4>
 7b0:	05660405 	strbeq	r0, [r6, #-1029]!	; 0xfffffbfb
 7b4:	0c052217 	sfmeq	f2, 4, [r5], {23}
 7b8:	5804054a 	stmdapl	r4, {r1, r3, r6, r8, sl}
 7bc:	05240305 	streq	r0, [r4, #-773]!	; 0xfffffcfb
 7c0:	3c4d030a 	mcrrcc	3, 0, r0, sp, cr10
 7c4:	05ba0805 	ldreq	r0, [sl, #2053]!	; 0x805
 7c8:	2e360302 	cdpcs	3, 3, cr0, cr6, cr2, {0}
 7cc:	01052f3d 	tsteq	r5, sp, lsr pc
 7d0:	00230268 	eoreq	r0, r3, r8, ror #4
 7d4:	012f0101 			; <UNDEFINED> instruction: 0x012f0101
 7d8:	00030000 	andeq	r0, r3, r0
 7dc:	0000006a 	andeq	r0, r0, sl, rrx
 7e0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 7e4:	0101000d 	tsteq	r1, sp
 7e8:	00000101 	andeq	r0, r0, r1, lsl #2
 7ec:	00000100 	andeq	r0, r0, r0, lsl #2
 7f0:	2f3a4301 	svccs	0x003a4301
 7f4:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 7f8:	65682f73 	strbvs	r2, [r8, #-3955]!	; 0xfffff08d
 7fc:	2f79726e 	svccs	0x0079726e
 800:	44656e4f 	strbtmi	r6, [r5], #-3663	; 0xfffff1b1
 804:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 808:	726b532f 	rsbvc	r5, fp, #-1140850688	; 0xbc000000
 80c:	6f627669 	svcvs	0x00627669
 810:	562f6472 			; <UNDEFINED> instruction: 0x562f6472
 814:	2f313254 	svccs	0x00313254
 818:	2f504f4d 	svccs	0x00504f4d
 81c:	2f504f4d 	svccs	0x00504f4d
 820:	2f504f4d 	svccs	0x00504f4d
 824:	6b616e73 	blvs	185c1f8 <startup-0x1e7a3e08>
 828:	6b000065 	blvs	9c4 <startup-0x1ffff63c>
 82c:	61707965 	cmnvs	r0, r5, ror #18
 830:	00632e64 	rsbeq	r2, r3, r4, ror #28
 834:	64000001 	strvs	r0, [r0], #-1
 838:	616c6365 	cmnvs	ip, r5, ror #6
 83c:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 840:	2e736e6f 	cdpcs	14, 7, cr6, cr3, cr15, {3}
 844:	00010068 	andeq	r0, r1, r8, rrx
 848:	01050000 	mrseq	r0, (UNDEF: 5)
 84c:	70020500 	andvc	r0, r2, r0, lsl #10
 850:	1820000b 	stmdane	r0!, {r0, r1, r3}
 854:	054b0205 	strbeq	r0, [fp, #-517]	; 0xfffffdfb
 858:	052f080b 	streq	r0, [pc, #-2059]!	; 55 <startup-0x1fffffab>
 85c:	03052019 	movweq	r2, #20505	; 0x5019
 860:	210b052e 	tstcs	fp, lr, lsr #10
 864:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
 868:	0b052e03 	bleq	14c07c <startup-0x1feb3f84>
 86c:	20190521 	andscs	r0, r9, r1, lsr #10
 870:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
 874:	1905210b 	stmdbne	r5, {r0, r1, r3, r8, sp}
 878:	2e030520 	cfsh32cs	mvfx0, mvfx3, #16
 87c:	05220c05 	streq	r0, [r2, #-3077]!	; 0xfffff3fb
 880:	0105201a 	tsteq	r5, sl, lsl r0
 884:	06058530 			; <UNDEFINED> instruction: 0x06058530
 888:	2004053e 	andcs	r0, r4, lr, lsr r5
 88c:	053d0705 	ldreq	r0, [sp, #-1797]!	; 0xfffff8fb
 890:	13054a04 	movwne	r4, #23044	; 0x5a04
 894:	01040200 	mrseq	r0, R12_usr
 898:	2f070520 	svccs	0x00070520
 89c:	054a0405 	strbeq	r0, [sl, #-1029]	; 0xfffffbfb
 8a0:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
 8a4:	07052001 	streq	r2, [r5, -r1]
 8a8:	4a04052f 	bmi	101d6c <startup-0x1fefe294>
 8ac:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
 8b0:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 8b4:	04052f07 	streq	r2, [r5], #-3847	; 0xfffff0f9
 8b8:	0013054a 	andseq	r0, r3, sl, asr #10
 8bc:	20010402 	andcs	r0, r1, r2, lsl #8
 8c0:	052f0905 	streq	r0, [pc, #-2309]!	; ffffffc3 <points+0xdfff5e93>
 8c4:	056c2101 	strbeq	r2, [ip, #-257]!	; 0xfffffeff
 8c8:	0a053d10 	beq	14fd10 <startup-0x1feb02f0>
 8cc:	2e020569 	cfsh32cs	mvfx0, mvfx2, #57
 8d0:	05210305 	streq	r0, [r1, #-773]!	; 0xfffffcfb
 8d4:	05054b0a 	streq	r4, [r5, #-2826]	; 0xfffff4f6
 8d8:	3d04054a 	cfstr32cc	mvfx0, [r4, #-296]	; 0xfffffed8
 8dc:	053d1505 	ldreq	r1, [sp, #-1285]!	; 0xfffffafb
 8e0:	1d052e10 	stcne	14, cr2, [r5, #-64]	; 0xffffffc0
 8e4:	2e180520 	cfmul64cs	mvdx0, mvdx8, mvdx0
 8e8:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
 8ec:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
 8f0:	02053802 	andeq	r3, r5, #131072	; 0x20000
 8f4:	01040200 	mrseq	r0, R12_usr
 8f8:	0805433c 	stmdaeq	r5, {r2, r3, r4, r5, r8, r9, lr}
 8fc:	0001053d 	andeq	r0, r1, sp, lsr r5
 900:	21010402 	tstcs	r1, r2, lsl #8
 904:	01000702 	tsteq	r0, r2, lsl #14
 908:	0000c301 	andeq	ip, r0, r1, lsl #6
 90c:	68000300 	stmdavs	r0, {r8, r9}
 910:	02000000 	andeq	r0, r0, #0
 914:	0d0efb01 	vstreq	d15, [lr, #-4]
 918:	01010100 	mrseq	r0, (UNDEF: 17)
 91c:	00000001 	andeq	r0, r0, r1
 920:	01000001 	tsteq	r0, r1
 924:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffffee9 <points+0xdfff5db9>
 928:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 92c:	6e65682f 	cdpvs	8, 6, cr6, cr5, cr15, {1}
 930:	4f2f7972 	svcmi	0x002f7972
 934:	7244656e 	subvc	r6, r4, #461373440	; 0x1b800000
 938:	2f657669 	svccs	0x00657669
 93c:	69726b53 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, r9, fp, sp, lr}^
 940:	726f6276 	rsbvc	r6, pc, #1610612743	; 0x60000007
 944:	54562f64 	ldrbpl	r2, [r6], #-3940	; 0xfffff09c
 948:	4d2f3132 	stfmis	f3, [pc, #-200]!	; 888 <startup-0x1ffff778>
 94c:	4d2f504f 	stcmi	0, cr5, [pc, #-316]!	; 818 <startup-0x1ffff7e8>
 950:	4d2f504f 	stcmi	0, cr5, [pc, #-316]!	; 81c <startup-0x1ffff7e4>
 954:	732f504f 			; <UNDEFINED> instruction: 0x732f504f
 958:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 95c:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
 960:	632e7469 			; <UNDEFINED> instruction: 0x632e7469
 964:	00000100 	andeq	r0, r0, r0, lsl #2
 968:	6c636564 	cfstr64vs	mvdx6, [r3], #-400	; 0xfffffe70
 96c:	74617261 	strbtvc	r7, [r1], #-609	; 0xfffffd9f
 970:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 974:	0100682e 	tsteq	r0, lr, lsr #16
 978:	05000000 	streq	r0, [r0, #-0]
 97c:	02050002 	andeq	r0, r5, #2
 980:	20000c90 	mulcs	r0, r0, ip
 984:	0f052f17 	svceq	0x00052f17
 988:	3d020520 	cfstr32cc	mvfx0, [r2, #-128]	; 0xffffff80
 98c:	05201005 	streq	r1, [r0, #-5]!
 990:	0f052f02 	svceq	0x00052f02
 994:	3d020520 	cfstr32cc	mvfx0, [r2, #-128]	; 0xffffff80
 998:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
 99c:	055b3d01 	ldrbeq	r3, [fp, #-3329]	; 0xfffff2ff
 9a0:	0f052f02 	svceq	0x00052f02
 9a4:	2f020520 	svccs	0x00020520
 9a8:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
 9ac:	10052f02 	andne	r2, r5, r2, lsl #30
 9b0:	2f010520 	svccs	0x00010520
 9b4:	2f0c0593 	svccs	0x000c0593
 9b8:	05830205 	streq	r0, [r3, #517]	; 0x205
 9bc:	053d200c 	ldreq	r2, [sp, #-12]!
 9c0:	05858401 	streq	r8, [r5, #1025]	; 0x401
 9c4:	2f2f2f02 	svccs	0x002f2f02
 9c8:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
 9cc:	01010003 	tsteq	r1, r3

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	555c3a43 	ldrbpl	r3, [ip, #-2627]	; 0xfffff5bd
   4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
   8:	6e65685c 	mcrvs	8, 3, r6, cr5, cr12, {2}
   c:	4f5c7972 	svcmi	0x005c7972
  10:	7244656e 	subvc	r6, r4, #461373440	; 0x1b800000
  14:	5c657669 	stclpl	6, cr7, [r5], #-420	; 0xfffffe5c
  18:	69726b53 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, r9, fp, sp, lr}^
  1c:	726f6276 	rsbvc	r6, pc, #1610612743	; 0x60000007
  20:	54565c64 	ldrbpl	r5, [r6], #-3172	; 0xfffff39c
  24:	4d5c3132 	ldfmie	f3, [ip, #-200]	; 0xffffff38
  28:	4d5c504f 	ldclmi	0, cr5, [ip, #-316]	; 0xfffffec4
  2c:	4d5c504f 	ldclmi	0, cr5, [ip, #-316]	; 0xfffffec4
  30:	735c504f 	cmpvc	ip, #79	; 0x4f
  34:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
  38:	494f5000 	stmdbmi	pc, {ip, lr}^	; <UNPREDICTABLE>
  3c:	7500544e 	strvc	r5, [r0, #-1102]	; 0xfffffbb2
  40:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
  44:	2064656e 	rsbcs	r6, r4, lr, ror #10
  48:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
  4c:	6f687300 	svcvs	0x00687300
  50:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
  54:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
  58:	2064656e 	rsbcs	r6, r4, lr, ror #10
  5c:	00746e69 	rsbseq	r6, r4, r9, ror #28
  60:	6c696174 	stfvse	f6, [r9], #-464	; 0xfffffe30
  64:	6f65675f 	svcvs	0x0065675f
  68:	7274656d 	rsbsvc	r6, r4, #457179136	; 0x1b400000
  6c:	3a430079 	bcc	10c0258 <startup-0x1ef3fda8>
  70:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
  74:	682f7372 	stmdavs	pc!, {r1, r4, r5, r6, r8, r9, ip, sp, lr}	; <UNPREDICTABLE>
  78:	79726e65 	ldmdbvc	r2!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
  7c:	656e4f2f 	strbvs	r4, [lr, #-3887]!	; 0xfffff0d1
  80:	76697244 	strbtvc	r7, [r9], -r4, asr #4
  84:	6b532f65 	blvs	14cbe20 <startup-0x1eb341e0>
  88:	62766972 	rsbsvs	r6, r6, #1867776	; 0x1c8000
  8c:	2f64726f 	svccs	0x0064726f
  90:	31325456 	teqcc	r2, r6, asr r4
  94:	504f4d2f 	subpl	r4, pc, pc, lsr #26
  98:	504f4d2f 	subpl	r4, pc, pc, lsr #26
  9c:	504f4d2f 	subpl	r4, pc, pc, lsr #26
  a0:	616e732f 	cmnvs	lr, pc, lsr #6
  a4:	672f656b 	strvs	r6, [pc, -fp, ror #10]!
  a8:	656d6f65 	strbvs	r6, [sp, #-3941]!	; 0xfffff09b
  ac:	65697274 	strbvs	r7, [r9, #-628]!	; 0xfffffd8c
  b0:	00632e73 	rsbeq	r2, r3, r3, ror lr
  b4:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
  b8:	69730078 	ldmdbvs	r3!, {r3, r4, r5, r6}^
  bc:	0079657a 	rsbseq	r6, r9, sl, ror r5
  c0:	20554e47 	subscs	r4, r5, r7, asr #28
  c4:	20393943 	eorscs	r3, r9, r3, asr #18
  c8:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
  cc:	30322031 	eorscc	r2, r2, r1, lsr r0
  d0:	30313931 	eorscc	r3, r1, r1, lsr r9
  d4:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  d8:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  dc:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  e0:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  e4:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  e8:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  ec:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  f0:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  f4:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  f8:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  fc:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
 100:	205d3939 	subscs	r3, sp, r9, lsr r9
 104:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
 108:	20626d75 	rsbcs	r6, r2, r5, ror sp
 10c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
 110:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
 114:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
 118:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
 11c:	616d2d20 	cmnvs	sp, r0, lsr #26
 120:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
 124:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
 128:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
 12c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
 130:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
 134:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
 138:	00393963 	eorseq	r3, r9, r3, ror #18
 13c:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 140:	65675f65 	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
 144:	74656d6f 	strbtvc	r6, [r5], #-3439	; 0xfffff291
 148:	73007972 	movwvc	r7, #2418	; 0x972
 14c:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 150:	6f65675f 	svcvs	0x0065675f
 154:	7274656d 	rsbsvc	r6, r4, #457179136	; 0x1b400000
 158:	756e0079 	strbvc	r0, [lr, #-121]!	; 0xffffff87
 15c:	696f706d 	stmdbvs	pc!, {r0, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
 160:	0073746e 	rsbseq	r7, r3, lr, ror #8
 164:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
 168:	43006d6f 	movwmi	r6, #3439	; 0xd6f
 16c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
 170:	2f737265 	svccs	0x00737265
 174:	726e6568 	rsbvc	r6, lr, #104, 10	; 0x1a000000
 178:	6e4f2f79 	mcrvs	15, 2, r2, cr15, cr9, {3}
 17c:	69724465 	ldmdbvs	r2!, {r0, r2, r5, r6, sl, lr}^
 180:	532f6576 			; <UNDEFINED> instruction: 0x532f6576
 184:	7669726b 	strbtvc	r7, [r9], -fp, ror #4
 188:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 18c:	3254562f 	subscc	r5, r4, #49283072	; 0x2f00000
 190:	4f4d2f31 	svcmi	0x004d2f31
 194:	4f4d2f50 	svcmi	0x004d2f50
 198:	4f4d2f50 	svcmi	0x004d2f50
 19c:	6e732f50 	mrcvs	15, 3, r2, cr3, cr0, {2}
 1a0:	2f656b61 	svccs	0x00656b61
 1a4:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 1a8:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 1ac:	7269635f 	rsbvc	r6, r9, #2080374785	; 0x7c000001
 1b0:	74697563 	strbtvc	r7, [r9], #-1379	; 0xfffffa9d
 1b4:	00632e73 	rsbeq	r2, r3, r3, ror lr
 1b8:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
 1bc:	6e5f6d6f 	cdpvs	13, 5, cr6, cr15, cr15, {3}
 1c0:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
 1c4:	65640072 	strbvs	r0, [r4, #-114]!	; 0xffffff8e
 1c8:	5f79616c 	svcpl	0x0079616c
 1cc:	6e303532 	mrcvs	5, 1, r3, cr0, cr2, {1}
 1d0:	65640073 	strbvs	r0, [r4, #-115]!	; 0xffffff8d
 1d4:	5f79616c 	svcpl	0x0079616c
 1d8:	6c6c696d 			; <UNDEFINED> instruction: 0x6c6c696d
 1dc:	68730069 	ldmdavs	r3!, {r0, r3, r5, r6}^
 1e0:	2074726f 	rsbscs	r7, r4, pc, ror #4
 1e4:	00746e69 	rsbseq	r6, r4, r9, ror #28
 1e8:	616c6564 	cmnvs	ip, r4, ror #10
 1ec:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 1f0:	006f7263 	rsbeq	r7, pc, r3, ror #4
 1f4:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 1f8:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
 1fc:	5f657469 	svcpl	0x00657469
 200:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 204:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 208:	77007265 	strvc	r7, [r0, -r5, ror #4]
 20c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 210:	6373615f 	cmnvs	r3, #-1073741801	; 0xc0000017
 214:	62006969 	andvs	r6, r0, #1720320	; 0x1a4000
 218:	00727273 	rsbseq	r7, r2, r3, ror r2
 21c:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 220:	6e695f69 	cdpvs	15, 6, cr5, cr9, cr9, {3}
 224:	6f007469 	svcvs	0x00007469
 228:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 22c:	73610072 	cmnvc	r1, #114	; 0x72
 230:	5f696963 	svcpl	0x00696963
 234:	78746f67 	ldmdavc	r4!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, sp, lr}^
 238:	646f0079 	strbtvs	r0, [pc], #-121	; 240 <startup-0x1ffffdc0>
 23c:	67694872 			; <UNDEFINED> instruction: 0x67694872
 240:	74690068 	strbtvc	r0, [r9], #-104	; 0xffffff98
 244:	6100616f 	tstvs	r0, pc, ror #2
 248:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 24c:	6165725f 	cmnvs	r5, pc, asr r2
 250:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
 254:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
 258:	706d7400 	rsbvc	r7, sp, r0, lsl #8
 25c:	6168635f 	cmnvs	r8, pc, asr r3
 260:	696c0072 	stmdbvs	ip!, {r1, r4, r5, r6}^
 264:	0031656e 	eorseq	r6, r1, lr, ror #10
 268:	49504750 	ldmdbmi	r0, {r4, r6, r8, r9, sl, lr}^
 26c:	6162004f 	cmnvs	r2, pc, asr #32
 270:	74006573 	strvc	r6, [r0], #-1395	; 0xfffffa8d
 274:	765f706d 	ldrbvc	r7, [pc], -sp, rrx
 278:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 27c:	72666100 	rsbvc	r6, r6, #0, 2
 280:	66610068 	strbtvs	r0, [r1], -r8, rrx
 284:	61006c72 	tstvs	r0, r2, ror ip
 288:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 28c:	6d6f635f 	stclvs	3, cr6, [pc, #-380]!	; 118 <startup-0x1ffffee8>
 290:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
 294:	6e696c00 	cdpvs	12, 6, cr6, cr9, cr0, {0}
 298:	61003265 	tstvs	r0, r5, ror #4
 29c:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 2a0:	6165725f 	cmnvs	r5, pc, asr r2
 2a4:	6f635f64 	svcvs	0x00635f64
 2a8:	6f72746e 	svcvs	0x0072746e
 2ac:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
 2b0:	63736100 	cmnvs	r3, #0, 2
 2b4:	635f6969 	cmpvs	pc, #1720320	; 0x1a4000
 2b8:	5f6c7274 	svcpl	0x006c7274
 2bc:	5f746962 	svcpl	0x00746962
 2c0:	00746573 	rsbseq	r6, r4, r3, ror r5
 2c4:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 2c8:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
 2cc:	5f657469 	svcpl	0x00657469
 2d0:	00646d63 	rsbeq	r6, r4, r3, ror #26
 2d4:	64707570 	ldrbtvs	r7, [r0], #-1392	; 0xfffffa90
 2d8:	65520072 	ldrbvs	r0, [r2, #-114]	; 0xffffff8e
 2dc:	76726573 			; <UNDEFINED> instruction: 0x76726573
 2e0:	00306465 	eorseq	r6, r0, r5, ror #8
 2e4:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
 2e8:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
 2ec:	65520031 	ldrbvs	r0, [r2, #-49]	; 0xffffffcf
 2f0:	76726573 			; <UNDEFINED> instruction: 0x76726573
 2f4:	00326465 	eorseq	r6, r2, r5, ror #8
 2f8:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
 2fc:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
 300:	65720033 	ldrbvs	r0, [r2, #-51]!	; 0xffffffcd
 304:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
 308:	72646f00 	rsbvc	r6, r4, #0, 30
 30c:	00776f4c 	rsbseq	r6, r7, ip, asr #30
 310:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 314:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
 318:	5f657469 	svcpl	0x00657469
 31c:	61746164 	cmnvs	r4, r4, ror #2
 320:	72646900 	rsbvc	r6, r4, #0, 18
 324:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
 328:	70736f00 	rsbsvc	r6, r3, r0, lsl #30
 32c:	72646565 	rsbvc	r6, r4, #423624704	; 0x19400000
 330:	72646900 	rsbvc	r6, r4, #0, 18
 334:	00776f4c 	rsbseq	r6, r7, ip, asr #30
 338:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 33c:	74635f69 	strbtvc	r5, [r3], #-3945	; 0xfffff097
 340:	625f6c72 	subsvs	r6, pc, #29184	; 0x7200
 344:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
 348:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 34c:	6c6f6300 	stclvs	3, cr6, [pc], #-0	; 354 <startup-0x1ffffcac>
 350:	006e6d75 	rsbeq	r6, lr, r5, ror sp
 354:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff919 <points+0xdfff57e9>
 358:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 35c:	6e65682f 	cdpvs	8, 6, cr6, cr5, cr15, {1}
 360:	4f2f7972 	svcmi	0x002f7972
 364:	7244656e 	subvc	r6, r4, #461373440	; 0x1b800000
 368:	2f657669 	svccs	0x00657669
 36c:	69726b53 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, r9, fp, sp, lr}^
 370:	726f6276 	rsbvc	r6, pc, #1610612743	; 0x60000007
 374:	54562f64 	ldrbpl	r2, [r6], #-3940	; 0xfffff09c
 378:	4d2f3132 	stfmis	f3, [pc, #-200]!	; 2b8 <startup-0x1ffffd48>
 37c:	4d2f504f 	stcmi	0, cr5, [pc, #-316]!	; 248 <startup-0x1ffffdb8>
 380:	4d2f504f 	stcmi	0, cr5, [pc, #-316]!	; 24c <startup-0x1ffffdb4>
 384:	732f504f 			; <UNDEFINED> instruction: 0x732f504f
 388:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 38c:	6373612f 	cmnvs	r3, #-1073741813	; 0xc000000b
 390:	645f6969 	ldrbvs	r6, [pc], #-2409	; 398 <startup-0x1ffffc68>
 394:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 398:	632e7961 			; <UNDEFINED> instruction: 0x632e7961
 39c:	646f6d00 	strbtvs	r6, [pc], #-3328	; 3a4 <startup-0x1ffffc5c>
 3a0:	6c007265 	sfmvs	f7, 4, [r0], {101}	; 0x65
 3a4:	00726b63 	rsbseq	r6, r2, r3, ror #22
 3a8:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 3ac:	65725f69 	ldrbvs	r5, [r2, #-3945]!	; 0xfffff097
 3b0:	645f6461 	ldrbvs	r6, [pc], #-1121	; 3b8 <startup-0x1ffffc48>
 3b4:	00617461 	rsbeq	r7, r1, r1, ror #8
 3b8:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 3bc:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
 3c0:	5f657469 	svcpl	0x00657469
 3c4:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 3c8:	72747000 	rsbsvc	r7, r4, #0
 3cc:	47500031 	smmlarmi	r0, r1, r0, r0
 3d0:	454d4f45 	strbmi	r4, [sp, #-3909]	; 0xfffff0bb
 3d4:	00595254 	subseq	r5, r9, r4, asr r2
 3d8:	756f6d61 	strbvc	r6, [pc, #-3425]!	; fffff67f <points+0xdfff554f>
 3dc:	6400746e 	strvs	r7, [r0], #-1134	; 0xfffffb92
 3e0:	5f776172 	svcpl	0x00776172
 3e4:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
 3e8:	6d007463 	cfstrsvs	mvf7, [r0, #-396]	; 0xfffffe74
 3ec:	0065766f 	rsbeq	r7, r5, pc, ror #12
 3f0:	31776f72 	cmncc	r7, r2, ror pc
 3f4:	72696400 	rsbvc	r6, r9, #0, 8
 3f8:	69640078 	stmdbvs	r4!, {r3, r4, r5, r6}^
 3fc:	6f007972 	svcvs	0x00007972
 400:	63656a62 	cmnvs	r5, #401408	; 0x62000
 404:	6f635f74 	svcvs	0x00635f74
 408:	64696c6c 	strbtvs	r6, [r9], #-3180	; 0xfffff394
 40c:	6d007365 	stcvs	3, cr7, [r0, #-404]	; 0xfffffe6c
 410:	5f65766f 	svcpl	0x0065766f
 414:	6b616e73 	blvs	185bde8 <startup-0x1e7a4218>
 418:	70610065 	rsbvc	r0, r1, r5, rrx
 41c:	4f656c70 	svcmi	0x00656c70
 420:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
 424:	6570735f 	ldrbvs	r7, [r0, #-863]!	; 0xfffffca1
 428:	70006465 	andvc	r6, r0, r5, ror #8
 42c:	0078736f 	rsbseq	r7, r8, pc, ror #6
 430:	79736f70 	ldmdbvc	r3!, {r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 434:	766f6d00 	strbtvc	r6, [pc], -r0, lsl #26
 438:	70615f65 	rsbvc	r5, r1, r5, ror #30
 43c:	00656c70 	rsbeq	r6, r5, r0, ror ip
 440:	706d756e 	rsbvc	r7, sp, lr, ror #10
 444:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 448:	72630073 	rsbvc	r0, r3, #115	; 0x73
 44c:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
 450:	6961745f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
 454:	616d006c 	cmnvs	sp, ip, rrx
 458:	68006e69 	stmdavs	r0, {r0, r3, r5, r6, r9, sl, fp, sp, lr}
 45c:	5f686769 	svcpl	0x00686769
 460:	726f6373 	rsbvc	r6, pc, #-872415231	; 0xcc000001
 464:	68635f65 	stmdavs	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 468:	67007261 	strvs	r7, [r0, -r1, ror #4]
 46c:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 470:	705f6369 	subsvc	r6, pc, r9, ror #6
 474:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 478:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
 47c:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
 480:	70615f74 	rsbvc	r5, r1, r4, ror pc
 484:	74730070 	ldrbtvc	r0, [r3], #-112	; 0xffffff90
 488:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
 48c:	72640070 	rsbvc	r0, r4, #112	; 0x70
 490:	43007761 	movwmi	r7, #1889	; 0x761
 494:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
 498:	2f737265 	svccs	0x00737265
 49c:	726e6568 	rsbvc	r6, lr, #104, 10	; 0x1a000000
 4a0:	6e4f2f79 	mcrvs	15, 2, r2, cr15, cr9, {3}
 4a4:	69724465 	ldmdbvs	r2!, {r0, r2, r5, r6, sl, lr}^
 4a8:	532f6576 			; <UNDEFINED> instruction: 0x532f6576
 4ac:	7669726b 	strbtvc	r7, [r9], -fp, ror #4
 4b0:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 4b4:	3254562f 	subscc	r5, r4, #49283072	; 0x2f00000
 4b8:	4f4d2f31 	svcmi	0x004d2f31
 4bc:	4f4d2f50 	svcmi	0x004d2f50
 4c0:	4f4d2f50 	svcmi	0x004d2f50
 4c4:	6e732f50 	mrcvs	15, 3, r2, cr3, cr0, {2}
 4c8:	2f656b61 	svccs	0x00656b61
 4cc:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
 4d0:	6700632e 	strvs	r6, [r0, -lr, lsr #6]
 4d4:	5f656d61 	svcpl	0x00656d61
 4d8:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
 4dc:	61726700 	cmnvs	r2, r0, lsl #14
 4e0:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 4e4:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 4e8:	696c6174 	stmdbvs	ip!, {r2, r4, r5, r6, r8, sp, lr}^
 4ec:	6400657a 	strvs	r6, [r0], #-1402	; 0xfffffa86
 4f0:	5f776172 	svcpl	0x00776172
 4f4:	616a626f 	cmnvs	sl, pc, ror #4
 4f8:	67007272 	smlsdxvs	r0, r2, r2, r7
 4fc:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 500:	705f6369 	subsvc	r6, pc, r9, ror #6
 504:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 508:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
 50c:	73007261 	movwvc	r7, #609	; 0x261
 510:	6f5f7465 	svcvs	0x005f7465
 514:	63656a62 	cmnvs	r5, #401408	; 0x62000
 518:	70735f74 	rsbsvc	r5, r3, r4, ror pc
 51c:	00646565 	rsbeq	r6, r4, r5, ror #10
 520:	6b616e73 	blvs	185bef4 <startup-0x1e7a410c>
 524:	61745f65 	cmnvs	r4, r5, ror #30
 528:	67006c69 	strvs	r6, [r0, -r9, ror #24]
 52c:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 530:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 534:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 538:	7263735f 	rsbvc	r7, r3, #2080374785	; 0x7c000001
 53c:	006e6565 	rsbeq	r6, lr, r5, ror #10
 540:	6b616e73 	blvs	185bf14 <startup-0x1e7a40ec>
 544:	74004f65 	strvc	r4, [r0], #-3941	; 0xfffff09b
 548:	006a624f 	rsbeq	r6, sl, pc, asr #4
 54c:	68676968 	stmdavs	r7!, {r3, r5, r6, r8, fp, sp, lr}^
 550:	6f63735f 	svcvs	0x0063735f
 554:	64006572 	strvs	r6, [r0], #-1394	; 0xfffffa8e
 558:	63776172 	cmnvs	r7, #-2147483620	; 0x8000001c
 55c:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 560:	6a626f5f 	bvs	189c2e4 <startup-0x1e763d1c>
 564:	00746365 	rsbseq	r6, r4, r5, ror #6
 568:	6e69616d 	powvsez	f6, f1, #5.0
 56c:	6e656d5f 	mcrvs	13, 3, r6, cr5, cr15, {2}
 570:	4f500075 	svcmi	0x00500075
 574:	43454a42 	movtmi	r4, #23106	; 0x5a42
 578:	6e730054 	mrcvs	0, 3, r0, cr3, cr4, {2}
 57c:	5f656b61 	svcpl	0x00656b61
 580:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 584:	74636100 	strbtvc	r6, [r3], #-256	; 0xffffff00
 588:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
 58c:	776f5265 	strbvc	r5, [pc, -r5, ror #4]!
 590:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
 594:	3a430062 	bcc	10c0724 <startup-0x1ef3f8dc>
 598:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 59c:	682f7372 	stmdavs	pc!, {r1, r4, r5, r6, r8, r9, ip, sp, lr}	; <UNPREDICTABLE>
 5a0:	79726e65 	ldmdbvc	r2!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 5a4:	656e4f2f 	strbvs	r4, [lr, #-3887]!	; 0xfffff0d1
 5a8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
 5ac:	6b532f65 	blvs	14cc348 <startup-0x1eb33cb8>
 5b0:	62766972 	rsbsvs	r6, r6, #1867776	; 0x1c8000
 5b4:	2f64726f 	svccs	0x0064726f
 5b8:	31325456 	teqcc	r2, r6, asr r4
 5bc:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 5c0:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 5c4:	504f4d2f 	subpl	r4, pc, pc, lsr #26
 5c8:	616e732f 	cmnvs	lr, pc, lsr #6
 5cc:	6b2f656b 	blvs	bd9b80 <startup-0x1f426480>
 5d0:	61707965 	cmnvs	r0, r5, ror #18
 5d4:	00632e64 	rsbeq	r2, r3, r4, ror #28
 5d8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 5dc:	006c6f43 	rsbeq	r6, ip, r3, asr #30
 5e0:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 5e4:	79656b5f 	stmdbvc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, fp, sp, lr}^
 5e8:	00646170 	rsbeq	r6, r4, r0, ror r1
 5ec:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 5f0:	6373615f 	cmnvs	r3, #-1073741801	; 0xc0000017
 5f4:	43006969 	movwmi	r6, #2409	; 0x969
 5f8:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
 5fc:	2f737265 	svccs	0x00737265
 600:	726e6568 	rsbvc	r6, lr, #104, 10	; 0x1a000000
 604:	6e4f2f79 	mcrvs	15, 2, r2, cr15, cr9, {3}
 608:	69724465 	ldmdbvs	r2!, {r0, r2, r5, r6, sl, lr}^
 60c:	532f6576 			; <UNDEFINED> instruction: 0x532f6576
 610:	7669726b 	strbtvc	r7, [r9], -fp, ror #4
 614:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 618:	3254562f 	subscc	r5, r4, #49283072	; 0x2f00000
 61c:	4f4d2f31 	svcmi	0x004d2f31
 620:	4f4d2f50 	svcmi	0x004d2f50
 624:	4f4d2f50 	svcmi	0x004d2f50
 628:	6e732f50 	mrcvs	15, 3, r2, cr3, cr0, {2}
 62c:	2f656b61 	svccs	0x00656b61
 630:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 634:	6900632e 	stmdbvs	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
 638:	5f74696e 	svcpl	0x0074696e
 63c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 640:	Address 0x00000640 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	00000018 	andeq	r0, r0, r8, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	20000010 	andcs	r0, r0, r0, lsl r0
  1c:	00000044 	andeq	r0, r0, r4, asr #32
  20:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  24:	41018e02 	tstmi	r1, r2, lsl #28
  28:	0000070d 	andeq	r0, r0, sp, lsl #14
  2c:	0000001c 	andeq	r0, r0, ip, lsl r0
  30:	00000000 	andeq	r0, r0, r0
  34:	20000054 	andcs	r0, r0, r4, asr r0
  38:	0000004c 	andeq	r0, r0, ip, asr #32
  3c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  40:	41018e02 	tstmi	r1, r2, lsl #28
  44:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  48:	00000007 	andeq	r0, r0, r7
  4c:	0000001c 	andeq	r0, r0, ip, lsl r0
  50:	00000000 	andeq	r0, r0, r0
  54:	200000a0 	andcs	r0, r0, r0, lsr #1
  58:	00000026 	andeq	r0, r0, r6, lsr #32
  5c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  60:	41018e02 	tstmi	r1, r2, lsl #28
  64:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  68:	00000007 	andeq	r0, r0, r7
  6c:	0000001c 	andeq	r0, r0, ip, lsl r0
  70:	00000000 	andeq	r0, r0, r0
  74:	200000c6 	andcs	r0, r0, r6, asr #1
  78:	0000004e 	andeq	r0, r0, lr, asr #32
  7c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  80:	41018e02 	tstmi	r1, r2, lsl #28
  84:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  88:	00000007 	andeq	r0, r0, r7
  8c:	0000000c 	andeq	r0, r0, ip
  90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  94:	7c020001 	stcvc	0, cr0, [r2], {1}
  98:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	0000008c 	andeq	r0, r0, ip, lsl #1
  a4:	20000114 	andcs	r0, r0, r4, lsl r1
  a8:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
  ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  b0:	41018e02 	tstmi	r1, r2, lsl #28
  b4:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
  b8:	00000007 	andeq	r0, r0, r7
  bc:	0000001c 	andeq	r0, r0, ip, lsl r0
  c0:	0000008c 	andeq	r0, r0, ip, lsl #1
  c4:	200001c4 	andcs	r0, r0, r4, asr #3
  c8:	00000038 	andeq	r0, r0, r8, lsr r0
  cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  d0:	41018e02 	tstmi	r1, r2, lsl #28
  d4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  d8:	00000007 	andeq	r0, r0, r7
  dc:	0000001c 	andeq	r0, r0, ip, lsl r0
  e0:	0000008c 	andeq	r0, r0, ip, lsl #1
  e4:	200001fc 	strdcs	r0, [r0], -ip
  e8:	00000048 	andeq	r0, r0, r8, asr #32
  ec:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  f0:	41018e02 	tstmi	r1, r2, lsl #28
  f4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  f8:	00000007 	andeq	r0, r0, r7
  fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 100:	0000008c 	andeq	r0, r0, ip, lsl #1
 104:	20000244 	andcs	r0, r0, r4, asr #4
 108:	00000030 	andeq	r0, r0, r0, lsr r0
 10c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 110:	41018e02 	tstmi	r1, r2, lsl #28
 114:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 118:	00000007 	andeq	r0, r0, r7
 11c:	0000001c 	andeq	r0, r0, ip, lsl r0
 120:	0000008c 	andeq	r0, r0, ip, lsl #1
 124:	20000274 	andcs	r0, r0, r4, ror r2
 128:	0000002c 	andeq	r0, r0, ip, lsr #32
 12c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 130:	41018e02 	tstmi	r1, r2, lsl #28
 134:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 138:	00000007 	andeq	r0, r0, r7
 13c:	0000001c 	andeq	r0, r0, ip, lsl r0
 140:	0000008c 	andeq	r0, r0, ip, lsl #1
 144:	200002a0 	andcs	r0, r0, r0, lsr #5
 148:	0000002a 	andeq	r0, r0, sl, lsr #32
 14c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 150:	41018e02 	tstmi	r1, r2, lsl #28
 154:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 158:	00000007 	andeq	r0, r0, r7
 15c:	0000001c 	andeq	r0, r0, ip, lsl r0
 160:	0000008c 	andeq	r0, r0, ip, lsl #1
 164:	200002ca 	andcs	r0, r0, sl, asr #5
 168:	0000002a 	andeq	r0, r0, sl, lsr #32
 16c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 170:	41018e02 	tstmi	r1, r2, lsl #28
 174:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 178:	00000007 	andeq	r0, r0, r7
 17c:	0000001c 	andeq	r0, r0, ip, lsl r0
 180:	0000008c 	andeq	r0, r0, ip, lsl #1
 184:	200002f4 	strdcs	r0, [r0], -r4
 188:	00000040 	andeq	r0, r0, r0, asr #32
 18c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 190:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 194:	180e4101 	stmdane	lr, {r0, r8, lr}
 198:	00070d41 	andeq	r0, r7, r1, asr #26
 19c:	0000001c 	andeq	r0, r0, ip, lsl r0
 1a0:	0000008c 	andeq	r0, r0, ip, lsl #1
 1a4:	20000334 	andcs	r0, r0, r4, lsr r3
 1a8:	00000048 	andeq	r0, r0, r8, asr #32
 1ac:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 1b0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 1b4:	180e4101 	stmdane	lr, {r0, r8, lr}
 1b8:	00070d41 	andeq	r0, r7, r1, asr #26
 1bc:	0000001c 	andeq	r0, r0, ip, lsl r0
 1c0:	0000008c 	andeq	r0, r0, ip, lsl #1
 1c4:	2000037c 	andcs	r0, r0, ip, ror r3
 1c8:	00000036 	andeq	r0, r0, r6, lsr r0
 1cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1d0:	41018e02 	tstmi	r1, r2, lsl #28
 1d4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 1d8:	00000007 	andeq	r0, r0, r7
 1dc:	00000018 	andeq	r0, r0, r8, lsl r0
 1e0:	0000008c 	andeq	r0, r0, ip, lsl #1
 1e4:	200003b2 			; <UNDEFINED> instruction: 0x200003b2
 1e8:	0000003a 	andeq	r0, r0, sl, lsr r0
 1ec:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1f0:	41018e02 	tstmi	r1, r2, lsl #28
 1f4:	0000070d 	andeq	r0, r0, sp, lsl #14
 1f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1fc:	0000008c 	andeq	r0, r0, ip, lsl #1
 200:	200003ec 	andcs	r0, r0, ip, ror #7
 204:	0000003c 	andeq	r0, r0, ip, lsr r0
 208:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 20c:	41018e02 	tstmi	r1, r2, lsl #28
 210:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 214:	00000007 	andeq	r0, r0, r7
 218:	0000001c 	andeq	r0, r0, ip, lsl r0
 21c:	0000008c 	andeq	r0, r0, ip, lsl #1
 220:	20000428 	andcs	r0, r0, r8, lsr #8
 224:	0000004c 	andeq	r0, r0, ip, asr #32
 228:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 22c:	41018e02 	tstmi	r1, r2, lsl #28
 230:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 234:	00000007 	andeq	r0, r0, r7
 238:	0000001c 	andeq	r0, r0, ip, lsl r0
 23c:	0000008c 	andeq	r0, r0, ip, lsl #1
 240:	20000474 	andcs	r0, r0, r4, ror r4
 244:	00000060 	andeq	r0, r0, r0, rrx
 248:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 24c:	41018e02 	tstmi	r1, r2, lsl #28
 250:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 254:	00000007 	andeq	r0, r0, r7
 258:	0000000c 	andeq	r0, r0, ip
 25c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 260:	7c020001 	stcvc	0, cr0, [r2], {1}
 264:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 268:	0000000c 	andeq	r0, r0, ip
 26c:	00000258 	andeq	r0, r0, r8, asr r2
 270:	20000000 	andcs	r0, r0, r0
 274:	0000000c 	andeq	r0, r0, ip
 278:	0000000c 	andeq	r0, r0, ip
 27c:	00000258 	andeq	r0, r0, r8, asr r2
 280:	200004d4 	ldrdcs	r0, [r0], -r4
 284:	00000006 	andeq	r0, r0, r6
 288:	0000000c 	andeq	r0, r0, ip
 28c:	00000258 	andeq	r0, r0, r8, asr r2
 290:	200004da 	ldrdcs	r0, [r0], -sl
 294:	00000006 	andeq	r0, r0, r6
 298:	0000000c 	andeq	r0, r0, ip
 29c:	00000258 	andeq	r0, r0, r8, asr r2
 2a0:	200004e0 	andcs	r0, r0, r0, ror #9
 2a4:	00000006 	andeq	r0, r0, r6
 2a8:	0000000c 	andeq	r0, r0, ip
 2ac:	00000258 	andeq	r0, r0, r8, asr r2
 2b0:	200004e6 	andcs	r0, r0, r6, ror #9
 2b4:	00000006 	andeq	r0, r0, r6
 2b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2bc:	00000258 	andeq	r0, r0, r8, asr r2
 2c0:	200004ec 	andcs	r0, r0, ip, ror #9
 2c4:	00000082 	andeq	r0, r0, r2, lsl #1
 2c8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 2cc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 2d0:	280e4101 	stmdacs	lr, {r0, r8, lr}
 2d4:	00070d41 	andeq	r0, r7, r1, asr #26
 2d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2dc:	00000258 	andeq	r0, r0, r8, asr r2
 2e0:	2000056e 	andcs	r0, r0, lr, ror #10
 2e4:	00000082 	andeq	r0, r0, r2, lsl #1
 2e8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 2ec:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 2f0:	280e4101 	stmdacs	lr, {r0, r8, lr}
 2f4:	00070d41 	andeq	r0, r7, r1, asr #26
 2f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2fc:	00000258 	andeq	r0, r0, r8, asr r2
 300:	200005f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 304:	00000020 	andeq	r0, r0, r0, lsr #32
 308:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 30c:	41018e02 	tstmi	r1, r2, lsl #28
 310:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 314:	00000007 	andeq	r0, r0, r7
 318:	0000001c 	andeq	r0, r0, ip, lsl r0
 31c:	00000258 	andeq	r0, r0, r8, asr r2
 320:	20000610 	andcs	r0, r0, r0, lsl r6
 324:	00000020 	andeq	r0, r0, r0, lsr #32
 328:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 32c:	41018e02 	tstmi	r1, r2, lsl #28
 330:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 334:	00000007 	andeq	r0, r0, r7
 338:	0000001c 	andeq	r0, r0, ip, lsl r0
 33c:	00000258 	andeq	r0, r0, r8, asr r2
 340:	20000630 	andcs	r0, r0, r0, lsr r6
 344:	0000002c 	andeq	r0, r0, ip, lsr #32
 348:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 34c:	41018e02 	tstmi	r1, r2, lsl #28
 350:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 354:	00000007 	andeq	r0, r0, r7
 358:	0000001c 	andeq	r0, r0, ip, lsl r0
 35c:	00000258 	andeq	r0, r0, r8, asr r2
 360:	2000065c 	andcs	r0, r0, ip, asr r6
 364:	0000002c 	andeq	r0, r0, ip, lsr #32
 368:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 36c:	41018e02 	tstmi	r1, r2, lsl #28
 370:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 374:	00000007 	andeq	r0, r0, r7
 378:	0000001c 	andeq	r0, r0, ip, lsl r0
 37c:	00000258 	andeq	r0, r0, r8, asr r2
 380:	20000688 	andcs	r0, r0, r8, lsl #13
 384:	00000070 	andeq	r0, r0, r0, ror r0
 388:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 38c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 390:	480e4101 	stmdami	lr, {r0, r8, lr}
 394:	00070d41 	andeq	r0, r7, r1, asr #26
 398:	0000001c 	andeq	r0, r0, ip, lsl r0
 39c:	00000258 	andeq	r0, r0, r8, asr r2
 3a0:	200006f8 	strdcs	r0, [r0], -r8
 3a4:	0000003e 	andeq	r0, r0, lr, lsr r0
 3a8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 3ac:	41018e02 	tstmi	r1, r2, lsl #28
 3b0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 3b4:	00000007 	andeq	r0, r0, r7
 3b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3bc:	00000258 	andeq	r0, r0, r8, asr r2
 3c0:	20000736 	andcs	r0, r0, r6, lsr r7
 3c4:	00000032 	andeq	r0, r0, r2, lsr r0
 3c8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 3cc:	41018e02 	tstmi	r1, r2, lsl #28
 3d0:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 3d4:	00000007 	andeq	r0, r0, r7
 3d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3dc:	00000258 	andeq	r0, r0, r8, asr r2
 3e0:	20000768 	andcs	r0, r0, r8, ror #14
 3e4:	00000086 	andeq	r0, r0, r6, lsl #1
 3e8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 3ec:	41018e02 	tstmi	r1, r2, lsl #28
 3f0:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
 3f4:	00000007 	andeq	r0, r0, r7
 3f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3fc:	00000258 	andeq	r0, r0, r8, asr r2
 400:	200007ee 	andcs	r0, r0, lr, ror #15
 404:	0000008a 	andeq	r0, r0, sl, lsl #1
 408:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 40c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 410:	400e4101 	andmi	r4, lr, r1, lsl #2
 414:	00070d41 	andeq	r0, r7, r1, asr #26
 418:	00000024 	andeq	r0, r0, r4, lsr #32
 41c:	00000258 	andeq	r0, r0, r8, asr r2
 420:	20000878 	andcs	r0, r0, r8, ror r8
 424:	000002f8 	strdeq	r0, [r0], -r8
 428:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 42c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 430:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 434:	d00e4201 	andle	r4, lr, r1, lsl #4
 438:	0d410190 	stfeqe	f0, [r1, #-576]	; 0xfffffdc0
 43c:	00000007 	andeq	r0, r0, r7
 440:	0000000c 	andeq	r0, r0, ip
 444:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 448:	7c020001 	stcvc	0, cr0, [r2], {1}
 44c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 450:	0000001c 	andeq	r0, r0, ip, lsl r0
 454:	00000440 	andeq	r0, r0, r0, asr #8
 458:	20000b70 	andcs	r0, r0, r0, ror fp
 45c:	00000064 	andeq	r0, r0, r4, rrx
 460:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 464:	41018e02 	tstmi	r1, r2, lsl #28
 468:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 46c:	00000007 	andeq	r0, r0, r7
 470:	0000001c 	andeq	r0, r0, ip, lsl r0
 474:	00000440 	andeq	r0, r0, r0, asr #8
 478:	20000bd4 	ldrdcs	r0, [r0], -r4
 47c:	00000054 	andeq	r0, r0, r4, asr r0
 480:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 484:	41018e02 	tstmi	r1, r2, lsl #28
 488:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 48c:	00000007 	andeq	r0, r0, r7
 490:	0000001c 	andeq	r0, r0, ip, lsl r0
 494:	00000440 	andeq	r0, r0, r0, asr #8
 498:	20000c28 	andcs	r0, r0, r8, lsr #24
 49c:	00000068 	andeq	r0, r0, r8, rrx
 4a0:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 4a4:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 4a8:	280e4101 	stmdacs	lr, {r0, r8, lr}
 4ac:	00070d41 	andeq	r0, r7, r1, asr #26
 4b0:	0000000c 	andeq	r0, r0, ip
 4b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 4b8:	7c020001 	stcvc	0, cr0, [r2], {1}
 4bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 4c0:	00000018 	andeq	r0, r0, r8, lsl r0
 4c4:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
 4c8:	20000c90 	mulcs	r0, r0, ip
 4cc:	0000002c 	andeq	r0, r0, ip, lsr #32
 4d0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 4d4:	41018e02 	tstmi	r1, r2, lsl #28
 4d8:	0000070d 	andeq	r0, r0, sp, lsl #14
 4dc:	00000018 	andeq	r0, r0, r8, lsl r0
 4e0:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
 4e4:	20000cbc 			; <UNDEFINED> instruction: 0x20000cbc
 4e8:	00000028 	andeq	r0, r0, r8, lsr #32
 4ec:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 4f0:	41018e02 	tstmi	r1, r2, lsl #28
 4f4:	0000070d 	andeq	r0, r0, sp, lsl #14
 4f8:	00000018 	andeq	r0, r0, r8, lsl r0
 4fc:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
 500:	20000ce4 	andcs	r0, r0, r4, ror #25
 504:	0000003c 	andeq	r0, r0, ip, lsr r0
 508:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 50c:	41018e02 	tstmi	r1, r2, lsl #28
 510:	0000070d 	andeq	r0, r0, sp, lsl #14
 514:	00000018 	andeq	r0, r0, r8, lsl r0
 518:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
 51c:	20000d20 	andcs	r0, r0, r0, lsr #26
 520:	00000016 	andeq	r0, r0, r6, lsl r0
 524:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 528:	41018e02 	tstmi	r1, r2, lsl #28
 52c:	0000070d 	andeq	r0, r0, sp, lsl #14
 530:	0000000c 	andeq	r0, r0, ip
 534:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 538:	7c010001 	stcvc	0, cr0, [r1], {1}
 53c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 540:	0000000c 	andeq	r0, r0, ip
 544:	00000530 	andeq	r0, r0, r0, lsr r5
 548:	20000d39 	andcs	r0, r0, r9, lsr sp
 54c:	0000010a 	andeq	r0, r0, sl, lsl #2
 550:	0000000c 	andeq	r0, r0, ip
 554:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 558:	7c010001 	stcvc	0, cr0, [r1], {1}
 55c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 560:	0000000c 	andeq	r0, r0, ip
 564:	00000550 	andeq	r0, r0, r0, asr r5
 568:	20000e4d 	andcs	r0, r0, sp, asr #28
 56c:	000001cc 	andeq	r0, r0, ip, asr #3

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	200004d4 	ldrdcs	r0, [r0], -r4
   4:	20000b70 	andcs	r0, r0, r0, ror fp
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...
